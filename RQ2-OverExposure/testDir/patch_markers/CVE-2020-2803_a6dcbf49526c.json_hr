{
    "nio/ByteBufferAs-X-Buffer.java.template": {
        "chunk_0": {
            "plus_lines": [],
            "minus_lines": [
                "         int lim = this.limit();",
                "        assert (pos <= lim);",
                "         int rem = (pos <= lim ? lim - pos : 0);"
            ]
        }
    },
    "nio/Direct-X-Buffer.java.template": {
        "chunk_1": {
            "plus_lines": [],
            "minus_lines": [
                "         int lim = this.limit();",
                "        assert (pos <= lim);",
                "         int rem = (pos <= lim ? lim - pos : 0);"
            ]
        }
    },
    "nio/Heap-X-Buffer.java.template": {
        "chunk_2": {
            "plus_lines": [
                "     public $Type$Buffer slice() {",
                "        int pos = this.position();",
                "        int lim = this.limit();",
                "        int rem = (pos <= lim ? lim - pos : 0);",
                "         return new Heap$Type$Buffer$RW$(hb,"
            ],
            "minus_lines": [
                "     public $Type$Buffer slice() {",
                "        int rem = this.remaining();",
                "         return new Heap$Type$Buffer$RW$(hb,"
            ]
        },
        "chunk_3": {
            "plus_lines": [
                "                                         rem,",
                "                                        pos + offset);",
                "     }"
            ],
            "minus_lines": [
                "                                         rem,",
                "                                        this.position() + offset);",
                "     }"
            ]
        }
    },
    "nio/StringCharBuffer.java": {
        "chunk_4": {
            "plus_lines": [
                "     public CharBuffer slice() {",
                "        int pos = this.position();",
                "        int lim = this.limit();",
                "        int rem = (pos <= lim ? lim - pos : 0);",
                "         return new StringCharBuffer(str,"
            ],
            "minus_lines": []
        },
        "chunk_5": {
            "plus_lines": [
                "                                     0,",
                "                                    rem,",
                "                                    rem,",
                "                                    offset + pos);",
                "     }"
            ],
            "minus_lines": [
                "                                     0,",
                "                                    this.remaining(),",
                "                                    this.remaining(),",
                "                                    offset + this.position());",
                "     }"
            ]
        }
    }
}
