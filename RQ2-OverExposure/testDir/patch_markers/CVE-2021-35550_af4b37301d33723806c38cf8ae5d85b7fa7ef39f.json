{"src/java.base/share/classes/sun/security/ssl/CipherSuite.java": {"chunk_0": {"plus_lines": [" /*", " * Copyright (c) 2002, 2019, Oracle and/or its affiliates. All rights reserved.", "  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER."], "minus_lines": [" /*", " * Copyright (c) 2002, 2018, Oracle and/or its affiliates. All rights reserved.", "  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER."]}, "chunk_1": {"plus_lines": ["     //    changed later, see below).", "    // 2. Prefer forward secrecy cipher suites.", "    // 3. Prefer the stronger bulk cipher, in the order of AES_256(GCM),", "     //    AES_128(GCM), AES_256, AES_128, 3DES-EDE."], "minus_lines": ["     //    changed later, see below).", "    // 2. Prefer the stronger bulk cipher, in the order of AES_256(GCM),", "     //    AES_128(GCM), AES_256, AES_128, 3DES-EDE."]}, "chunk_2": {"plus_lines": ["     //    AES_128(GCM), AES_256, AES_128, 3DES-EDE.", "    // 4. Prefer the stronger MAC algorithm, in the order of SHA384,", "     //    SHA256, SHA, MD5."], "minus_lines": ["     //    AES_128(GCM), AES_256, AES_128, 3DES-EDE.", "    // 3. Prefer the stronger MAC algorithm, in the order of SHA384,", "     //    SHA256, SHA, MD5."]}, "chunk_3": {"plus_lines": ["     //    SHA256, SHA, MD5.", "    // 5. Prefer the better performance of key exchange and digital", "     //    signature algorithm, in the order of ECDHE-ECDSA, ECDHE-RSA,"], "minus_lines": ["     //    SHA256, SHA, MD5.", "    // 4. Prefer the better performance of key exchange and digital", "     //    signature algorithm, in the order of ECDHE-ECDSA, ECDHE-RSA,"]}, "chunk_4": {"plus_lines": ["     //    signature algorithm, in the order of ECDHE-ECDSA, ECDHE-RSA,", "    //    DHE-RSA, DHE-DSS, ECDH-ECDSA, ECDH-RSA, RSA.", " "], "minus_lines": ["     //    signature algorithm, in the order of ECDHE-ECDSA, ECDHE-RSA,", "    //    RSA, ECDH-ECDSA, ECDH-RSA, DHE-RSA, DHE-DSS.", " "]}, "chunk_5": {"plus_lines": [" ", "    // TLS 1.3 cipher suites.", "     TLS_AES_256_GCM_SHA384("], "minus_lines": [" ", "    TLS_AES_128_GCM_SHA256(", "            0x1301, true, \"TLS_AES_128_GCM_SHA256\",", "            ProtocolVersion.PROTOCOLS_OF_13, B_AES_128_GCM_IV, H_SHA256),", "     TLS_AES_256_GCM_SHA384("]}, "chunk_6": {"plus_lines": ["             ProtocolVersion.PROTOCOLS_OF_13, B_AES_256_GCM_IV, H_SHA384),", "    TLS_AES_128_GCM_SHA256(", "            0x1301, true, \"TLS_AES_128_GCM_SHA256\",", "            ProtocolVersion.PROTOCOLS_OF_13, B_AES_128_GCM_IV, H_SHA256),", "     TLS_CHACHA20_POLY1305_SHA256("], "minus_lines": []}, "chunk_7": {"plus_lines": [" ", "    //", "    // Forward screcy cipher suites.", "    //", "", "    // AES_256(GCM) - ECDHE", "     TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384("], "minus_lines": [" ", "    // AES_256(GCM)", "     TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384("]}, "chunk_8": {"plus_lines": ["             K_ECDHE_RSA, B_CC20_P1305, M_NULL, H_SHA256),", "", "    // AES_128(GCM) - ECDHE", "    TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256(", "            0xC02F, true, \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\", \"\",", "             ProtocolVersion.PROTOCOLS_OF_12,"], "minus_lines": ["             K_ECDHE_RSA, B_CC20_P1305, M_NULL, H_SHA256),", "    TLS_RSA_WITH_AES_256_GCM_SHA384(", "            0x009D, true, \"TLS_RSA_WITH_AES_256_GCM_SHA384\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_RSA, B_AES_256_GCM, M_NULL, H_SHA384),", "    TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384(", "            0xC02E, true, \"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_ECDH_ECDSA, B_AES_256_GCM, M_NULL, H_SHA384),", "    TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384(", "            0xC032, true, \"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384\", \"\",", "             ProtocolVersion.PROTOCOLS_OF_12,"]}, "chunk_9": {"plus_lines": ["             ProtocolVersion.PROTOCOLS_OF_12,", "            K_ECDHE_RSA, B_AES_128_GCM, M_NULL, H_SHA256),", "", "    // AES_256(GCM) - DHE", "     TLS_DHE_RSA_WITH_AES_256_GCM_SHA384("], "minus_lines": ["             ProtocolVersion.PROTOCOLS_OF_12,", "            K_ECDH_RSA, B_AES_256_GCM, M_NULL, H_SHA384),", "     TLS_DHE_RSA_WITH_AES_256_GCM_SHA384("]}, "chunk_10": {"plus_lines": [" ", "    // AES_128(GCM) - DHE", "     TLS_DHE_RSA_WITH_AES_128_GCM_SHA256("], "minus_lines": [" ", "    // AES_128(GCM)", "    TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256(", "            0xC02F, true, \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_ECDHE_RSA, B_AES_128_GCM, M_NULL, H_SHA256),", "    TLS_RSA_WITH_AES_128_GCM_SHA256(", "            0x009C, true, \"TLS_RSA_WITH_AES_128_GCM_SHA256\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_RSA, B_AES_128_GCM, M_NULL, H_SHA256),", "    TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256(", "            0xC02D, true, \"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_ECDH_ECDSA, B_AES_128_GCM, M_NULL, H_SHA256),", "    TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256(", "            0xC031, true, \"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_ECDH_RSA, B_AES_128_GCM, M_NULL, H_SHA256),", "     TLS_DHE_RSA_WITH_AES_128_GCM_SHA256("]}, "chunk_11": {"plus_lines": [" ", "    // AES_256(CBC) - ECDHE", "     TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384("], "minus_lines": [" ", "    // AES_256(CBC)", "     TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384("]}, "chunk_12": {"plus_lines": ["             K_ECDHE_RSA, B_AES_256, M_SHA384, H_SHA384),", "", "    // AES_128(CBC) - ECDHE", "    TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256(", "            0xC023, true, \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\", \"\",", "             ProtocolVersion.PROTOCOLS_OF_12,"], "minus_lines": ["             K_ECDHE_RSA, B_AES_256, M_SHA384, H_SHA384),", "    TLS_RSA_WITH_AES_256_CBC_SHA256(", "            0x003D, true, \"TLS_RSA_WITH_AES_256_CBC_SHA256\", \"\",", "             ProtocolVersion.PROTOCOLS_OF_12,"]}, "chunk_13": {"plus_lines": ["             ProtocolVersion.PROTOCOLS_OF_12,", "            K_ECDHE_ECDSA, B_AES_128, M_SHA256, H_SHA256),", "    TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256(", "            0xC027, true, \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_ECDHE_RSA, B_AES_128, M_SHA256, H_SHA256),", "", "    // AES_256(CBC) - DHE", "    TLS_DHE_RSA_WITH_AES_256_CBC_SHA256(", "            0x006B, true, \"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_DHE_RSA, B_AES_256, M_SHA256, H_SHA256),", "    TLS_DHE_DSS_WITH_AES_256_CBC_SHA256(", "            0x006A, true, \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_DHE_DSS, B_AES_256, M_SHA256, H_SHA256),", "", "    // AES_128(CBC) - DHE", "    TLS_DHE_RSA_WITH_AES_128_CBC_SHA256(", "            0x0067, true, \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_DHE_RSA, B_AES_128, M_SHA256, H_SHA256),", "    TLS_DHE_DSS_WITH_AES_128_CBC_SHA256(", "            0x0040, true, \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_DHE_DSS, B_AES_128, M_SHA256, H_SHA256),", "", "    //", "    // not forward screcy cipher suites.", "    //", "", "    // AES_256(GCM)", "    TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384(", "            0xC02E, true, \"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_ECDH_ECDSA, B_AES_256_GCM, M_NULL, H_SHA384),", "    TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384(", "            0xC032, true, \"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_ECDH_RSA, B_AES_256_GCM, M_NULL, H_SHA384),", "", "    // AES_128(GCM)", "    TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256(", "            0xC02D, true, \"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_ECDH_ECDSA, B_AES_128_GCM, M_NULL, H_SHA256),", "    TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256(", "            0xC031, true, \"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_ECDH_RSA, B_AES_128_GCM, M_NULL, H_SHA256),", "", "    // AES_256(CBC)", "     TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384("], "minus_lines": ["             ProtocolVersion.PROTOCOLS_OF_12,", "            K_RSA, B_AES_256, M_SHA256, H_SHA256),", "     TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384("]}, "chunk_14": {"plus_lines": ["             K_ECDH_RSA, B_AES_256, M_SHA384, H_SHA384),", "", "    // AES_128(CBC)", "    TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256(", "            0xC025, true, \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\", \"\",", "             ProtocolVersion.PROTOCOLS_OF_12,"], "minus_lines": ["             K_ECDH_RSA, B_AES_256, M_SHA384, H_SHA384),", "    TLS_DHE_RSA_WITH_AES_256_CBC_SHA256(", "            0x006B, true, \"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\", \"\",", "             ProtocolVersion.PROTOCOLS_OF_12,"]}, "chunk_15": {"plus_lines": ["             ProtocolVersion.PROTOCOLS_OF_12,", "            K_ECDH_ECDSA, B_AES_128, M_SHA256, H_SHA256),", "    TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256(", "            0xC029, true, \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\", \"\",", "             ProtocolVersion.PROTOCOLS_OF_12,"], "minus_lines": ["             ProtocolVersion.PROTOCOLS_OF_12,", "            K_DHE_RSA, B_AES_256, M_SHA256, H_SHA256),", "    TLS_DHE_DSS_WITH_AES_256_CBC_SHA256(", "            0x006A, true, \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\", \"\",", "             ProtocolVersion.PROTOCOLS_OF_12,"]}, "chunk_16": {"plus_lines": ["             ProtocolVersion.PROTOCOLS_OF_12,", "            K_ECDH_RSA, B_AES_128, M_SHA256, H_SHA256),", "", "    //", "    // Legacy, used for compatibility", "    //", " "], "minus_lines": ["             ProtocolVersion.PROTOCOLS_OF_12,", "            K_DHE_DSS, B_AES_256, M_SHA256, H_SHA256),", " "]}, "chunk_17": {"plus_lines": [" ", "    // AES_256(CBC) - ECDHE - Using SHA", "     TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA("], "minus_lines": []}, "chunk_18": {"plus_lines": ["             K_ECDHE_RSA, B_AES_256, M_SHA, H_SHA256),", "", "    // AES_128(CBC) - ECDHE - using SHA", "    TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA(", "            0xC009, true, \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\", \"\",", "             ProtocolVersion.PROTOCOLS_TO_12,"], "minus_lines": ["             K_ECDHE_RSA, B_AES_256, M_SHA, H_SHA256),", "    TLS_RSA_WITH_AES_256_CBC_SHA(", "            0x0035, true, \"TLS_RSA_WITH_AES_256_CBC_SHA\", \"\",", "            ProtocolVersion.PROTOCOLS_TO_12,", "            K_RSA, B_AES_256, M_SHA, H_SHA256),", "    TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA(", "            0xC005, true, \"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\", \"\",", "             ProtocolVersion.PROTOCOLS_TO_12,"]}, "chunk_19": {"plus_lines": ["             ProtocolVersion.PROTOCOLS_TO_12,", "            K_ECDHE_ECDSA, B_AES_128, M_SHA, H_SHA256),", "    TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA(", "            0xC013, true, \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\", \"\",", "             ProtocolVersion.PROTOCOLS_TO_12,"], "minus_lines": ["             ProtocolVersion.PROTOCOLS_TO_12,", "            K_ECDH_ECDSA, B_AES_256, M_SHA, H_SHA256),", "    TLS_ECDH_RSA_WITH_AES_256_CBC_SHA(", "            0xC00F, true, \"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\", \"\",", "             ProtocolVersion.PROTOCOLS_TO_12,"]}, "chunk_20": {"plus_lines": ["             ProtocolVersion.PROTOCOLS_TO_12,", "            K_ECDHE_RSA, B_AES_128, M_SHA, H_SHA256),", "", "    // AES_256(CBC) - DHE - Using SHA", "     TLS_DHE_RSA_WITH_AES_256_CBC_SHA("], "minus_lines": ["             ProtocolVersion.PROTOCOLS_TO_12,", "            K_ECDH_RSA, B_AES_256, M_SHA, H_SHA256),", "     TLS_DHE_RSA_WITH_AES_256_CBC_SHA("]}, "chunk_21": {"plus_lines": [" ", "    // AES_128(CBC) - DHE - using SHA", "    TLS_DHE_RSA_WITH_AES_128_CBC_SHA(", "            0x0033, true, \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA\", \"\",", "             ProtocolVersion.PROTOCOLS_TO_12,"], "minus_lines": [" ", "    // AES_128(CBC)", "    TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256(", "            0xC023, true, \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_ECDHE_ECDSA, B_AES_128, M_SHA256, H_SHA256),", "    TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256(", "            0xC027, true, \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_ECDHE_RSA, B_AES_128, M_SHA256, H_SHA256),", "    TLS_RSA_WITH_AES_128_CBC_SHA256(", "            0x003C, true, \"TLS_RSA_WITH_AES_128_CBC_SHA256\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_RSA, B_AES_128, M_SHA256, H_SHA256),", "    TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256(", "            0xC025, true, \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_ECDH_ECDSA, B_AES_128, M_SHA256, H_SHA256),", "    TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256(", "            0xC029, true, \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_ECDH_RSA, B_AES_128, M_SHA256, H_SHA256),", "    TLS_DHE_RSA_WITH_AES_128_CBC_SHA256(", "            0x0067, true, \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_DHE_RSA, B_AES_128, M_SHA256, H_SHA256),", "    TLS_DHE_DSS_WITH_AES_128_CBC_SHA256(", "            0x0040, true, \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_DHE_DSS, B_AES_128, M_SHA256, H_SHA256),", "", "    TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA(", "            0xC009, true, \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\", \"\",", "             ProtocolVersion.PROTOCOLS_TO_12,"]}, "chunk_22": {"plus_lines": ["             ProtocolVersion.PROTOCOLS_TO_12,", "            K_DHE_RSA, B_AES_128, M_SHA, H_SHA256),", "    TLS_DHE_DSS_WITH_AES_128_CBC_SHA(", "            0x0032, true, \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA\", \"\",", "             ProtocolVersion.PROTOCOLS_TO_12,"], "minus_lines": ["             ProtocolVersion.PROTOCOLS_TO_12,", "            K_ECDHE_ECDSA, B_AES_128, M_SHA, H_SHA256),", "    TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA(", "            0xC013, true, \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\", \"\",", "             ProtocolVersion.PROTOCOLS_TO_12,"]}, "chunk_23": {"plus_lines": ["             ProtocolVersion.PROTOCOLS_TO_12,", "            K_DHE_DSS, B_AES_128, M_SHA, H_SHA256),", "", "    // AES_256(CBC) - using SHA, not forward screcy", "    TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA(", "            0xC005, true, \"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\", \"\",", "             ProtocolVersion.PROTOCOLS_TO_12,"], "minus_lines": ["             ProtocolVersion.PROTOCOLS_TO_12,", "            K_ECDHE_RSA, B_AES_128, M_SHA, H_SHA256),", "    TLS_RSA_WITH_AES_128_CBC_SHA(", "            0x002F, true, \"TLS_RSA_WITH_AES_128_CBC_SHA\", \"\",", "             ProtocolVersion.PROTOCOLS_TO_12,"]}, "chunk_24": {"plus_lines": ["             ProtocolVersion.PROTOCOLS_TO_12,", "            K_ECDH_ECDSA, B_AES_256, M_SHA, H_SHA256),", "    TLS_ECDH_RSA_WITH_AES_256_CBC_SHA(", "            0xC00F, true, \"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\", \"\",", "            ProtocolVersion.PROTOCOLS_TO_12,", "            K_ECDH_RSA, B_AES_256, M_SHA, H_SHA256),", "", "    // AES_128(CBC) - using SHA, not forward screcy", "     TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA("], "minus_lines": ["             ProtocolVersion.PROTOCOLS_TO_12,", "            K_RSA, B_AES_128, M_SHA, H_SHA256),", "     TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA("]}, "chunk_25": {"plus_lines": ["             K_ECDH_RSA, B_AES_128, M_SHA, H_SHA256),", "", "    //", "    // deprecated, used for compatibility", "    //", "", "    // RSA, AES_256(GCM)", "    TLS_RSA_WITH_AES_256_GCM_SHA384(", "            0x009D, true, \"TLS_RSA_WITH_AES_256_GCM_SHA384\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_RSA, B_AES_256_GCM, M_NULL, H_SHA384),", "", "    // RSA, AES_128(GCM)", "    TLS_RSA_WITH_AES_128_GCM_SHA256(", "            0x009C, true, \"TLS_RSA_WITH_AES_128_GCM_SHA256\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_RSA, B_AES_128_GCM, M_NULL, H_SHA256),", "", "    // RSA, AES_256(CBC)", "    TLS_RSA_WITH_AES_256_CBC_SHA256(", "            0x003D, true, \"TLS_RSA_WITH_AES_256_CBC_SHA256\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_RSA, B_AES_256, M_SHA256, H_SHA256),", "", "    // RSA, AES_128(CBC)", "    TLS_RSA_WITH_AES_128_CBC_SHA256(", "            0x003C, true, \"TLS_RSA_WITH_AES_128_CBC_SHA256\", \"\",", "            ProtocolVersion.PROTOCOLS_OF_12,", "            K_RSA, B_AES_128, M_SHA256, H_SHA256),", "", "    // RSA, AES_256(CBC) - using SHA, not forward screcy", "    TLS_RSA_WITH_AES_256_CBC_SHA(", "            0x0035, true, \"TLS_RSA_WITH_AES_256_CBC_SHA\", \"\",", "             ProtocolVersion.PROTOCOLS_TO_12,"], "minus_lines": ["             K_ECDH_RSA, B_AES_128, M_SHA, H_SHA256),", "    TLS_DHE_RSA_WITH_AES_128_CBC_SHA(", "            0x0033, true, \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA\", \"\",", "             ProtocolVersion.PROTOCOLS_TO_12,"]}, "chunk_26": {"plus_lines": ["             ProtocolVersion.PROTOCOLS_TO_12,", "            K_RSA, B_AES_256, M_SHA, H_SHA256),", "", "    // RSA, AES_128(CBC) - using SHA, not forward screcy", "    TLS_RSA_WITH_AES_128_CBC_SHA(", "            0x002F, true, \"TLS_RSA_WITH_AES_128_CBC_SHA\", \"\",", "             ProtocolVersion.PROTOCOLS_TO_12,"], "minus_lines": ["             ProtocolVersion.PROTOCOLS_TO_12,", "            K_DHE_RSA, B_AES_128, M_SHA, H_SHA256),", "    TLS_DHE_DSS_WITH_AES_128_CBC_SHA(", "            0x0032, true, \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA\", \"\",", "             ProtocolVersion.PROTOCOLS_TO_12,"]}, "chunk_27": {"plus_lines": ["             ProtocolVersion.PROTOCOLS_TO_12,", "            K_RSA, B_AES_128, M_SHA, H_SHA256),", " "], "minus_lines": ["             ProtocolVersion.PROTOCOLS_TO_12,", "            K_DHE_DSS, B_AES_128, M_SHA, H_SHA256),", " "]}, "chunk_28": {"plus_lines": [" ", "    // 3DES_EDE, forward secrecy.", "     TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA("], "minus_lines": [" ", "    // 3DES_EDE", "     TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA("]}, "chunk_29": {"plus_lines": [], "minus_lines": ["             K_ECDHE_RSA, B_3DES, M_SHA, H_SHA256),", "    SSL_RSA_WITH_3DES_EDE_CBC_SHA(", "            0x000A, true, \"SSL_RSA_WITH_3DES_EDE_CBC_SHA\",", "                          \"TLS_RSA_WITH_3DES_EDE_CBC_SHA\",", "            ProtocolVersion.PROTOCOLS_TO_12,", "            K_RSA, B_3DES, M_SHA, H_SHA256),", "    TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA(", "            0xC003, true, \"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA\", \"\",", "            ProtocolVersion.PROTOCOLS_TO_12,", "            K_ECDH_ECDSA, B_3DES, M_SHA, H_SHA256),", "    TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA(", "            0xC00D, true, \"TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA\", \"\",", "            ProtocolVersion.PROTOCOLS_TO_12,", "            K_ECDH_RSA, B_3DES, M_SHA, H_SHA256),", "     SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA("]}, "chunk_30": {"plus_lines": [" ", "    // 3DES_EDE, not forward secrecy.", "    TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA(", "            0xC003, true, \"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA\", \"\",", "            ProtocolVersion.PROTOCOLS_TO_12,", "            K_ECDH_ECDSA, B_3DES, M_SHA, H_SHA256),", "    TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA(", "            0xC00D, true, \"TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA\", \"\",", "            ProtocolVersion.PROTOCOLS_TO_12,", "            K_ECDH_RSA, B_3DES, M_SHA, H_SHA256),", "    SSL_RSA_WITH_3DES_EDE_CBC_SHA(", "            0x000A, true, \"SSL_RSA_WITH_3DES_EDE_CBC_SHA\",", "                          \"TLS_RSA_WITH_3DES_EDE_CBC_SHA\",", "            ProtocolVersion.PROTOCOLS_TO_12,", "            K_RSA, B_3DES, M_SHA, H_SHA256),", "", "     // Renegotiation protection request Signalling Cipher Suite Value (SCSV)."], "minus_lines": []}}, "ciphersuites/CheckCipherSuites.java": {"chunk_31": {"plus_lines": ["  * @test", " * @bug 4750141 4895631 8217579 8163326", "  * @summary Check enabled and supported ciphersuites are correct"], "minus_lines": ["  * @test", " * @bug 4750141 4895631 8217579", "  * @summary Check enabled and supported ciphersuites are correct"]}, "chunk_32": {"plus_lines": ["  * @summary Check enabled and supported ciphersuites are correct", " * @run main/othervm CheckCipherSuites default", "  * @run main/othervm CheckCipherSuites limited"], "minus_lines": ["  * @summary Check enabled and supported ciphersuites are correct", " * @run main CheckCipherSuites default", "  * @run main/othervm CheckCipherSuites limited"]}, "chunk_33": {"plus_lines": ["     private final static String[] ENABLED_DEFAULT = {", "        // TLS 1.3 cipher suites", "         \"TLS_AES_256_GCM_SHA384\","], "minus_lines": ["     private final static String[] ENABLED_DEFAULT = {", "        \"TLS_AES_128_GCM_SHA256\",", "         \"TLS_AES_256_GCM_SHA384\","]}, "chunk_34": {"plus_lines": ["         \"TLS_AES_256_GCM_SHA384\",", "        \"TLS_AES_128_GCM_SHA256\",", "         \"TLS_CHACHA20_POLY1305_SHA256\","], "minus_lines": []}, "chunk_35": {"plus_lines": ["         \"TLS_CHACHA20_POLY1305_SHA256\",", "", "        // Suite B compliant cipher suites", "         \"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\","], "minus_lines": []}, "chunk_36": {"plus_lines": ["         \"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\",", "", "        // Not suite B, but we want it to position the suite early", "         \"TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\","], "minus_lines": []}, "chunk_37": {"plus_lines": ["         \"TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\",", "", "        // AES_256(GCM) - ECDHE - forward screcy", "         \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\","], "minus_lines": []}, "chunk_38": {"plus_lines": ["         \"TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\",", "", "        // AES_128(GCM) - ECDHE - forward screcy", "        \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",", "", "        // AES_256(GCM) - DHE - forward screcy", "         \"TLS_DHE_RSA_WITH_AES_256_GCM_SHA384\","], "minus_lines": ["         \"TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\",", "        \"TLS_RSA_WITH_AES_256_GCM_SHA384\",", "        \"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384\",", "        \"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384\",", "         \"TLS_DHE_RSA_WITH_AES_256_GCM_SHA384\","]}, "chunk_39": {"plus_lines": ["         \"TLS_DHE_DSS_WITH_AES_256_GCM_SHA384\",", "", "        // AES_128(GCM) - DHE - forward screcy", "         \"TLS_DHE_RSA_WITH_AES_128_GCM_SHA256\","], "minus_lines": ["         \"TLS_DHE_DSS_WITH_AES_256_GCM_SHA384\",", "        \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_RSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\",", "         \"TLS_DHE_RSA_WITH_AES_128_GCM_SHA256\","]}, "chunk_40": {"plus_lines": ["         \"TLS_DHE_DSS_WITH_AES_128_GCM_SHA256\",", "", "        // AES_256(CBC) - ECDHE - forward screcy", "         \"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\","], "minus_lines": []}, "chunk_41": {"plus_lines": ["         \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\",", "", "        // AES_256(CBC) - ECDHE - forward screcy", "         \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\","], "minus_lines": ["         \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\",", "        \"TLS_RSA_WITH_AES_256_CBC_SHA256\",", "        \"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\",", "        \"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\",", "        \"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\",", "        \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\",", "        \"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_RSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_DHE_RSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA\",", "         \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\","]}, "chunk_42": {"plus_lines": ["         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",", "", "        // AES_256(CBC) - DHE - forward screcy", "        \"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\",", "        \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\",", "", "        // AES_128(CBC) - DHE - forward screcy", "         \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\","], "minus_lines": ["         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_RSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\",", "         \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\","]}, "chunk_43": {"plus_lines": ["         \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256\",", "", "        // AES_256(GCM) - not forward screcy", "        \"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384\",", "        \"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384\",", "", "        // AES_128(GCM) - not forward screcy", "        \"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\",", "", "        // AES_256(CBC) - not forward screcy", "        \"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\",", "        \"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\",", "", "        // AES_128(CBC) - not forward screcy", "        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\",", "", "        // AES_256(CBC) - ECDHE - using SHA", "        \"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\",", "", "        // AES_128(CBC) - ECDHE - using SHA", "         \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\","], "minus_lines": []}, "chunk_44": {"plus_lines": ["         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",", "", "        // AES_256(CBC) - DHE - using SHA", "        \"TLS_DHE_RSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA\",", "", "        // AES_128(CBC) - DHE - using SHA", "         \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA\","], "minus_lines": ["         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",", "        \"TLS_RSA_WITH_AES_128_CBC_SHA\",", "        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\",", "        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\",", "         \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA\","]}, "chunk_45": {"plus_lines": ["         \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA\",", "", "        // AES_256(CBC) - using SHA, not forward screcy", "        \"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\",", "", "        // AES_128(CBC) - using SHA, not forward screcy", "        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\",", "        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\",", "", "        // deprecated", "        \"TLS_RSA_WITH_AES_256_GCM_SHA384\",", "        \"TLS_RSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_RSA_WITH_AES_256_CBC_SHA256\",", "        \"TLS_RSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_RSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_RSA_WITH_AES_128_CBC_SHA\",", "         \"TLS_EMPTY_RENEGOTIATION_INFO_SCSV\""], "minus_lines": []}, "chunk_46": {"plus_lines": [], "minus_lines": ["         \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_RSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\",", "         \"TLS_DHE_RSA_WITH_AES_128_GCM_SHA256\","]}, "chunk_47": {"plus_lines": [], "minus_lines": ["         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_RSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\",", "         \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\","]}, "chunk_48": {"plus_lines": ["         \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256\",", "        \"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\",", "         \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\","], "minus_lines": []}, "chunk_49": {"plus_lines": [], "minus_lines": ["         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",", "        \"TLS_RSA_WITH_AES_128_CBC_SHA\",", "        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\",", "        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\",", "         \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA\","]}, "chunk_50": {"plus_lines": ["         \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA\",", "        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\",", "        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\",", "        \"TLS_RSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_RSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_RSA_WITH_AES_128_CBC_SHA\",", "         \"TLS_EMPTY_RENEGOTIATION_INFO_SCSV\""], "minus_lines": []}, "chunk_51": {"plus_lines": ["     private final static String[] SUPPORTED_DEFAULT = {", "        // TLS 1.3 cipher suites", "         \"TLS_AES_256_GCM_SHA384\","], "minus_lines": ["     private final static String[] SUPPORTED_DEFAULT = {", "        \"TLS_AES_128_GCM_SHA256\",", "         \"TLS_AES_256_GCM_SHA384\","]}, "chunk_52": {"plus_lines": ["         \"TLS_AES_256_GCM_SHA384\",", "        \"TLS_AES_128_GCM_SHA256\",", "         \"TLS_CHACHA20_POLY1305_SHA256\","], "minus_lines": []}, "chunk_53": {"plus_lines": ["         \"TLS_CHACHA20_POLY1305_SHA256\",", "", "        // Suite B compliant cipher suites", "         \"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\","], "minus_lines": []}, "chunk_54": {"plus_lines": ["         \"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\",", "", "        // Not suite B, but we want it to position the suite early", "         \"TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\","], "minus_lines": []}, "chunk_55": {"plus_lines": ["         \"TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\",", "", "        // AES_256(GCM) - ECDHE - forward screcy", "         \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\","], "minus_lines": []}, "chunk_56": {"plus_lines": ["         \"TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\",", "", "        // AES_128(GCM) - ECDHE - forward screcy", "        \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",", "", "        // AES_256(GCM) - DHE - forward screcy", "         \"TLS_DHE_RSA_WITH_AES_256_GCM_SHA384\","], "minus_lines": ["         \"TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\",", "        \"TLS_RSA_WITH_AES_256_GCM_SHA384\",", "        \"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384\",", "        \"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384\",", "         \"TLS_DHE_RSA_WITH_AES_256_GCM_SHA384\","]}, "chunk_57": {"plus_lines": ["         \"TLS_DHE_DSS_WITH_AES_256_GCM_SHA384\",", "", "        // AES_128(GCM) - DHE - forward screcy", "         \"TLS_DHE_RSA_WITH_AES_128_GCM_SHA256\","], "minus_lines": ["         \"TLS_DHE_DSS_WITH_AES_256_GCM_SHA384\",", "        \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_RSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\",", "         \"TLS_DHE_RSA_WITH_AES_128_GCM_SHA256\","]}, "chunk_58": {"plus_lines": ["         \"TLS_DHE_DSS_WITH_AES_128_GCM_SHA256\",", "", "        // AES_256(CBC) - ECDHE - forward screcy", "         \"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\","], "minus_lines": []}, "chunk_59": {"plus_lines": ["         \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\",", "", "        // AES_256(CBC) - ECDHE - forward screcy", "         \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\","], "minus_lines": ["         \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\",", "        \"TLS_RSA_WITH_AES_256_CBC_SHA256\",", "        \"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\",", "        \"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\",", "        \"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\",", "        \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\",", "        \"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_RSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_DHE_RSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA\",", "         \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\","]}, "chunk_60": {"plus_lines": ["         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",", "", "        // AES_256(CBC) - DHE - forward screcy", "        \"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\",", "        \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\",", "", "        // AES_128(CBC) - DHE - forward screcy", "         \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\","], "minus_lines": ["         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_RSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\",", "         \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\","]}, "chunk_61": {"plus_lines": ["         \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256\",", "", "        // AES_256(GCM) - not forward screcy", "        \"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384\",", "        \"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384\",", "", "        // AES_128(GCM) - not forward screcy", "        \"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\",", "", "        // AES_256(CBC) - not forward screcy", "        \"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\",", "        \"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\",", "", "        // AES_128(CBC) - not forward screcy", "        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\",", "", "        // AES_256(CBC) - ECDHE - using SHA", "        \"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\",", "", "        // AES_128(CBC) - ECDHE - using SHA", "         \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\","], "minus_lines": []}, "chunk_62": {"plus_lines": ["         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",", "", "        // AES_256(CBC) - DHE - using SHA", "        \"TLS_DHE_RSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA\",", "", "        // AES_128(CBC) - DHE - using SHA", "         \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA\","], "minus_lines": ["         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",", "        \"TLS_RSA_WITH_AES_128_CBC_SHA\",", "        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\",", "        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\",", "         \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA\","]}, "chunk_63": {"plus_lines": ["         \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA\",", "", "        // AES_256(CBC) - using SHA, not forward screcy", "        \"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\",", "", "        // AES_128(CBC) - using SHA, not forward screcy", "        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\",", "        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\",", "", "        // deprecated", "        \"TLS_RSA_WITH_AES_256_GCM_SHA384\",", "        \"TLS_RSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_RSA_WITH_AES_256_CBC_SHA256\",", "        \"TLS_RSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_RSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_RSA_WITH_AES_128_CBC_SHA\",", "         \"TLS_EMPTY_RENEGOTIATION_INFO_SCSV\""], "minus_lines": []}, "chunk_64": {"plus_lines": [], "minus_lines": ["         \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_RSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\",", "         \"TLS_DHE_RSA_WITH_AES_128_GCM_SHA256\","]}, "chunk_65": {"plus_lines": [], "minus_lines": ["         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_RSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\",", "         \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\","]}, "chunk_66": {"plus_lines": ["         \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256\",", "        \"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\",", "         \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\","], "minus_lines": []}, "chunk_67": {"plus_lines": [], "minus_lines": ["         \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",", "        \"TLS_RSA_WITH_AES_128_CBC_SHA\",", "        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\",", "        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\",", "         \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA\","]}, "chunk_68": {"plus_lines": ["         \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA\",", "        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\",", "        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\",", "        \"TLS_RSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_RSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_RSA_WITH_AES_128_CBC_SHA\",", "         \"TLS_EMPTY_RENEGOTIATION_INFO_SCSV\""], "minus_lines": []}, "chunk_69": {"plus_lines": [" ", "        SSLSocketFactory factory =", "                (SSLSocketFactory)SSLSocketFactory.getDefault();", "         SSLSocket socket = (SSLSocket)factory.createSocket();"], "minus_lines": [" ", "        SSLSocketFactory factory = (SSLSocketFactory)SSLSocketFactory.getDefault();", "         SSLSocket socket = (SSLSocket)factory.createSocket();"]}, "chunk_70": {"plus_lines": [], "minus_lines": ["     }", "", " }"]}}, "ciphersuites/CipherSuitesInOrder.java": {"chunk_71": {"plus_lines": [], "minus_lines": ["  */", "", " import java.util.*;"]}, "chunk_72": {"plus_lines": ["             = Arrays.<String>asList(", "                    // TLS 1.3 cipher suites.", "                    \"TLS_AES_256_GCM_SHA384\",", "                    \"TLS_AES_128_GCM_SHA256\",", "                    \"TLS_CHACHA20_POLY1305_SHA256\",", "                    // Suite B compliant cipher suites, see RFC 6460.", "                    \"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\",", "                    \"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\",", "                    // Not suite B, but we want it to position the suite early", "                    //in the list of 1.2 suites.", "                    \"TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\",", "                    //", "                    // Forward secrecy cipher suites.", "                    //", "                    // AES_256(GCM) - ECDHE", "                    \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\",", "                    \"TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\",", "                    // AES_128(GCM) - ECDHE", "                    \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",", "                    // AES_256(GCM) - DHE", "                    \"TLS_DHE_RSA_WITH_AES_256_GCM_SHA384\",", "                    \"TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256\",", "                    \"TLS_DHE_DSS_WITH_AES_256_GCM_SHA384\",", "                    // AES_128(GCM) - DHE", "                    \"TLS_DHE_RSA_WITH_AES_128_GCM_SHA256\",", "                    \"TLS_DHE_DSS_WITH_AES_128_GCM_SHA256\",", "                    // AES_256(CBC) - ECDHE", "                    \"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\",", "                    \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\",", "                    // AES_128(CBC) - ECDHE", "                    \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\",", "                    \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",", "                    // AES_256(CBC) - DHE", "                    \"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\",", "                    \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\",", "                    // AES_128(CBC) - DHE", "                    \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\",", "                    \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256\",", "                    //", "                    // Not forward secret cipher suites.", "                    //", "                    // AES_256(GCM)", "                    \"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384\",", "                    \"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384\",", "                    // AES_128(GCM)", "                    \"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\",", "                    \"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\",", "                    // AES_256(CBC)", "                    \"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\",", "                    \"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\",", "                    // AES_128(CBC)", "                    \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\",", "                    \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\",", "                    //", "                    // Legacy, used for compatibility", "                    //", "                    // AES_256(CBC) - ECDHE - Using SHA", "                    \"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\",", "                    \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\",", "                    // AES_128(CBC) - ECDHE - using SHA", "                    \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\",", "                    \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",", "                    // AES_256(CBC) - DHE - Using SHA", "                    \"TLS_DHE_RSA_WITH_AES_256_CBC_SHA\",", "                    \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA\",", "                    // AES_128(CBC) - DHE - using SHA", "                    \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA\",", "                    \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA\",", "                    // AES_256(CBC) - using SHA, not forward secrecy", "                    \"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\",", "                    \"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\",", "                    // AES_128(CBC) - using SHA, not forward secrecy", "                    \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\",", "                    \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\",", "                    //", "                    // Deprecated, used for compatibility", "                    //", "                    // RSA, AES_256(GCM)", "                    \"TLS_RSA_WITH_AES_256_GCM_SHA384\",", "                    // RSA, AES_128(GCM)", "                    \"TLS_RSA_WITH_AES_128_GCM_SHA256\",", "                    // RSA, AES_256(CBC)", "                    \"TLS_RSA_WITH_AES_256_CBC_SHA256\",", "                    // RSA, AES_128(CBC)", "                    \"TLS_RSA_WITH_AES_128_CBC_SHA256\",", "                    // RSA, AES_256(CBC) - using SHA, not forward secrecy", "                    \"TLS_RSA_WITH_AES_256_CBC_SHA\",", "                    // RSA, AES_128(CBC) - using SHA, not forward secrecy", "                    \"TLS_RSA_WITH_AES_128_CBC_SHA\",", "                    // 3DES_EDE, forward secrecy.", "                    \"TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA\",", "                    \"TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\",", "                    \"SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA\",", "                    \"SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA\",", "                    // 3DES_EDE, not forward secrecy.", "                    \"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA\",", "                    \"TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA\",", "                    \"SSL_RSA_WITH_3DES_EDE_CBC_SHA\",", "                    // Renegotiation protection request Signalling", "                    // Cipher Suite Value (SCSV).", "                    \"TLS_EMPTY_RENEGOTIATION_INFO_SCSV\",", "                    // Definition of the Cipher Suites that are supported but not", "                    // enabled by default.", "                    \"TLS_DH_anon_WITH_AES_256_GCM_SHA384\",", "                    \"TLS_DH_anon_WITH_AES_128_GCM_SHA256\",", "                    \"TLS_DH_anon_WITH_AES_256_CBC_SHA256\",", "                    \"TLS_ECDH_anon_WITH_AES_256_CBC_SHA\",", "                    \"TLS_DH_anon_WITH_AES_256_CBC_SHA\",", "                    \"TLS_DH_anon_WITH_AES_128_CBC_SHA256\",", "                    \"TLS_ECDH_anon_WITH_AES_128_CBC_SHA\",", "                    \"TLS_DH_anon_WITH_AES_128_CBC_SHA\",", "                    \"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA\",", "                    \"SSL_DH_anon_WITH_3DES_EDE_CBC_SHA\",", "                    // RC4", "                    \"TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\",", "                    \"TLS_ECDHE_RSA_WITH_RC4_128_SHA\",", "                    \"SSL_RSA_WITH_RC4_128_SHA\",", "                    \"TLS_ECDH_ECDSA_WITH_RC4_128_SHA\",", "                    \"TLS_ECDH_RSA_WITH_RC4_128_SHA\",", "                    \"SSL_RSA_WITH_RC4_128_MD5\",", "                    \"TLS_ECDH_anon_WITH_RC4_128_SHA\",", "                    \"SSL_DH_anon_WITH_RC4_128_MD5\",", "                    // Weak cipher suites obsoleted in TLS 1.2 [RFC 5246]", "                    \"SSL_RSA_WITH_DES_CBC_SHA\",", "                    \"SSL_DHE_RSA_WITH_DES_CBC_SHA\",", "                    \"SSL_DHE_DSS_WITH_DES_CBC_SHA\",", "                    \"SSL_DH_anon_WITH_DES_CBC_SHA\",", "                    // Weak cipher suites obsoleted in TLS 1.1  [RFC 4346]", "                    \"SSL_RSA_EXPORT_WITH_DES40_CBC_SHA\",", "                    \"SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA\",", "                    \"SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA\",", "                    \"SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA\",", "                    \"SSL_RSA_EXPORT_WITH_RC4_40_MD5\",", "                    \"SSL_DH_anon_EXPORT_WITH_RC4_40_MD5\",", "                    // No traffic encryption cipher suites", "                    \"TLS_RSA_WITH_NULL_SHA256\",", "                    \"TLS_ECDHE_ECDSA_WITH_NULL_SHA\",", "                    \"TLS_ECDHE_RSA_WITH_NULL_SHA\",", "                    \"SSL_RSA_WITH_NULL_SHA\",", "                    \"TLS_ECDH_ECDSA_WITH_NULL_SHA\",", "                    \"TLS_ECDH_RSA_WITH_NULL_SHA\",", "                    \"TLS_ECDH_anon_WITH_NULL_SHA\",", "                    \"SSL_RSA_WITH_NULL_MD5\",", "                    // Definition of the cipher suites that are not supported but the names", "                    // are known.", "                    \"TLS_AES_128_CCM_SHA256\",", "                    \"TLS_AES_128_CCM_8_SHA256\"", "            );", " "], "minus_lines": ["             = Arrays.<String>asList(", "        \"TLS_AES_128_GCM_SHA256\",", "        \"TLS_AES_256_GCM_SHA384\",", "        \"TLS_CHACHA20_POLY1305_SHA256\",", "        \"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\",", "        \"TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\",", "        \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\",", "        \"TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\",", "        \"TLS_RSA_WITH_AES_256_GCM_SHA384\",", "        \"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384\",", "        \"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384\",", "        \"TLS_DHE_RSA_WITH_AES_256_GCM_SHA384\",", "        \"TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256\",", "        \"TLS_DHE_DSS_WITH_AES_256_GCM_SHA384\",", "        \"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_RSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_DHE_RSA_WITH_AES_128_GCM_SHA256\",", "        \"TLS_DHE_DSS_WITH_AES_128_GCM_SHA256\",", "", "        \"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\",", "        \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\",", "        \"TLS_RSA_WITH_AES_256_CBC_SHA256\",", "        \"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\",", "        \"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\",", "        \"TLS_DHE_RSA_WITH_AES_256_CBC_SHA256\",", "        \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA256\",", "        \"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_RSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_DHE_RSA_WITH_AES_256_CBC_SHA\",", "        \"TLS_DHE_DSS_WITH_AES_256_CBC_SHA\",", "        \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_RSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA256\",", "        \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA256\",", "        \"TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA\",", "        \"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\",", "        \"TLS_RSA_WITH_AES_128_CBC_SHA\",", "        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\",", "        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\",", "        \"TLS_DHE_RSA_WITH_AES_128_CBC_SHA\",", "        \"TLS_DHE_DSS_WITH_AES_128_CBC_SHA\",", "", "        \"TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA\",", "        \"TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA\",", "        \"SSL_RSA_WITH_3DES_EDE_CBC_SHA\",", "        \"TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA\",", "        \"TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA\",", "        \"SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA\",", "        \"SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA\",", "", "        \"TLS_EMPTY_RENEGOTIATION_INFO_SCSV\",", "", "        \"TLS_DH_anon_WITH_AES_256_GCM_SHA384\",", "        \"TLS_DH_anon_WITH_AES_128_GCM_SHA256\",", "", "        \"TLS_DH_anon_WITH_AES_256_CBC_SHA256\",", "        \"TLS_ECDH_anon_WITH_AES_256_CBC_SHA\",", "        \"TLS_DH_anon_WITH_AES_256_CBC_SHA\",", "        \"TLS_DH_anon_WITH_AES_128_CBC_SHA256\",", "        \"TLS_ECDH_anon_WITH_AES_128_CBC_SHA\",", "        \"TLS_DH_anon_WITH_AES_128_CBC_SHA\",", "        \"TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA\",", "        \"SSL_DH_anon_WITH_3DES_EDE_CBC_SHA\",", "", "        \"TLS_ECDHE_ECDSA_WITH_RC4_128_SHA\",", "        \"TLS_ECDHE_RSA_WITH_RC4_128_SHA\",", "        \"SSL_RSA_WITH_RC4_128_SHA\",", "        \"TLS_ECDH_ECDSA_WITH_RC4_128_SHA\",", "        \"TLS_ECDH_RSA_WITH_RC4_128_SHA\",", "        \"SSL_RSA_WITH_RC4_128_MD5\",", "        \"TLS_ECDH_anon_WITH_RC4_128_SHA\",", "        \"SSL_DH_anon_WITH_RC4_128_MD5\",", "", "        \"SSL_RSA_WITH_DES_CBC_SHA\",", "        \"SSL_DHE_RSA_WITH_DES_CBC_SHA\",", "        \"SSL_DHE_DSS_WITH_DES_CBC_SHA\",", "        \"SSL_DH_anon_WITH_DES_CBC_SHA\",", "        \"SSL_RSA_EXPORT_WITH_DES40_CBC_SHA\",", "        \"SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA\",", "        \"SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA\",", "        \"SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA\",", "", "        \"SSL_RSA_EXPORT_WITH_RC4_40_MD5\",", "        \"SSL_DH_anon_EXPORT_WITH_RC4_40_MD5\",", "", "        \"TLS_RSA_WITH_NULL_SHA256\",", "        \"TLS_ECDHE_ECDSA_WITH_NULL_SHA\",", "        \"TLS_ECDHE_RSA_WITH_NULL_SHA\",", "        \"SSL_RSA_WITH_NULL_SHA\",", "        \"TLS_ECDH_ECDSA_WITH_NULL_SHA\",", "        \"TLS_ECDH_RSA_WITH_NULL_SHA\",", "        \"TLS_ECDH_anon_WITH_NULL_SHA\",", "        \"SSL_RSA_WITH_NULL_MD5\",", "", "        \"TLS_KRB5_WITH_3DES_EDE_CBC_SHA\",", "        \"TLS_KRB5_WITH_3DES_EDE_CBC_MD5\",", "        \"TLS_KRB5_WITH_RC4_128_SHA\",", "        \"TLS_KRB5_WITH_RC4_128_MD5\",", "        \"TLS_KRB5_WITH_DES_CBC_SHA\",", "        \"TLS_KRB5_WITH_DES_CBC_MD5\",", "        \"TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA\",", "        \"TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5\",", "        \"TLS_KRB5_EXPORT_WITH_RC4_40_SHA\",", "        \"TLS_KRB5_EXPORT_WITH_RC4_40_MD5\"", "    );", " "]}, "chunk_73": {"plus_lines": [], "minus_lines": [" ", "", "     public static void main(String[] args) throws Exception {"]}, "chunk_74": {"plus_lines": ["         showSuites(supportedCipherSuites.toArray(new String[0]),", "                \"All supported cipher suites\");", " "], "minus_lines": ["         showSuites(supportedCipherSuites.toArray(new String[0]),", "                 \"All supported cipher suites\");", " "]}}}