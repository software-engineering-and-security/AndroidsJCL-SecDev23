<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US">
<head>
<link rel="icon" href="/jdk8u/jdk8u/jdk/static/nanoduke.ico" type="image/png" />
<meta name="robots" content="index, nofollow" />
<link rel="stylesheet" href="/jdk8u/jdk8u/jdk/static/style-paper.css" type="text/css" />
<script type="text/javascript" src="/jdk8u/jdk8u/jdk/static/mercurial.js"></script>

<title>jdk8u/jdk8u/jdk: 34bb0aa775b2</title>
</head>
<body>
<div class="container">
<div class="menu">
<div class="logo">
<img src="/jdk8u/jdk8u/jdk/static/duke_pipes.png" width=75 height=90 border=0 alt="Duke!" />
</div>
<ul>
 <li><a href="/jdk8u/jdk8u/jdk/shortlog/34bb0aa775b2">log</a></li>
 <li><a href="/jdk8u/jdk8u/jdk/graph/34bb0aa775b2">graph</a></li>
 <li><a href="/jdk8u/jdk8u/jdk/tags">tags</a></li>
 <li><a href="/jdk8u/jdk8u/jdk/bookmarks">bookmarks</a></li>
 <li><a href="/jdk8u/jdk8u/jdk/branches">branches</a></li>
</ul>
<ul>
 <li class="active">changeset</li>
 <li><a href="/jdk8u/jdk8u/jdk/raw-rev/34bb0aa775b2">raw</a></li>
 <li><a href="/jdk8u/jdk8u/jdk/file/34bb0aa775b2">browse</a></li>
</ul>
<ul>
 
<li>
<a href="/jdk8u/jdk8u/jdk/archive/34bb0aa775b2.zip">zip</a>
</li>
<li>
<a href="/jdk8u/jdk8u/jdk/archive/34bb0aa775b2.tar.gz">gz</a>
</li>
<li>
<a href="/jdk8u/jdk8u/jdk/archive/34bb0aa775b2.tar.bz2">bz2</a>
</li>
</ul>
<ul>
 <li><a href="/jdk8u/jdk8u/jdk/help">help</a></li>
</ul>
</div>

<div class="main">

<h2 class="breadcrumb"><a href="/">OpenJDK</a> / <a href="/jdk8u">jdk8u</a> / <a href="/jdk8u/jdk8u">jdk8u</a> / <a href="/jdk8u/jdk8u/jdk">jdk</a> </h2>
<h3>changeset 13896:34bb0aa775b2   </h3>

<form class="search" action="/jdk8u/jdk8u/jdk/log">

<p><input name="rev" id="search1" type="text" size="30" /></p>
<div id="hint">Find changesets by keywords (author, files, the commit message), revision
number or hash, or <a href="/jdk8u/jdk8u/jdk/help/revsets">revset expression</a>.</div>
</form>

<div class="description">8235274: Enhance typing of methods
Reviewed-by: andrew</div>

<table id="changesetEntry">
<tr>
 <th class="author">author</th>
 <td class="author">&#97;&#118;&#111;&#105;&#116;&#121;&#108;&#111;&#118;</td>
</tr>
<tr>
 <th class="date">date</th>
 <td class="date age">Thu, 20 Feb 2020 19:35:42 +0300</td></tr>
<tr>
 <th class="author">parents</th>
 <td class="author"><a href="/jdk8u/jdk8u/jdk/rev/a6dcbf49526c">a6dcbf49526c</a> </td>
</tr>
<tr>
 <th class="author">children</th>
 <td class="author"> <a href="/jdk8u/jdk8u/jdk/rev/a8f0a9ef1797">a8f0a9ef1797</a></td>
</tr>
<tr>
 <th class="files">files</th>
 <td class="files"><a href="/jdk8u/jdk8u/jdk/file/34bb0aa775b2/src/share/classes/java/lang/invoke/MethodType.java">src/share/classes/java/lang/invoke/MethodType.java</a> </td>
</tr>
<tr>
  <th class="diffstat">diffstat</th>
  <td class="diffstat">
     1 files changed, 14 insertions(+), 24 deletions(-)

    <a id="diffstatexpand" href="javascript:toggleDiffstat()"/>[<tt>+</tt>]</a>
    <div id="diffstatdetails" style="display:none;">
      <a href="javascript:toggleDiffstat()"/>[<tt>-</tt>]</a>
      <p>
      <table class="stripes2">  <tr>
    <td class="diffstat-file"><a href="#l1.1">src/share/classes/java/lang/invoke/MethodType.java</a></td>
    <td class="diffstat-total" align="right">38</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:36.8421052632%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:63.1578947368%;">&nbsp;</span>
    </td>
  </tr>
</table>
    </div>
  </td>
</tr>
</table>

<div class="overflow">
<div class="sourcefirst linewraptoggle">line wrap: <a class="linewraplink" href="javascript:toggleLinewrap()">on</a></div>
<div class="sourcefirst"> line diff</div>
<div class="stripes2 diffblocks">
<div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l1.1" class="minusline">--- a/src/share/classes/java/lang/invoke/MethodType.java	Mon Mar 30 05:13:42 2020 +0100</span><a href="#l1.1"></a>
<span id="l1.2" class="plusline">+++ b/src/share/classes/java/lang/invoke/MethodType.java	Thu Feb 20 19:35:42 2020 +0300</span><a href="#l1.2"></a>
<span id="l1.3" class="atline">@@ -97,7 +97,8 @@</span><a href="#l1.3"></a>
<span id="l1.4"> </span><a href="#l1.4"></a>
<span id="l1.5">     // The remaining fields are caches of various sorts:</span><a href="#l1.5"></a>
<span id="l1.6">     private @Stable MethodTypeForm form; // erased form, plus cached data about primitives</span><a href="#l1.6"></a>
<span id="l1.7" class="minusline">-    private @Stable MethodType wrapAlt;  // alternative wrapped/unwrapped version</span><a href="#l1.7"></a>
<span id="l1.8" class="plusline">+    private @Stable Object wrapAlt;  // alternative wrapped/unwrapped version and</span><a href="#l1.8"></a>
<span id="l1.9" class="plusline">+                                     // private communication for readObject and readResolve</span><a href="#l1.9"></a>
<span id="l1.10">     private @Stable Invokers invokers;   // cache of handy higher-order adapters</span><a href="#l1.10"></a>
<span id="l1.11">     private @Stable String methodDescriptor;  // cache for toMethodDescriptorString</span><a href="#l1.11"></a>
<span id="l1.12"> </span><a href="#l1.12"></a>
<span id="l1.13" class="atline">@@ -673,7 +674,7 @@</span><a href="#l1.13"></a>
<span id="l1.14"> </span><a href="#l1.14"></a>
<span id="l1.15">     private static MethodType wrapWithPrims(MethodType pt) {</span><a href="#l1.15"></a>
<span id="l1.16">         assert(pt.hasPrimitives());</span><a href="#l1.16"></a>
<span id="l1.17" class="minusline">-        MethodType wt = pt.wrapAlt;</span><a href="#l1.17"></a>
<span id="l1.18" class="plusline">+        MethodType wt = (MethodType)pt.wrapAlt;</span><a href="#l1.18"></a>
<span id="l1.19">         if (wt == null) {</span><a href="#l1.19"></a>
<span id="l1.20">             // fill in lazily</span><a href="#l1.20"></a>
<span id="l1.21">             wt = MethodTypeForm.canonicalize(pt, MethodTypeForm.WRAP, MethodTypeForm.WRAP);</span><a href="#l1.21"></a>
<span id="l1.22" class="atline">@@ -685,7 +686,7 @@</span><a href="#l1.22"></a>
<span id="l1.23"> </span><a href="#l1.23"></a>
<span id="l1.24">     private static MethodType unwrapWithNoPrims(MethodType wt) {</span><a href="#l1.24"></a>
<span id="l1.25">         assert(!wt.hasPrimitives());</span><a href="#l1.25"></a>
<span id="l1.26" class="minusline">-        MethodType uwt = wt.wrapAlt;</span><a href="#l1.26"></a>
<span id="l1.27" class="plusline">+        MethodType uwt = (MethodType)wt.wrapAlt;</span><a href="#l1.27"></a>
<span id="l1.28">         if (uwt == null) {</span><a href="#l1.28"></a>
<span id="l1.29">             // fill in lazily</span><a href="#l1.29"></a>
<span id="l1.30">             uwt = MethodTypeForm.canonicalize(wt, MethodTypeForm.UNWRAP, MethodTypeForm.UNWRAP);</span><a href="#l1.30"></a>
<span id="l1.31" class="atline">@@ -1144,27 +1145,18 @@</span><a href="#l1.31"></a>
<span id="l1.32">      * @see #writeObject</span><a href="#l1.32"></a>
<span id="l1.33">      */</span><a href="#l1.33"></a>
<span id="l1.34">     private void readObject(java.io.ObjectInputStream s) throws java.io.IOException, ClassNotFoundException {</span><a href="#l1.34"></a>
<span id="l1.35" class="minusline">-        // Assign temporary defaults in case this object escapes</span><a href="#l1.35"></a>
<span id="l1.36" class="minusline">-        MethodType_init(void.class, NO_PTYPES);</span><a href="#l1.36"></a>
<span id="l1.37" class="plusline">+        // Assign defaults in case this object escapes</span><a href="#l1.37"></a>
<span id="l1.38" class="plusline">+        UNSAFE.putObject(this, rtypeOffset, void.class);</span><a href="#l1.38"></a>
<span id="l1.39" class="plusline">+        UNSAFE.putObject(this, ptypesOffset, NO_PTYPES);</span><a href="#l1.39"></a>
<span id="l1.40"> </span><a href="#l1.40"></a>
<span id="l1.41">         s.defaultReadObject();  // requires serialPersistentFields to be an empty array</span><a href="#l1.41"></a>
<span id="l1.42"> </span><a href="#l1.42"></a>
<span id="l1.43">         Class&lt;?&gt;   returnType     = (Class&lt;?&gt;)   s.readObject();</span><a href="#l1.43"></a>
<span id="l1.44">         Class&lt;?&gt;[] parameterArray = (Class&lt;?&gt;[]) s.readObject();</span><a href="#l1.44"></a>
<span id="l1.45" class="minusline">-        parameterArray = parameterArray.clone();  // make sure it is unshared</span><a href="#l1.45"></a>
<span id="l1.46"> </span><a href="#l1.46"></a>
<span id="l1.47" class="minusline">-        // Assign deserialized values</span><a href="#l1.47"></a>
<span id="l1.48" class="minusline">-        MethodType_init(returnType, parameterArray);</span><a href="#l1.48"></a>
<span id="l1.49" class="minusline">-    }</span><a href="#l1.49"></a>
<span id="l1.50" class="minusline">-</span><a href="#l1.50"></a>
<span id="l1.51" class="minusline">-    // Initialization of state for deserialization only</span><a href="#l1.51"></a>
<span id="l1.52" class="minusline">-    private void MethodType_init(Class&lt;?&gt; rtype, Class&lt;?&gt;[] ptypes) {</span><a href="#l1.52"></a>
<span id="l1.53" class="minusline">-        // In order to communicate these values to readResolve, we must</span><a href="#l1.53"></a>
<span id="l1.54" class="minusline">-        // store them into the implementation-specific final fields.</span><a href="#l1.54"></a>
<span id="l1.55" class="minusline">-        checkRtype(rtype);</span><a href="#l1.55"></a>
<span id="l1.56" class="minusline">-        checkPtypes(ptypes);</span><a href="#l1.56"></a>
<span id="l1.57" class="minusline">-        UNSAFE.putObject(this, rtypeOffset, rtype);</span><a href="#l1.57"></a>
<span id="l1.58" class="minusline">-        UNSAFE.putObject(this, ptypesOffset, ptypes);</span><a href="#l1.58"></a>
<span id="l1.59" class="plusline">+        // Verify all operands, and make sure ptypes is unshared</span><a href="#l1.59"></a>
<span id="l1.60" class="plusline">+        // Cache the new MethodType for readResolve</span><a href="#l1.60"></a>
<span id="l1.61" class="plusline">+        wrapAlt = new MethodType[]{MethodType.methodType(returnType, parameterArray)};</span><a href="#l1.61"></a>
<span id="l1.62">     }</span><a href="#l1.62"></a>
<span id="l1.63"> </span><a href="#l1.63"></a>
<span id="l1.64">     // Support for resetting final fields while deserializing</span><a href="#l1.64"></a>
<span id="l1.65" class="atline">@@ -1189,12 +1181,10 @@</span><a href="#l1.65"></a>
<span id="l1.66">         // Do not use a trusted path for deserialization:</span><a href="#l1.66"></a>
<span id="l1.67">         //    return makeImpl(rtype, ptypes, true);</span><a href="#l1.67"></a>
<span id="l1.68">         // Verify all operands, and make sure ptypes is unshared:</span><a href="#l1.68"></a>
<span id="l1.69" class="minusline">-        try {</span><a href="#l1.69"></a>
<span id="l1.70" class="minusline">-            return methodType(rtype, ptypes);</span><a href="#l1.70"></a>
<span id="l1.71" class="minusline">-        } finally {</span><a href="#l1.71"></a>
<span id="l1.72" class="minusline">-            // Re-assign defaults in case this object escapes</span><a href="#l1.72"></a>
<span id="l1.73" class="minusline">-            MethodType_init(void.class, NO_PTYPES);</span><a href="#l1.73"></a>
<span id="l1.74" class="minusline">-        }</span><a href="#l1.74"></a>
<span id="l1.75" class="plusline">+        // Return a new validated MethodType for the rtype and ptypes passed from readObject.</span><a href="#l1.75"></a>
<span id="l1.76" class="plusline">+        MethodType mt = ((MethodType[])wrapAlt)[0];</span><a href="#l1.76"></a>
<span id="l1.77" class="plusline">+        wrapAlt = null;</span><a href="#l1.77"></a>
<span id="l1.78" class="plusline">+        return mt;</span><a href="#l1.78"></a>
<span id="l1.79">     }</span><a href="#l1.79"></a>
<span id="l1.80"> </span><a href="#l1.80"></a>
<span id="l1.81">     /**</span><a href="#l1.81"></a></pre></div>
</div>
</div>

</div>
</div>


<div class="container"><div class="main footer">
&copy 2007, <script>document.write(new Date().getFullYear())</script> Oracle and/or its affiliates<br/>
<a href="http://openjdk.java.net/legal/tou/">Terms of Use</a>
&#183; <a href="http://www.oracle.com/us/legal/privacy/">Privacy</a>
&#183; <a href="https://openjdk.java.net/legal/openjdk-trademark-notice.html">Trademarks</a>
</div></div>

</body>
</html>

