<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US">
<head>
<link rel="icon" href="/jdk6/jdk6/jdk/static/nanoduke.ico" type="image/png" />
<meta name="robots" content="index, nofollow" />
<link rel="stylesheet" href="/jdk6/jdk6/jdk/static/style-paper.css" type="text/css" />
<script type="text/javascript" src="/jdk6/jdk6/jdk/static/mercurial.js"></script>

<title>jdk6/jdk6/jdk: ec321bbac6cd</title>
</head>
<body>
<div class="container">
<div class="menu">
<div class="logo">
<img src="/jdk6/jdk6/jdk/static/duke_pipes.png" width=75 height=90 border=0 alt="Duke!" />
</div>
<ul>
 <li><a href="/jdk6/jdk6/jdk/shortlog/ec321bbac6cd">log</a></li>
 <li><a href="/jdk6/jdk6/jdk/graph/ec321bbac6cd">graph</a></li>
 <li><a href="/jdk6/jdk6/jdk/tags">tags</a></li>
 <li><a href="/jdk6/jdk6/jdk/bookmarks">bookmarks</a></li>
 <li><a href="/jdk6/jdk6/jdk/branches">branches</a></li>
</ul>
<ul>
 <li class="active">changeset</li>
 <li><a href="/jdk6/jdk6/jdk/raw-rev/ec321bbac6cd">raw</a></li>
 <li><a href="/jdk6/jdk6/jdk/file/ec321bbac6cd">browse</a></li>
</ul>
<ul>
 
<li>
<a href="/jdk6/jdk6/jdk/archive/ec321bbac6cd.zip">zip</a>
</li>
<li>
<a href="/jdk6/jdk6/jdk/archive/ec321bbac6cd.tar.gz">gz</a>
</li>
<li>
<a href="/jdk6/jdk6/jdk/archive/ec321bbac6cd.tar.bz2">bz2</a>
</li>
</ul>
<ul>
 <li><a href="/jdk6/jdk6/jdk/help">help</a></li>
</ul>
</div>

<div class="main">

<h2 class="breadcrumb"><a href="/">OpenJDK</a> / <a href="/jdk6">jdk6</a> / <a href="/jdk6/jdk6">jdk6</a> / <a href="/jdk6/jdk6/jdk">jdk</a> </h2>
<h3>changeset 165:ec321bbac6cd   </h3>

<form class="search" action="/jdk6/jdk6/jdk/log">

<p><input name="rev" id="search1" type="text" size="30" /></p>
<div id="hint">Find changesets by keywords (author, files, the commit message), revision
number or hash, or <a href="/jdk6/jdk6/jdk/help/revsets">revset expression</a>.</div>
</form>

<div class="description">6660539: Introspector shares cache of mutable BeanInfo between AppContexts.
Reviewed-by: peterz</div>

<table id="changesetEntry">
<tr>
 <th class="author">author</th>
 <td class="author">&#109;&#97;&#108;&#101;&#110;&#107;&#111;&#118;</td>
</tr>
<tr>
 <th class="date">date</th>
 <td class="date age">Wed, 29 Apr 2009 20:37:25 +0400</td></tr>
<tr>
 <th class="author">parents</th>
 <td class="author"><a href="/jdk6/jdk6/jdk/rev/291795d6538c">291795d6538c</a> </td>
</tr>
<tr>
 <th class="author">children</th>
 <td class="author"> <a href="/jdk6/jdk6/jdk/rev/ed63c186574c">ed63c186574c</a></td>
</tr>
<tr>
 <th class="files">files</th>
 <td class="files"><a href="/jdk6/jdk6/jdk/file/ec321bbac6cd/src/share/classes/java/beans/Introspector.java">src/share/classes/java/beans/Introspector.java</a> <a href="/jdk6/jdk6/jdk/file/ec321bbac6cd/test/java/beans/Introspector/Test6660539.java">test/java/beans/Introspector/Test6660539.java</a> </td>
</tr>
<tr>
  <th class="diffstat">diffstat</th>
  <td class="diffstat">
     2 files changed, 90 insertions(+), 7 deletions(-)

    <a id="diffstatexpand" href="javascript:toggleDiffstat()"/>[<tt>+</tt>]</a>
    <div id="diffstatdetails" style="display:none;">
      <a href="javascript:toggleDiffstat()"/>[<tt>-</tt>]</a>
      <p>
      <table class="stripes2">  <tr>
    <td class="diffstat-file"><a href="#l1.1">src/share/classes/java/beans/Introspector.java</a></td>
    <td class="diffstat-total" align="right">29</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:32.3529411765%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:10.2941176471%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l2.1">test/java/beans/Introspector/Test6660539.java</a></td>
    <td class="diffstat-total" align="right">68</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:100.0%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:0.0%;">&nbsp;</span>
    </td>
  </tr>
</table>
    </div>
  </td>
</tr>
</table>

<div class="overflow">
<div class="sourcefirst linewraptoggle">line wrap: <a class="linewraplink" href="javascript:toggleLinewrap()">on</a></div>
<div class="sourcefirst"> line diff</div>
<div class="stripes2 diffblocks">
<div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l1.1" class="minusline">--- a/src/share/classes/java/beans/Introspector.java	Wed Apr 29 20:02:51 2009 +0400</span><a href="#l1.1"></a>
<span id="l1.2" class="plusline">+++ b/src/share/classes/java/beans/Introspector.java	Wed Apr 29 20:37:25 2009 +0400</span><a href="#l1.2"></a>
<span id="l1.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l1.3"></a>
<span id="l1.4"> /*</span><a href="#l1.4"></a>
<span id="l1.5" class="minusline">- * Copyright 1996-2006 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l1.5"></a>
<span id="l1.6" class="plusline">+ * Copyright 1996-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l1.6"></a>
<span id="l1.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l1.7"></a>
<span id="l1.8">  *</span><a href="#l1.8"></a>
<span id="l1.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l1.9"></a>
<span id="l1.10" class="atline">@@ -45,6 +45,7 @@</span><a href="#l1.10"></a>
<span id="l1.11"> import java.util.List;</span><a href="#l1.11"></a>
<span id="l1.12"> import java.util.WeakHashMap;</span><a href="#l1.12"></a>
<span id="l1.13"> import java.util.TreeMap;</span><a href="#l1.13"></a>
<span id="l1.14" class="plusline">+import sun.awt.AppContext;</span><a href="#l1.14"></a>
<span id="l1.15"> import sun.reflect.misc.ReflectUtil;</span><a href="#l1.15"></a>
<span id="l1.16"> </span><a href="#l1.16"></a>
<span id="l1.17"> /**</span><a href="#l1.17"></a>
<span id="l1.18" class="atline">@@ -111,8 +112,8 @@</span><a href="#l1.18"></a>
<span id="l1.19">     // Static Caches to speed up introspection.</span><a href="#l1.19"></a>
<span id="l1.20">     private static Map declaredMethodCache =</span><a href="#l1.20"></a>
<span id="l1.21">         Collections.synchronizedMap(new WeakHashMap());</span><a href="#l1.21"></a>
<span id="l1.22" class="minusline">-    private static Map beanInfoCache =</span><a href="#l1.22"></a>
<span id="l1.23" class="minusline">-        Collections.synchronizedMap(new WeakHashMap());</span><a href="#l1.23"></a>
<span id="l1.24" class="plusline">+</span><a href="#l1.24"></a>
<span id="l1.25" class="plusline">+    private static final Object BEANINFO_CACHE = new Object();</span><a href="#l1.25"></a>
<span id="l1.26"> </span><a href="#l1.26"></a>
<span id="l1.27">     private Class beanClass;</span><a href="#l1.27"></a>
<span id="l1.28">     private BeanInfo explicitBeanInfo;</span><a href="#l1.28"></a>
<span id="l1.29" class="atline">@@ -175,10 +176,18 @@</span><a href="#l1.29"></a>
<span id="l1.30">         if (!ReflectUtil.isPackageAccessible(beanClass)) {</span><a href="#l1.30"></a>
<span id="l1.31">             return (new Introspector(beanClass, null, USE_ALL_BEANINFO)).getBeanInfo();</span><a href="#l1.31"></a>
<span id="l1.32">         }</span><a href="#l1.32"></a>
<span id="l1.33" class="minusline">-        BeanInfo bi = (BeanInfo)beanInfoCache.get(beanClass);</span><a href="#l1.33"></a>
<span id="l1.34" class="plusline">+        Map&lt;Class&lt;?&gt;, BeanInfo&gt; map;</span><a href="#l1.34"></a>
<span id="l1.35" class="plusline">+        synchronized (BEANINFO_CACHE) {</span><a href="#l1.35"></a>
<span id="l1.36" class="plusline">+            map = (Map&lt;Class&lt;?&gt;, BeanInfo&gt;) AppContext.getAppContext().get(BEANINFO_CACHE);</span><a href="#l1.36"></a>
<span id="l1.37" class="plusline">+            if (map == null) {</span><a href="#l1.37"></a>
<span id="l1.38" class="plusline">+                map = Collections.synchronizedMap(new WeakHashMap&lt;Class&lt;?&gt;, BeanInfo&gt;());</span><a href="#l1.38"></a>
<span id="l1.39" class="plusline">+                AppContext.getAppContext().put(BEANINFO_CACHE, map);</span><a href="#l1.39"></a>
<span id="l1.40" class="plusline">+            }</span><a href="#l1.40"></a>
<span id="l1.41" class="plusline">+        }</span><a href="#l1.41"></a>
<span id="l1.42" class="plusline">+        BeanInfo bi = map.get(beanClass);</span><a href="#l1.42"></a>
<span id="l1.43">         if (bi == null) {</span><a href="#l1.43"></a>
<span id="l1.44">             bi = (new Introspector(beanClass, null, USE_ALL_BEANINFO)).getBeanInfo();</span><a href="#l1.44"></a>
<span id="l1.45" class="minusline">-            beanInfoCache.put(beanClass, bi);</span><a href="#l1.45"></a>
<span id="l1.46" class="plusline">+            map.put(beanClass, bi);</span><a href="#l1.46"></a>
<span id="l1.47">         }</span><a href="#l1.47"></a>
<span id="l1.48">         return bi;</span><a href="#l1.48"></a>
<span id="l1.49">     }</span><a href="#l1.49"></a>
<span id="l1.50" class="atline">@@ -327,7 +336,10 @@</span><a href="#l1.50"></a>
<span id="l1.51">      */</span><a href="#l1.51"></a>
<span id="l1.52"> </span><a href="#l1.52"></a>
<span id="l1.53">     public static void flushCaches() {</span><a href="#l1.53"></a>
<span id="l1.54" class="minusline">-        beanInfoCache.clear();</span><a href="#l1.54"></a>
<span id="l1.55" class="plusline">+        Map map = (Map) AppContext.getAppContext().get(BEANINFO_CACHE);</span><a href="#l1.55"></a>
<span id="l1.56" class="plusline">+        if (map != null) {</span><a href="#l1.56"></a>
<span id="l1.57" class="plusline">+            map.clear();</span><a href="#l1.57"></a>
<span id="l1.58" class="plusline">+        }</span><a href="#l1.58"></a>
<span id="l1.59">         declaredMethodCache.clear();</span><a href="#l1.59"></a>
<span id="l1.60">     }</span><a href="#l1.60"></a>
<span id="l1.61"> </span><a href="#l1.61"></a>
<span id="l1.62" class="atline">@@ -350,7 +362,10 @@</span><a href="#l1.62"></a>
<span id="l1.63">         if (clz == null) {</span><a href="#l1.63"></a>
<span id="l1.64">             throw new NullPointerException();</span><a href="#l1.64"></a>
<span id="l1.65">         }</span><a href="#l1.65"></a>
<span id="l1.66" class="minusline">-        beanInfoCache.remove(clz);</span><a href="#l1.66"></a>
<span id="l1.67" class="plusline">+        Map map = (Map) AppContext.getAppContext().get(BEANINFO_CACHE);</span><a href="#l1.67"></a>
<span id="l1.68" class="plusline">+        if (map != null) {</span><a href="#l1.68"></a>
<span id="l1.69" class="plusline">+            map.remove(clz);</span><a href="#l1.69"></a>
<span id="l1.70" class="plusline">+        }</span><a href="#l1.70"></a>
<span id="l1.71">         declaredMethodCache.remove(clz);</span><a href="#l1.71"></a>
<span id="l1.72">     }</span><a href="#l1.72"></a>
<span id="l1.73"> </span><a href="#l1.73"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l2.1" class="minusline">--- /dev/null	Thu Jan 01 00:00:00 1970 +0000</span><a href="#l2.1"></a>
<span id="l2.2" class="plusline">+++ b/test/java/beans/Introspector/Test6660539.java	Wed Apr 29 20:37:25 2009 +0400</span><a href="#l2.2"></a>
<span id="l2.3" class="atline">@@ -0,0 +1,68 @@</span><a href="#l2.3"></a>
<span id="l2.4" class="plusline">+/*</span><a href="#l2.4"></a>
<span id="l2.5" class="plusline">+ * Copyright 2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l2.5"></a>
<span id="l2.6" class="plusline">+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l2.6"></a>
<span id="l2.7" class="plusline">+ *</span><a href="#l2.7"></a>
<span id="l2.8" class="plusline">+ * This code is free software; you can redistribute it and/or modify it</span><a href="#l2.8"></a>
<span id="l2.9" class="plusline">+ * under the terms of the GNU General Public License version 2 only, as</span><a href="#l2.9"></a>
<span id="l2.10" class="plusline">+ * published by the Free Software Foundation.</span><a href="#l2.10"></a>
<span id="l2.11" class="plusline">+ *</span><a href="#l2.11"></a>
<span id="l2.12" class="plusline">+ * This code is distributed in the hope that it will be useful, but WITHOUT</span><a href="#l2.12"></a>
<span id="l2.13" class="plusline">+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or</span><a href="#l2.13"></a>
<span id="l2.14" class="plusline">+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License</span><a href="#l2.14"></a>
<span id="l2.15" class="plusline">+ * version 2 for more details (a copy is included in the LICENSE file that</span><a href="#l2.15"></a>
<span id="l2.16" class="plusline">+ * accompanied this code).</span><a href="#l2.16"></a>
<span id="l2.17" class="plusline">+ *</span><a href="#l2.17"></a>
<span id="l2.18" class="plusline">+ * You should have received a copy of the GNU General Public License version</span><a href="#l2.18"></a>
<span id="l2.19" class="plusline">+ * 2 along with this work; if not, write to the Free Software Foundation,</span><a href="#l2.19"></a>
<span id="l2.20" class="plusline">+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.</span><a href="#l2.20"></a>
<span id="l2.21" class="plusline">+ *</span><a href="#l2.21"></a>
<span id="l2.22" class="plusline">+ * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,</span><a href="#l2.22"></a>
<span id="l2.23" class="plusline">+ * CA 95054 USA or visit www.sun.com if you need additional information or</span><a href="#l2.23"></a>
<span id="l2.24" class="plusline">+ * have any questions.</span><a href="#l2.24"></a>
<span id="l2.25" class="plusline">+ */</span><a href="#l2.25"></a>
<span id="l2.26" class="plusline">+</span><a href="#l2.26"></a>
<span id="l2.27" class="plusline">+/*</span><a href="#l2.27"></a>
<span id="l2.28" class="plusline">+ * @test</span><a href="#l2.28"></a>
<span id="l2.29" class="plusline">+ * @bug 6660539</span><a href="#l2.29"></a>
<span id="l2.30" class="plusline">+ * @summary Tests changeable BeanInfo cache in different application contexts</span><a href="#l2.30"></a>
<span id="l2.31" class="plusline">+ * @author Sergey Malenkov</span><a href="#l2.31"></a>
<span id="l2.32" class="plusline">+ */</span><a href="#l2.32"></a>
<span id="l2.33" class="plusline">+</span><a href="#l2.33"></a>
<span id="l2.34" class="plusline">+import sun.awt.SunToolkit;</span><a href="#l2.34"></a>
<span id="l2.35" class="plusline">+</span><a href="#l2.35"></a>
<span id="l2.36" class="plusline">+import java.beans.BeanInfo;</span><a href="#l2.36"></a>
<span id="l2.37" class="plusline">+import java.beans.IntrospectionException;</span><a href="#l2.37"></a>
<span id="l2.38" class="plusline">+import java.beans.Introspector;</span><a href="#l2.38"></a>
<span id="l2.39" class="plusline">+import java.beans.PropertyDescriptor;</span><a href="#l2.39"></a>
<span id="l2.40" class="plusline">+</span><a href="#l2.40"></a>
<span id="l2.41" class="plusline">+public class Test6660539 implements Runnable {</span><a href="#l2.41"></a>
<span id="l2.42" class="plusline">+    private static final String NAME = &quot;$$$&quot;;</span><a href="#l2.42"></a>
<span id="l2.43" class="plusline">+</span><a href="#l2.43"></a>
<span id="l2.44" class="plusline">+    public static void main(String[] args) throws Exception {</span><a href="#l2.44"></a>
<span id="l2.45" class="plusline">+        for (PropertyDescriptor pd : getPropertyDescriptors()) {</span><a href="#l2.45"></a>
<span id="l2.46" class="plusline">+            pd.setDisplayName(NAME);</span><a href="#l2.46"></a>
<span id="l2.47" class="plusline">+        }</span><a href="#l2.47"></a>
<span id="l2.48" class="plusline">+        ThreadGroup group = new ThreadGroup(NAME);</span><a href="#l2.48"></a>
<span id="l2.49" class="plusline">+        Thread thread = new Thread(group, new Test6660539());</span><a href="#l2.49"></a>
<span id="l2.50" class="plusline">+        thread.start();</span><a href="#l2.50"></a>
<span id="l2.51" class="plusline">+        thread.join();</span><a href="#l2.51"></a>
<span id="l2.52" class="plusline">+    }</span><a href="#l2.52"></a>
<span id="l2.53" class="plusline">+</span><a href="#l2.53"></a>
<span id="l2.54" class="plusline">+    public void run() {</span><a href="#l2.54"></a>
<span id="l2.55" class="plusline">+        SunToolkit.createNewAppContext();</span><a href="#l2.55"></a>
<span id="l2.56" class="plusline">+        for (PropertyDescriptor pd : getPropertyDescriptors()) {</span><a href="#l2.56"></a>
<span id="l2.57" class="plusline">+            if (pd.getDisplayName().equals(NAME))</span><a href="#l2.57"></a>
<span id="l2.58" class="plusline">+                throw new Error(&quot;shared BeanInfo cache&quot;);</span><a href="#l2.58"></a>
<span id="l2.59" class="plusline">+        }</span><a href="#l2.59"></a>
<span id="l2.60" class="plusline">+    }</span><a href="#l2.60"></a>
<span id="l2.61" class="plusline">+</span><a href="#l2.61"></a>
<span id="l2.62" class="plusline">+    private static PropertyDescriptor[] getPropertyDescriptors() {</span><a href="#l2.62"></a>
<span id="l2.63" class="plusline">+        try {</span><a href="#l2.63"></a>
<span id="l2.64" class="plusline">+            BeanInfo info = Introspector.getBeanInfo(Test6660539.class);</span><a href="#l2.64"></a>
<span id="l2.65" class="plusline">+            return info.getPropertyDescriptors();</span><a href="#l2.65"></a>
<span id="l2.66" class="plusline">+        }</span><a href="#l2.66"></a>
<span id="l2.67" class="plusline">+        catch (IntrospectionException exception) {</span><a href="#l2.67"></a>
<span id="l2.68" class="plusline">+            throw new Error(&quot;unexpected&quot;, exception);</span><a href="#l2.68"></a>
<span id="l2.69" class="plusline">+        }</span><a href="#l2.69"></a>
<span id="l2.70" class="plusline">+    }</span><a href="#l2.70"></a>
<span id="l2.71" class="plusline">+}</span><a href="#l2.71"></a></pre></div>
</div>
</div>

</div>
</div>


<div class="container"><div class="main footer">
&copy 2007, <script>document.write(new Date().getFullYear())</script> Oracle and/or its affiliates<br/>
<a href="http://openjdk.java.net/legal/tou/">Terms of Use</a>
&#183; <a href="http://www.oracle.com/us/legal/privacy/">Privacy</a>
&#183; <a href="https://openjdk.java.net/legal/openjdk-trademark-notice.html">Trademarks</a>
</div></div>

</body>
</html>

