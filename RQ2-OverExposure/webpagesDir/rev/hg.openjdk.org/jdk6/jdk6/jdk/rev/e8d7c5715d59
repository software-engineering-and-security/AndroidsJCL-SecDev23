<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US">
<head>
<link rel="icon" href="/jdk6/jdk6/jdk/static/nanoduke.ico" type="image/png" />
<meta name="robots" content="index, nofollow" />
<link rel="stylesheet" href="/jdk6/jdk6/jdk/static/style-paper.css" type="text/css" />
<script type="text/javascript" src="/jdk6/jdk6/jdk/static/mercurial.js"></script>

<title>jdk6/jdk6/jdk: e8d7c5715d59</title>
</head>
<body>
<div class="container">
<div class="menu">
<div class="logo">
<img src="/jdk6/jdk6/jdk/static/duke_pipes.png" width=75 height=90 border=0 alt="Duke!" />
</div>
<ul>
 <li><a href="/jdk6/jdk6/jdk/shortlog/e8d7c5715d59">log</a></li>
 <li><a href="/jdk6/jdk6/jdk/graph/e8d7c5715d59">graph</a></li>
 <li><a href="/jdk6/jdk6/jdk/tags">tags</a></li>
 <li><a href="/jdk6/jdk6/jdk/bookmarks">bookmarks</a></li>
 <li><a href="/jdk6/jdk6/jdk/branches">branches</a></li>
</ul>
<ul>
 <li class="active">changeset</li>
 <li><a href="/jdk6/jdk6/jdk/raw-rev/e8d7c5715d59">raw</a></li>
 <li><a href="/jdk6/jdk6/jdk/file/e8d7c5715d59">browse</a></li>
</ul>
<ul>
 
<li>
<a href="/jdk6/jdk6/jdk/archive/e8d7c5715d59.zip">zip</a>
</li>
<li>
<a href="/jdk6/jdk6/jdk/archive/e8d7c5715d59.tar.gz">gz</a>
</li>
<li>
<a href="/jdk6/jdk6/jdk/archive/e8d7c5715d59.tar.bz2">bz2</a>
</li>
</ul>
<ul>
 <li><a href="/jdk6/jdk6/jdk/help">help</a></li>
</ul>
</div>

<div class="main">

<h2 class="breadcrumb"><a href="/">OpenJDK</a> / <a href="/jdk6">jdk6</a> / <a href="/jdk6/jdk6">jdk6</a> / <a href="/jdk6/jdk6/jdk">jdk</a> </h2>
<h3>changeset 228:e8d7c5715d59   </h3>

<form class="search" action="/jdk6/jdk6/jdk/log">

<p><input name="rev" id="search1" type="text" size="30" /></p>
<div id="hint">Find changesets by keywords (author, files, the commit message), revision
number or hash, or <a href="/jdk6/jdk6/jdk/help/revsets">revset expression</a>.</div>
</form>

<div class="description">6657026: Numerous static security flaws in Swing (findbugs)
Reviewed-by: hawtin, peterz</div>

<table id="changesetEntry">
<tr>
 <th class="author">author</th>
 <td class="author">&#109;&#97;&#108;&#101;&#110;&#107;&#111;&#118;</td>
</tr>
<tr>
 <th class="date">date</th>
 <td class="date age">Wed, 09 Sep 2009 17:57:45 +0400</td></tr>
<tr>
 <th class="author">parents</th>
 <td class="author"><a href="/jdk6/jdk6/jdk/rev/94a7f5675cc2">94a7f5675cc2</a> </td>
</tr>
<tr>
 <th class="author">children</th>
 <td class="author"> <a href="/jdk6/jdk6/jdk/rev/529c2bf5d5f7">529c2bf5d5f7</a></td>
</tr>
<tr>
 <th class="files">files</th>
 <td class="files"><a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/com/sun/java/swing/plaf/gtk/GTKStyle.java">src/share/classes/com/sun/java/swing/plaf/gtk/GTKStyle.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/JComponent.java">src/share/classes/javax/swing/JComponent.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/JDialog.java">src/share/classes/javax/swing/JDialog.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/JEditorPane.java">src/share/classes/javax/swing/JEditorPane.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/JFrame.java">src/share/classes/javax/swing/JFrame.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/JInternalFrame.java">src/share/classes/javax/swing/JInternalFrame.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/JPopupMenu.java">src/share/classes/javax/swing/JPopupMenu.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/MenuSelectionManager.java">src/share/classes/javax/swing/MenuSelectionManager.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/PopupFactory.java">src/share/classes/javax/swing/PopupFactory.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/SwingUtilities.java">src/share/classes/javax/swing/SwingUtilities.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/SwingWorker.java">src/share/classes/javax/swing/SwingWorker.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/TimerQueue.java">src/share/classes/javax/swing/TimerQueue.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/ToolTipManager.java">src/share/classes/javax/swing/ToolTipManager.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/UIManager.java">src/share/classes/javax/swing/UIManager.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/plaf/basic/BasicComboBoxUI.java">src/share/classes/javax/swing/plaf/basic/BasicComboBoxUI.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/plaf/basic/BasicLabelUI.java">src/share/classes/javax/swing/plaf/basic/BasicLabelUI.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/plaf/basic/BasicListUI.java">src/share/classes/javax/swing/plaf/basic/BasicListUI.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/plaf/basic/BasicPopupMenuUI.java">src/share/classes/javax/swing/plaf/basic/BasicPopupMenuUI.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/plaf/basic/BasicSplitPaneUI.java">src/share/classes/javax/swing/plaf/basic/BasicSplitPaneUI.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/plaf/basic/BasicTableUI.java">src/share/classes/javax/swing/plaf/basic/BasicTableUI.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/plaf/basic/BasicTreeUI.java">src/share/classes/javax/swing/plaf/basic/BasicTreeUI.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/plaf/metal/MetalBorders.java">src/share/classes/javax/swing/plaf/metal/MetalBorders.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/plaf/metal/MetalBumps.java">src/share/classes/javax/swing/plaf/metal/MetalBumps.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/plaf/metal/MetalInternalFrameUI.java">src/share/classes/javax/swing/plaf/metal/MetalInternalFrameUI.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/plaf/metal/MetalSliderUI.java">src/share/classes/javax/swing/plaf/metal/MetalSliderUI.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/plaf/synth/ImagePainter.java">src/share/classes/javax/swing/plaf/synth/ImagePainter.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/plaf/synth/SynthLookAndFeel.java">src/share/classes/javax/swing/plaf/synth/SynthLookAndFeel.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/javax/swing/text/JTextComponent.java">src/share/classes/javax/swing/text/JTextComponent.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/sun/swing/DefaultLookup.java">src/share/classes/sun/swing/DefaultLookup.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/src/share/classes/sun/swing/SwingUtilities2.java">src/share/classes/sun/swing/SwingUtilities2.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/test/javax/swing/ToolTipManager/Test6657026.java">test/javax/swing/ToolTipManager/Test6657026.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/test/javax/swing/UIManager/Test6657026.java">test/javax/swing/UIManager/Test6657026.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/test/javax/swing/plaf/basic/BasicSplitPaneUI/Test6657026.java">test/javax/swing/plaf/basic/BasicSplitPaneUI/Test6657026.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/test/javax/swing/plaf/metal/MetalBorders/Test6657026.java">test/javax/swing/plaf/metal/MetalBorders/Test6657026.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/test/javax/swing/plaf/metal/MetalBumps/Test6657026.java">test/javax/swing/plaf/metal/MetalBumps/Test6657026.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/test/javax/swing/plaf/metal/MetalInternalFrameUI/Test6657026.java">test/javax/swing/plaf/metal/MetalInternalFrameUI/Test6657026.java</a> <a href="/jdk6/jdk6/jdk/file/e8d7c5715d59/test/javax/swing/plaf/metal/MetalSliderUI/Test6657026.java">test/javax/swing/plaf/metal/MetalSliderUI/Test6657026.java</a> </td>
</tr>
<tr>
  <th class="diffstat">diffstat</th>
  <td class="diffstat">
     37 files changed, 862 insertions(+), 357 deletions(-)

    <a id="diffstatexpand" href="javascript:toggleDiffstat()"/>[<tt>+</tt>]</a>
    <div id="diffstatdetails" style="display:none;">
      <a href="javascript:toggleDiffstat()"/>[<tt>-</tt>]</a>
      <p>
      <table class="stripes2">  <tr>
    <td class="diffstat-file"><a href="#l1.1">src/share/classes/com/sun/java/swing/plaf/gtk/GTKStyle.java</a></td>
    <td class="diffstat-total" align="right">5</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:0.840336134454%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:1.26050420168%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l2.1">src/share/classes/javax/swing/JComponent.java</a></td>
    <td class="diffstat-total" align="right">15</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:1.26050420168%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:5.04201680672%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l3.1">src/share/classes/javax/swing/JDialog.java</a></td>
    <td class="diffstat-total" align="right">10</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:0.840336134454%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:3.36134453782%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l4.1">src/share/classes/javax/swing/JEditorPane.java</a></td>
    <td class="diffstat-total" align="right">13</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:1.68067226891%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:3.78151260504%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l5.1">src/share/classes/javax/swing/JFrame.java</a></td>
    <td class="diffstat-total" align="right">10</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:0.840336134454%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:3.36134453782%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l6.1">src/share/classes/javax/swing/JInternalFrame.java</a></td>
    <td class="diffstat-total" align="right">10</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:0.840336134454%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:3.36134453782%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l7.1">src/share/classes/javax/swing/JPopupMenu.java</a></td>
    <td class="diffstat-total" align="right">10</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:0.840336134454%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:3.36134453782%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l8.1">src/share/classes/javax/swing/MenuSelectionManager.java</a></td>
    <td class="diffstat-total" align="right">5</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:0.840336134454%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:1.26050420168%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l9.1">src/share/classes/javax/swing/PopupFactory.java</a></td>
    <td class="diffstat-total" align="right">14</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:2.10084033613%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:3.78151260504%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l10.1">src/share/classes/javax/swing/SwingUtilities.java</a></td>
    <td class="diffstat-total" align="right">8</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:0.840336134454%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:2.52100840336%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l11.1">src/share/classes/javax/swing/SwingWorker.java</a></td>
    <td class="diffstat-total" align="right">8</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:0.840336134454%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:2.52100840336%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l12.1">src/share/classes/javax/swing/TimerQueue.java</a></td>
    <td class="diffstat-total" align="right">8</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:0.840336134454%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:2.52100840336%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l13.1">src/share/classes/javax/swing/ToolTipManager.java</a></td>
    <td class="diffstat-total" align="right">15</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:3.78151260504%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:2.52100840336%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l14.1">src/share/classes/javax/swing/UIManager.java</a></td>
    <td class="diffstat-total" align="right">38</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:4.6218487395%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:11.3445378151%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l15.1">src/share/classes/javax/swing/plaf/basic/BasicComboBoxUI.java</a></td>
    <td class="diffstat-total" align="right">10</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:1.26050420168%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:2.94117647059%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l16.1">src/share/classes/javax/swing/plaf/basic/BasicLabelUI.java</a></td>
    <td class="diffstat-total" align="right">33</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:3.78151260504%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:10.0840336134%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l17.1">src/share/classes/javax/swing/plaf/basic/BasicListUI.java</a></td>
    <td class="diffstat-total" align="right">5</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:0.840336134454%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:1.26050420168%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l18.1">src/share/classes/javax/swing/plaf/basic/BasicPopupMenuUI.java</a></td>
    <td class="diffstat-total" align="right">16</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:1.26050420168%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:5.46218487395%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l19.1">src/share/classes/javax/swing/plaf/basic/BasicSplitPaneUI.java</a></td>
    <td class="diffstat-total" align="right">10</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:1.68067226891%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:2.52100840336%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l20.1">src/share/classes/javax/swing/plaf/basic/BasicTableUI.java</a></td>
    <td class="diffstat-total" align="right">10</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:0.840336134454%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:3.36134453782%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l21.1">src/share/classes/javax/swing/plaf/basic/BasicTreeUI.java</a></td>
    <td class="diffstat-total" align="right">9</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:0.840336134454%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:2.94117647059%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l22.1">src/share/classes/javax/swing/plaf/metal/MetalBorders.java</a></td>
    <td class="diffstat-total" align="right">116</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:21.4285714286%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:27.3109243697%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l23.1">src/share/classes/javax/swing/plaf/metal/MetalBumps.java</a></td>
    <td class="diffstat-total" align="right">81</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:15.1260504202%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:18.9075630252%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l24.1">src/share/classes/javax/swing/plaf/metal/MetalInternalFrameUI.java</a></td>
    <td class="diffstat-total" align="right">10</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:1.68067226891%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:2.52100840336%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l25.1">src/share/classes/javax/swing/plaf/metal/MetalSliderUI.java</a></td>
    <td class="diffstat-total" align="right">34</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:5.04201680672%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:9.24369747899%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l26.1">src/share/classes/javax/swing/plaf/synth/ImagePainter.java</a></td>
    <td class="diffstat-total" align="right">5</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:0.840336134454%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:1.26050420168%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l27.1">src/share/classes/javax/swing/plaf/synth/SynthLookAndFeel.java</a></td>
    <td class="diffstat-total" align="right">5</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:0.840336134454%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:1.26050420168%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l28.1">src/share/classes/javax/swing/text/JTextComponent.java</a></td>
    <td class="diffstat-total" align="right">11</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:1.26050420168%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:3.36134453782%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l29.1">src/share/classes/sun/swing/DefaultLookup.java</a></td>
    <td class="diffstat-total" align="right">3</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:0.420168067227%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:0.840336134454%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l30.1">src/share/classes/sun/swing/SwingUtilities2.java</a></td>
    <td class="diffstat-total" align="right">21</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:2.10084033613%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:6.72268907563%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l31.1">test/javax/swing/ToolTipManager/Test6657026.java</a></td>
    <td class="diffstat-total" align="right">74</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:31.0924369748%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:0.0%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l32.1">test/javax/swing/UIManager/Test6657026.java</a></td>
    <td class="diffstat-total" align="right">59</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:24.7899159664%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:0.0%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l33.1">test/javax/swing/plaf/basic/BasicSplitPaneUI/Test6657026.java</a></td>
    <td class="diffstat-total" align="right">82</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:34.4537815126%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:0.0%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l34.1">test/javax/swing/plaf/metal/MetalBorders/Test6657026.java</a></td>
    <td class="diffstat-total" align="right">91</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:38.2352941176%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:0.0%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l35.1">test/javax/swing/plaf/metal/MetalBumps/Test6657026.java</a></td>
    <td class="diffstat-total" align="right">238</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:100.0%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:0.0%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l36.1">test/javax/swing/plaf/metal/MetalInternalFrameUI/Test6657026.java</a></td>
    <td class="diffstat-total" align="right">60</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:25.2100840336%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:0.0%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l37.1">test/javax/swing/plaf/metal/MetalSliderUI/Test6657026.java</a></td>
    <td class="diffstat-total" align="right">67</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:28.1512605042%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:0.0%;">&nbsp;</span>
    </td>
  </tr>
</table>
    </div>
  </td>
</tr>
</table>

<div class="overflow">
<div class="sourcefirst linewraptoggle">line wrap: <a class="linewraplink" href="javascript:toggleLinewrap()">on</a></div>
<div class="sourcefirst"> line diff</div>
<div class="stripes2 diffblocks">
<div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l1.1" class="minusline">--- a/src/share/classes/com/sun/java/swing/plaf/gtk/GTKStyle.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l1.1"></a>
<span id="l1.2" class="plusline">+++ b/src/share/classes/com/sun/java/swing/plaf/gtk/GTKStyle.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l1.2"></a>
<span id="l1.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l1.3"></a>
<span id="l1.4"> /*</span><a href="#l1.4"></a>
<span id="l1.5" class="minusline">- * Copyright 2002-2007 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l1.5"></a>
<span id="l1.6" class="plusline">+ * Copyright 2002-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l1.6"></a>
<span id="l1.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l1.7"></a>
<span id="l1.8">  *</span><a href="#l1.8"></a>
<span id="l1.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l1.9"></a>
<span id="l1.10" class="atline">@@ -27,7 +27,6 @@</span><a href="#l1.10"></a>
<span id="l1.11"> </span><a href="#l1.11"></a>
<span id="l1.12"> import java.awt.*;</span><a href="#l1.12"></a>
<span id="l1.13"> import java.lang.reflect.*;</span><a href="#l1.13"></a>
<span id="l1.14" class="minusline">-import java.security.*;</span><a href="#l1.14"></a>
<span id="l1.15"> import java.util.*;</span><a href="#l1.15"></a>
<span id="l1.16"> import javax.swing.*;</span><a href="#l1.16"></a>
<span id="l1.17"> import javax.swing.plaf.*;</span><a href="#l1.17"></a>
<span id="l1.18" class="atline">@@ -908,7 +907,7 @@</span><a href="#l1.18"></a>
<span id="l1.19"> </span><a href="#l1.19"></a>
<span id="l1.20">     static class GTKStockIconInfo {</span><a href="#l1.20"></a>
<span id="l1.21">         private static Map&lt;String,Integer&gt; ICON_TYPE_MAP;</span><a href="#l1.21"></a>
<span id="l1.22" class="minusline">-        private static final Object ICON_SIZE_KEY = new StringBuffer(&quot;IconSize&quot;);</span><a href="#l1.22"></a>
<span id="l1.23" class="plusline">+        private static final Object ICON_SIZE_KEY = new Object(); // IconSize</span><a href="#l1.23"></a>
<span id="l1.24"> </span><a href="#l1.24"></a>
<span id="l1.25">         private static Dimension[] getIconSizesMap() {</span><a href="#l1.25"></a>
<span id="l1.26">             AppContext appContext = AppContext.getAppContext();</span><a href="#l1.26"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l2.1" class="minusline">--- a/src/share/classes/javax/swing/JComponent.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l2.1"></a>
<span id="l2.2" class="plusline">+++ b/src/share/classes/javax/swing/JComponent.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l2.2"></a>
<span id="l2.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l2.3"></a>
<span id="l2.4"> /*</span><a href="#l2.4"></a>
<span id="l2.5" class="minusline">- * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l2.5"></a>
<span id="l2.6" class="plusline">+ * Copyright 1997-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l2.6"></a>
<span id="l2.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l2.7"></a>
<span id="l2.8">  *</span><a href="#l2.8"></a>
<span id="l2.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l2.9"></a>
<span id="l2.10" class="atline">@@ -27,22 +27,15 @@</span><a href="#l2.10"></a>
<span id="l2.11"> </span><a href="#l2.11"></a>
<span id="l2.12"> import java.util.HashSet;</span><a href="#l2.12"></a>
<span id="l2.13"> import java.util.Hashtable;</span><a href="#l2.13"></a>
<span id="l2.14" class="minusline">-import java.util.Dictionary;</span><a href="#l2.14"></a>
<span id="l2.15"> import java.util.Enumeration;</span><a href="#l2.15"></a>
<span id="l2.16"> import java.util.Locale;</span><a href="#l2.16"></a>
<span id="l2.17"> import java.util.Vector;</span><a href="#l2.17"></a>
<span id="l2.18"> import java.util.EventListener;</span><a href="#l2.18"></a>
<span id="l2.19"> import java.util.Set;</span><a href="#l2.19"></a>
<span id="l2.20" class="minusline">-import java.util.Map;</span><a href="#l2.20"></a>
<span id="l2.21" class="minusline">-import java.util.HashMap;</span><a href="#l2.21"></a>
<span id="l2.22"> </span><a href="#l2.22"></a>
<span id="l2.23"> import java.awt.*;</span><a href="#l2.23"></a>
<span id="l2.24"> import java.awt.event.*;</span><a href="#l2.24"></a>
<span id="l2.25" class="minusline">-import java.awt.image.VolatileImage;</span><a href="#l2.25"></a>
<span id="l2.26" class="minusline">-import java.awt.Graphics2D;</span><a href="#l2.26"></a>
<span id="l2.27"> import java.awt.peer.LightweightPeer;</span><a href="#l2.27"></a>
<span id="l2.28" class="minusline">-import java.awt.dnd.DropTarget;</span><a href="#l2.28"></a>
<span id="l2.29" class="minusline">-import java.awt.font.FontRenderContext;</span><a href="#l2.29"></a>
<span id="l2.30"> import java.beans.*;</span><a href="#l2.30"></a>
<span id="l2.31"> </span><a href="#l2.31"></a>
<span id="l2.32"> import java.applet.Applet;</span><a href="#l2.32"></a>
<span id="l2.33" class="atline">@@ -220,8 +213,7 @@</span><a href="#l2.33"></a>
<span id="l2.34">      * indicates the EDT is calling into the InputVerifier from the</span><a href="#l2.34"></a>
<span id="l2.35">      * returned component.</span><a href="#l2.35"></a>
<span id="l2.36">      */</span><a href="#l2.36"></a>
<span id="l2.37" class="minusline">-    private static final Object INPUT_VERIFIER_SOURCE_KEY =</span><a href="#l2.37"></a>
<span id="l2.38" class="minusline">-            new StringBuilder(&quot;InputVerifierSourceKey&quot;);</span><a href="#l2.38"></a>
<span id="l2.39" class="plusline">+    private static final Object INPUT_VERIFIER_SOURCE_KEY = new Object(); // InputVerifierSourceKey</span><a href="#l2.39"></a>
<span id="l2.40"> </span><a href="#l2.40"></a>
<span id="l2.41">     /* The following fields support set methods for the corresponding</span><a href="#l2.41"></a>
<span id="l2.42">      * java.awt.Component properties.</span><a href="#l2.42"></a>
<span id="l2.43" class="atline">@@ -369,8 +361,7 @@</span><a href="#l2.43"></a>
<span id="l2.44">     private static final String defaultLocale = &quot;JComponent.defaultLocale&quot;;</span><a href="#l2.44"></a>
<span id="l2.45"> </span><a href="#l2.45"></a>
<span id="l2.46">     private static Component componentObtainingGraphicsFrom;</span><a href="#l2.46"></a>
<span id="l2.47" class="minusline">-    private static Object componentObtainingGraphicsFromLock = new</span><a href="#l2.47"></a>
<span id="l2.48" class="minusline">-            StringBuilder(&quot;componentObtainingGraphicsFrom&quot;);</span><a href="#l2.48"></a>
<span id="l2.49" class="plusline">+    private static Object componentObtainingGraphicsFromLock = new Object(); // componentObtainingGraphicsFrom</span><a href="#l2.49"></a>
<span id="l2.50"> </span><a href="#l2.50"></a>
<span id="l2.51">     /**</span><a href="#l2.51"></a>
<span id="l2.52">      * AA text hints.</span><a href="#l2.52"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l3.1" class="minusline">--- a/src/share/classes/javax/swing/JDialog.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l3.1"></a>
<span id="l3.2" class="plusline">+++ b/src/share/classes/javax/swing/JDialog.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l3.2"></a>
<span id="l3.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l3.3"></a>
<span id="l3.4"> /*</span><a href="#l3.4"></a>
<span id="l3.5" class="minusline">- * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l3.5"></a>
<span id="l3.6" class="plusline">+ * Copyright 1997-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l3.6"></a>
<span id="l3.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l3.7"></a>
<span id="l3.8">  *</span><a href="#l3.8"></a>
<span id="l3.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l3.9"></a>
<span id="l3.10" class="atline">@@ -26,12 +26,7 @@</span><a href="#l3.10"></a>
<span id="l3.11"> </span><a href="#l3.11"></a>
<span id="l3.12"> import java.awt.*;</span><a href="#l3.12"></a>
<span id="l3.13"> import java.awt.event.*;</span><a href="#l3.13"></a>
<span id="l3.14" class="minusline">-import java.beans.PropertyChangeListener;</span><a href="#l3.14"></a>
<span id="l3.15" class="minusline">-import java.util.Locale;</span><a href="#l3.15"></a>
<span id="l3.16" class="minusline">-import java.util.Vector;</span><a href="#l3.16"></a>
<span id="l3.17" class="minusline">-import java.io.Serializable;</span><a href="#l3.17"></a>
<span id="l3.18"> import javax.accessibility.*;</span><a href="#l3.18"></a>
<span id="l3.19" class="minusline">-import java.applet.Applet;</span><a href="#l3.19"></a>
<span id="l3.20"> </span><a href="#l3.20"></a>
<span id="l3.21"> /**</span><a href="#l3.21"></a>
<span id="l3.22">  * The main class for creating a dialog window. You can use this class</span><a href="#l3.22"></a>
<span id="l3.23" class="atline">@@ -108,8 +103,7 @@</span><a href="#l3.23"></a>
<span id="l3.24">      * Key into the AppContext, used to check if should provide decorations</span><a href="#l3.24"></a>
<span id="l3.25">      * by default.</span><a href="#l3.25"></a>
<span id="l3.26">      */</span><a href="#l3.26"></a>
<span id="l3.27" class="minusline">-    private static final Object defaultLookAndFeelDecoratedKey =</span><a href="#l3.27"></a>
<span id="l3.28" class="minusline">-            new StringBuffer(&quot;JDialog.defaultLookAndFeelDecorated&quot;);</span><a href="#l3.28"></a>
<span id="l3.29" class="plusline">+    private static final Object defaultLookAndFeelDecoratedKey = new Object(); // JDialog.defaultLookAndFeelDecorated</span><a href="#l3.29"></a>
<span id="l3.30"> </span><a href="#l3.30"></a>
<span id="l3.31">     private int defaultCloseOperation = HIDE_ON_CLOSE;</span><a href="#l3.31"></a>
<span id="l3.32"> </span><a href="#l3.32"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l4.1" class="minusline">--- a/src/share/classes/javax/swing/JEditorPane.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l4.1"></a>
<span id="l4.2" class="plusline">+++ b/src/share/classes/javax/swing/JEditorPane.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l4.2"></a>
<span id="l4.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l4.3"></a>
<span id="l4.4"> /*</span><a href="#l4.4"></a>
<span id="l4.5" class="minusline">- * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l4.5"></a>
<span id="l4.6" class="plusline">+ * Copyright 1997-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l4.6"></a>
<span id="l4.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l4.7"></a>
<span id="l4.8">  *</span><a href="#l4.8"></a>
<span id="l4.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l4.9"></a>
<span id="l4.10" class="atline">@@ -25,12 +25,10 @@</span><a href="#l4.10"></a>
<span id="l4.11"> package javax.swing;</span><a href="#l4.11"></a>
<span id="l4.12"> </span><a href="#l4.12"></a>
<span id="l4.13"> import java.awt.*;</span><a href="#l4.13"></a>
<span id="l4.14" class="minusline">-import java.awt.event.*;</span><a href="#l4.14"></a>
<span id="l4.15"> import java.lang.reflect.*;</span><a href="#l4.15"></a>
<span id="l4.16"> import java.net.*;</span><a href="#l4.16"></a>
<span id="l4.17"> import java.util.*;</span><a href="#l4.17"></a>
<span id="l4.18"> import java.io.*;</span><a href="#l4.18"></a>
<span id="l4.19" class="minusline">-import java.util.*;</span><a href="#l4.19"></a>
<span id="l4.20"> </span><a href="#l4.20"></a>
<span id="l4.21"> import javax.swing.plaf.*;</span><a href="#l4.21"></a>
<span id="l4.22"> import javax.swing.text.*;</span><a href="#l4.22"></a>
<span id="l4.23" class="atline">@@ -1598,12 +1596,9 @@</span><a href="#l4.23"></a>
<span id="l4.24">     /*</span><a href="#l4.24"></a>
<span id="l4.25">      * Private AppContext keys for this class's static variables.</span><a href="#l4.25"></a>
<span id="l4.26">      */</span><a href="#l4.26"></a>
<span id="l4.27" class="minusline">-    private static final Object kitRegistryKey =</span><a href="#l4.27"></a>
<span id="l4.28" class="minusline">-        new StringBuffer(&quot;JEditorPane.kitRegistry&quot;);</span><a href="#l4.28"></a>
<span id="l4.29" class="minusline">-    private static final Object kitTypeRegistryKey =</span><a href="#l4.29"></a>
<span id="l4.30" class="minusline">-        new StringBuffer(&quot;JEditorPane.kitTypeRegistry&quot;);</span><a href="#l4.30"></a>
<span id="l4.31" class="minusline">-    private static final Object kitLoaderRegistryKey =</span><a href="#l4.31"></a>
<span id="l4.32" class="minusline">-        new StringBuffer(&quot;JEditorPane.kitLoaderRegistry&quot;);</span><a href="#l4.32"></a>
<span id="l4.33" class="plusline">+    private static final Object kitRegistryKey = new Object(); // JEditorPane.kitRegistry</span><a href="#l4.33"></a>
<span id="l4.34" class="plusline">+    private static final Object kitTypeRegistryKey = new Object(); // JEditorPane.kitTypeRegistry</span><a href="#l4.34"></a>
<span id="l4.35" class="plusline">+    private static final Object kitLoaderRegistryKey = new Object(); // JEditorPane.kitLoaderRegistry</span><a href="#l4.35"></a>
<span id="l4.36"> </span><a href="#l4.36"></a>
<span id="l4.37">     /**</span><a href="#l4.37"></a>
<span id="l4.38">      * @see #getUIClassID</span><a href="#l4.38"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l5.1" class="minusline">--- a/src/share/classes/javax/swing/JFrame.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l5.1"></a>
<span id="l5.2" class="plusline">+++ b/src/share/classes/javax/swing/JFrame.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l5.2"></a>
<span id="l5.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l5.3"></a>
<span id="l5.4"> /*</span><a href="#l5.4"></a>
<span id="l5.5" class="minusline">- * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l5.5"></a>
<span id="l5.6" class="plusline">+ * Copyright 1997-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l5.6"></a>
<span id="l5.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l5.7"></a>
<span id="l5.8">  *</span><a href="#l5.8"></a>
<span id="l5.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l5.9"></a>
<span id="l5.10" class="atline">@@ -26,11 +26,6 @@</span><a href="#l5.10"></a>
<span id="l5.11"> </span><a href="#l5.11"></a>
<span id="l5.12"> import java.awt.*;</span><a href="#l5.12"></a>
<span id="l5.13"> import java.awt.event.*;</span><a href="#l5.13"></a>
<span id="l5.14" class="minusline">-import java.beans.PropertyChangeListener;</span><a href="#l5.14"></a>
<span id="l5.15" class="minusline">-import java.util.Locale;</span><a href="#l5.15"></a>
<span id="l5.16" class="minusline">-import java.util.Vector;</span><a href="#l5.16"></a>
<span id="l5.17" class="minusline">-import java.io.Serializable;</span><a href="#l5.17"></a>
<span id="l5.18" class="minusline">-</span><a href="#l5.18"></a>
<span id="l5.19"> import javax.accessibility.*;</span><a href="#l5.19"></a>
<span id="l5.20"> </span><a href="#l5.20"></a>
<span id="l5.21"> </span><a href="#l5.21"></a>
<span id="l5.22" class="atline">@@ -130,8 +125,7 @@</span><a href="#l5.22"></a>
<span id="l5.23">      * Key into the AppContext, used to check if should provide decorations</span><a href="#l5.23"></a>
<span id="l5.24">      * by default.</span><a href="#l5.24"></a>
<span id="l5.25">      */</span><a href="#l5.25"></a>
<span id="l5.26" class="minusline">-    private static final Object defaultLookAndFeelDecoratedKey =</span><a href="#l5.26"></a>
<span id="l5.27" class="minusline">-            new StringBuffer(&quot;JFrame.defaultLookAndFeelDecorated&quot;);</span><a href="#l5.27"></a>
<span id="l5.28" class="plusline">+    private static final Object defaultLookAndFeelDecoratedKey = new Object(); // JFrame.defaultLookAndFeelDecorated</span><a href="#l5.28"></a>
<span id="l5.29"> </span><a href="#l5.29"></a>
<span id="l5.30">     private int defaultCloseOperation = HIDE_ON_CLOSE;</span><a href="#l5.30"></a>
<span id="l5.31"> </span><a href="#l5.31"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l6.1" class="minusline">--- a/src/share/classes/javax/swing/JInternalFrame.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l6.1"></a>
<span id="l6.2" class="plusline">+++ b/src/share/classes/javax/swing/JInternalFrame.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l6.2"></a>
<span id="l6.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l6.3"></a>
<span id="l6.4"> /*</span><a href="#l6.4"></a>
<span id="l6.5" class="minusline">- * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l6.5"></a>
<span id="l6.6" class="plusline">+ * Copyright 1997-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l6.6"></a>
<span id="l6.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l6.7"></a>
<span id="l6.8">  *</span><a href="#l6.8"></a>
<span id="l6.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l6.9"></a>
<span id="l6.10" class="atline">@@ -26,13 +26,10 @@</span><a href="#l6.10"></a>
<span id="l6.11"> package javax.swing;</span><a href="#l6.11"></a>
<span id="l6.12"> </span><a href="#l6.12"></a>
<span id="l6.13"> import java.awt.*;</span><a href="#l6.13"></a>
<span id="l6.14" class="minusline">-import java.awt.event.*;</span><a href="#l6.14"></a>
<span id="l6.15"> </span><a href="#l6.15"></a>
<span id="l6.16"> import java.beans.PropertyVetoException;</span><a href="#l6.16"></a>
<span id="l6.17"> import java.beans.PropertyChangeEvent;</span><a href="#l6.17"></a>
<span id="l6.18" class="minusline">-import java.util.EventListener;</span><a href="#l6.18"></a>
<span id="l6.19"> </span><a href="#l6.19"></a>
<span id="l6.20" class="minusline">-import javax.swing.border.Border;</span><a href="#l6.20"></a>
<span id="l6.21"> import javax.swing.event.InternalFrameEvent;</span><a href="#l6.21"></a>
<span id="l6.22"> import javax.swing.event.InternalFrameListener;</span><a href="#l6.22"></a>
<span id="l6.23"> import javax.swing.plaf.*;</span><a href="#l6.23"></a>
<span id="l6.24" class="atline">@@ -40,9 +37,7 @@</span><a href="#l6.24"></a>
<span id="l6.25"> import javax.accessibility.*;</span><a href="#l6.25"></a>
<span id="l6.26"> </span><a href="#l6.26"></a>
<span id="l6.27"> import java.io.ObjectOutputStream;</span><a href="#l6.27"></a>
<span id="l6.28" class="minusline">-import java.io.ObjectInputStream;</span><a href="#l6.28"></a>
<span id="l6.29"> import java.io.IOException;</span><a href="#l6.29"></a>
<span id="l6.30" class="minusline">-import java.lang.StringBuilder;</span><a href="#l6.30"></a>
<span id="l6.31"> import java.beans.PropertyChangeListener;</span><a href="#l6.31"></a>
<span id="l6.32"> import sun.awt.AppContext;</span><a href="#l6.32"></a>
<span id="l6.33"> import sun.swing.SwingUtilities2;</span><a href="#l6.33"></a>
<span id="l6.34" class="atline">@@ -226,8 +221,7 @@</span><a href="#l6.34"></a>
<span id="l6.35">     /** Constrained property name indicating that the internal frame is iconified. */</span><a href="#l6.35"></a>
<span id="l6.36">     public final static String IS_ICON_PROPERTY = &quot;icon&quot;;</span><a href="#l6.36"></a>
<span id="l6.37"> </span><a href="#l6.37"></a>
<span id="l6.38" class="minusline">-    private static final Object PROPERTY_CHANGE_LISTENER_KEY =</span><a href="#l6.38"></a>
<span id="l6.39" class="minusline">-        new StringBuilder(&quot;InternalFramePropertyChangeListener&quot;);</span><a href="#l6.39"></a>
<span id="l6.40" class="plusline">+    private static final Object PROPERTY_CHANGE_LISTENER_KEY = new Object(); // InternalFramePropertyChangeListener</span><a href="#l6.40"></a>
<span id="l6.41"> </span><a href="#l6.41"></a>
<span id="l6.42">     private static void addPropertyChangeListenerIfNecessary() {</span><a href="#l6.42"></a>
<span id="l6.43">         if (AppContext.getAppContext().get(PROPERTY_CHANGE_LISTENER_KEY) ==</span><a href="#l6.43"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l7.1" class="minusline">--- a/src/share/classes/javax/swing/JPopupMenu.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l7.1"></a>
<span id="l7.2" class="plusline">+++ b/src/share/classes/javax/swing/JPopupMenu.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l7.2"></a>
<span id="l7.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l7.3"></a>
<span id="l7.4"> /*</span><a href="#l7.4"></a>
<span id="l7.5" class="minusline">- * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l7.5"></a>
<span id="l7.6" class="plusline">+ * Copyright 1997-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l7.6"></a>
<span id="l7.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l7.7"></a>
<span id="l7.8">  *</span><a href="#l7.8"></a>
<span id="l7.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l7.9"></a>
<span id="l7.10" class="atline">@@ -33,17 +33,12 @@</span><a href="#l7.10"></a>
<span id="l7.11"> import java.io.Serializable;</span><a href="#l7.11"></a>
<span id="l7.12"> import java.beans.*;</span><a href="#l7.12"></a>
<span id="l7.13"> </span><a href="#l7.13"></a>
<span id="l7.14" class="minusline">-import java.util.Locale;</span><a href="#l7.14"></a>
<span id="l7.15"> import java.util.Vector;</span><a href="#l7.15"></a>
<span id="l7.16" class="minusline">-import java.util.Hashtable;</span><a href="#l7.16"></a>
<span id="l7.17"> import javax.accessibility.*;</span><a href="#l7.17"></a>
<span id="l7.18"> import javax.swing.plaf.PopupMenuUI;</span><a href="#l7.18"></a>
<span id="l7.19" class="minusline">-import javax.swing.plaf.ComponentUI;</span><a href="#l7.19"></a>
<span id="l7.20"> import javax.swing.plaf.basic.BasicComboPopup;</span><a href="#l7.20"></a>
<span id="l7.21"> import javax.swing.event.*;</span><a href="#l7.21"></a>
<span id="l7.22"> </span><a href="#l7.22"></a>
<span id="l7.23" class="minusline">-import java.applet.Applet;</span><a href="#l7.23"></a>
<span id="l7.24" class="minusline">-</span><a href="#l7.24"></a>
<span id="l7.25"> /**</span><a href="#l7.25"></a>
<span id="l7.26">  * An implementation of a popup menu -- a small window that pops up</span><a href="#l7.26"></a>
<span id="l7.27">  * and displays a series of choices. A &lt;code&gt;JPopupMenu&lt;/code&gt; is used for the</span><a href="#l7.27"></a>
<span id="l7.28" class="atline">@@ -91,8 +86,7 @@</span><a href="#l7.28"></a>
<span id="l7.29">     /**</span><a href="#l7.29"></a>
<span id="l7.30">      * Key used in AppContext to determine if light way popups are the default.</span><a href="#l7.30"></a>
<span id="l7.31">      */</span><a href="#l7.31"></a>
<span id="l7.32" class="minusline">-    private static final Object defaultLWPopupEnabledKey =</span><a href="#l7.32"></a>
<span id="l7.33" class="minusline">-        new StringBuffer(&quot;JPopupMenu.defaultLWPopupEnabledKey&quot;);</span><a href="#l7.33"></a>
<span id="l7.34" class="plusline">+    private static final Object defaultLWPopupEnabledKey = new Object(); // JPopupMenu.defaultLWPopupEnabledKey</span><a href="#l7.34"></a>
<span id="l7.35"> </span><a href="#l7.35"></a>
<span id="l7.36">     /** Bug#4425878-Property javax.swing.adjustPopupLocationToFit introduced */</span><a href="#l7.36"></a>
<span id="l7.37">     static boolean popupPostionFixDisabled = false;</span><a href="#l7.37"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l8.1" class="minusline">--- a/src/share/classes/javax/swing/MenuSelectionManager.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l8.1"></a>
<span id="l8.2" class="plusline">+++ b/src/share/classes/javax/swing/MenuSelectionManager.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l8.2"></a>
<span id="l8.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l8.3"></a>
<span id="l8.4"> /*</span><a href="#l8.4"></a>
<span id="l8.5" class="minusline">- * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l8.5"></a>
<span id="l8.6" class="plusline">+ * Copyright 1997-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l8.6"></a>
<span id="l8.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l8.7"></a>
<span id="l8.8">  *</span><a href="#l8.8"></a>
<span id="l8.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l8.9"></a>
<span id="l8.10" class="atline">@@ -44,8 +44,7 @@</span><a href="#l8.10"></a>
<span id="l8.11">     private static final boolean VERBOSE = false; // show reuse hits/misses</span><a href="#l8.11"></a>
<span id="l8.12">     private static final boolean DEBUG =   false;  // show bad params, misc.</span><a href="#l8.12"></a>
<span id="l8.13"> </span><a href="#l8.13"></a>
<span id="l8.14" class="minusline">-    private static final StringBuilder MENU_SELECTION_MANAGER_KEY =</span><a href="#l8.14"></a>
<span id="l8.15" class="minusline">-                       new StringBuilder(&quot;javax.swing.MenuSelectionManager&quot;);</span><a href="#l8.15"></a>
<span id="l8.16" class="plusline">+    private static final Object MENU_SELECTION_MANAGER_KEY = new Object(); // javax.swing.MenuSelectionManager</span><a href="#l8.16"></a>
<span id="l8.17"> </span><a href="#l8.17"></a>
<span id="l8.18">     /**</span><a href="#l8.18"></a>
<span id="l8.19">      * Returns the default menu selection manager.</span><a href="#l8.19"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l9.1" class="minusline">--- a/src/share/classes/javax/swing/PopupFactory.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l9.1"></a>
<span id="l9.2" class="plusline">+++ b/src/share/classes/javax/swing/PopupFactory.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l9.2"></a>
<span id="l9.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l9.3"></a>
<span id="l9.4"> /*</span><a href="#l9.4"></a>
<span id="l9.5" class="minusline">- * Copyright 1999-2006 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l9.5"></a>
<span id="l9.6" class="plusline">+ * Copyright 1999-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l9.6"></a>
<span id="l9.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l9.7"></a>
<span id="l9.8">  *</span><a href="#l9.8"></a>
<span id="l9.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l9.9"></a>
<span id="l9.10" class="atline">@@ -61,8 +61,7 @@</span><a href="#l9.10"></a>
<span id="l9.11">      * &lt;code&gt;AppContext&lt;/code&gt;. This is the key used in the</span><a href="#l9.11"></a>
<span id="l9.12">      * &lt;code&gt;AppContext&lt;/code&gt; to locate the &lt;code&gt;PopupFactory&lt;/code&gt;.</span><a href="#l9.12"></a>
<span id="l9.13">      */</span><a href="#l9.13"></a>
<span id="l9.14" class="minusline">-    private static final Object SharedInstanceKey =</span><a href="#l9.14"></a>
<span id="l9.15" class="minusline">-        new StringBuffer(&quot;PopupFactory.SharedInstanceKey&quot;);</span><a href="#l9.15"></a>
<span id="l9.16" class="plusline">+    private static final Object SharedInstanceKey = new Object(); // PopupFactory.SharedInstanceKey</span><a href="#l9.16"></a>
<span id="l9.17"> </span><a href="#l9.17"></a>
<span id="l9.18">     /**</span><a href="#l9.18"></a>
<span id="l9.19">      * Max number of items to store in any one particular cache.</span><a href="#l9.19"></a>
<span id="l9.20" class="atline">@@ -291,8 +290,7 @@</span><a href="#l9.20"></a>
<span id="l9.21">      * Popup implementation that uses a Window as the popup.</span><a href="#l9.21"></a>
<span id="l9.22">      */</span><a href="#l9.22"></a>
<span id="l9.23">     private static class HeavyWeightPopup extends Popup {</span><a href="#l9.23"></a>
<span id="l9.24" class="minusline">-        private static final Object heavyWeightPopupCacheKey =</span><a href="#l9.24"></a>
<span id="l9.25" class="minusline">-                 new StringBuffer(&quot;PopupFactory.heavyWeightPopupCache&quot;);</span><a href="#l9.25"></a>
<span id="l9.26" class="plusline">+        private static final Object heavyWeightPopupCacheKey = new Object(); // PopupFactory.heavyWeightPopupCache</span><a href="#l9.26"></a>
<span id="l9.27"> </span><a href="#l9.27"></a>
<span id="l9.28">         /**</span><a href="#l9.28"></a>
<span id="l9.29">          * Returns either a new or recycled &lt;code&gt;Popup&lt;/code&gt; containing</span><a href="#l9.29"></a>
<span id="l9.30" class="atline">@@ -641,8 +639,7 @@</span><a href="#l9.30"></a>
<span id="l9.31">      * Popup implementation that uses a JPanel as the popup.</span><a href="#l9.31"></a>
<span id="l9.32">      */</span><a href="#l9.32"></a>
<span id="l9.33">     private static class LightWeightPopup extends ContainerPopup {</span><a href="#l9.33"></a>
<span id="l9.34" class="minusline">-        private static final Object lightWeightPopupCacheKey =</span><a href="#l9.34"></a>
<span id="l9.35" class="minusline">-                         new StringBuffer(&quot;PopupFactory.lightPopupCache&quot;);</span><a href="#l9.35"></a>
<span id="l9.36" class="plusline">+        private static final Object lightWeightPopupCacheKey = new Object(); // PopupFactory.lightPopupCache</span><a href="#l9.36"></a>
<span id="l9.37"> </span><a href="#l9.37"></a>
<span id="l9.38">         /**</span><a href="#l9.38"></a>
<span id="l9.39">          * Returns a light weight &lt;code&gt;Popup&lt;/code&gt; implementation. If</span><a href="#l9.39"></a>
<span id="l9.40" class="atline">@@ -796,8 +793,7 @@</span><a href="#l9.40"></a>
<span id="l9.41">      * Popup implementation that uses a Panel as the popup.</span><a href="#l9.41"></a>
<span id="l9.42">      */</span><a href="#l9.42"></a>
<span id="l9.43">     private static class MediumWeightPopup extends ContainerPopup {</span><a href="#l9.43"></a>
<span id="l9.44" class="minusline">-        private static final Object mediumWeightPopupCacheKey =</span><a href="#l9.44"></a>
<span id="l9.45" class="minusline">-                             new StringBuffer(&quot;PopupFactory.mediumPopupCache&quot;);</span><a href="#l9.45"></a>
<span id="l9.46" class="plusline">+        private static final Object mediumWeightPopupCacheKey = new Object(); // PopupFactory.mediumPopupCache</span><a href="#l9.46"></a>
<span id="l9.47"> </span><a href="#l9.47"></a>
<span id="l9.48">         /** Child of the panel. The contents are added to this. */</span><a href="#l9.48"></a>
<span id="l9.49">         private JRootPane rootPane;</span><a href="#l9.49"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l10.1" class="minusline">--- a/src/share/classes/javax/swing/SwingUtilities.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l10.1"></a>
<span id="l10.2" class="plusline">+++ b/src/share/classes/javax/swing/SwingUtilities.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l10.2"></a>
<span id="l10.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l10.3"></a>
<span id="l10.4"> /*</span><a href="#l10.4"></a>
<span id="l10.5" class="minusline">- * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l10.5"></a>
<span id="l10.6" class="plusline">+ * Copyright 1997-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l10.6"></a>
<span id="l10.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l10.7"></a>
<span id="l10.8">  *</span><a href="#l10.8"></a>
<span id="l10.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l10.9"></a>
<span id="l10.10" class="atline">@@ -33,9 +33,6 @@</span><a href="#l10.10"></a>
<span id="l10.11"> import java.awt.event.*;</span><a href="#l10.11"></a>
<span id="l10.12"> import java.awt.dnd.DropTarget;</span><a href="#l10.12"></a>
<span id="l10.13"> </span><a href="#l10.13"></a>
<span id="l10.14" class="minusline">-import java.util.Vector;</span><a href="#l10.14"></a>
<span id="l10.15" class="minusline">-import java.util.Hashtable;</span><a href="#l10.15"></a>
<span id="l10.16" class="minusline">-</span><a href="#l10.16"></a>
<span id="l10.17"> import java.lang.reflect.*;</span><a href="#l10.17"></a>
<span id="l10.18"> </span><a href="#l10.18"></a>
<span id="l10.19"> import javax.accessibility.*;</span><a href="#l10.19"></a>
<span id="l10.20" class="atline">@@ -1750,8 +1747,7 @@</span><a href="#l10.20"></a>
<span id="l10.21"> </span><a href="#l10.21"></a>
<span id="l10.22"> </span><a href="#l10.22"></a>
<span id="l10.23">     // Don't use String, as it's not guaranteed to be unique in a Hashtable.</span><a href="#l10.23"></a>
<span id="l10.24" class="minusline">-    private static final Object sharedOwnerFrameKey =</span><a href="#l10.24"></a>
<span id="l10.25" class="minusline">-       new StringBuffer(&quot;SwingUtilities.sharedOwnerFrame&quot;);</span><a href="#l10.25"></a>
<span id="l10.26" class="plusline">+    private static final Object sharedOwnerFrameKey = new Object(); // SwingUtilities.sharedOwnerFrame</span><a href="#l10.26"></a>
<span id="l10.27"> </span><a href="#l10.27"></a>
<span id="l10.28">     static class SharedOwnerFrame extends Frame implements WindowListener {</span><a href="#l10.28"></a>
<span id="l10.29">         public void addNotify() {</span><a href="#l10.29"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l11.1" class="minusline">--- a/src/share/classes/javax/swing/SwingWorker.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l11.1"></a>
<span id="l11.2" class="plusline">+++ b/src/share/classes/javax/swing/SwingWorker.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l11.2"></a>
<span id="l11.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l11.3"></a>
<span id="l11.4"> /*</span><a href="#l11.4"></a>
<span id="l11.5" class="minusline">- * Copyright 2005-2006 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l11.5"></a>
<span id="l11.6" class="plusline">+ * Copyright 2005-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l11.6"></a>
<span id="l11.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l11.7"></a>
<span id="l11.8">  *</span><a href="#l11.8"></a>
<span id="l11.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l11.9"></a>
<span id="l11.10" class="atline">@@ -28,16 +28,12 @@</span><a href="#l11.10"></a>
<span id="l11.11"> import java.beans.PropertyChangeSupport;</span><a href="#l11.11"></a>
<span id="l11.12"> import java.beans.PropertyChangeEvent;</span><a href="#l11.12"></a>
<span id="l11.13"> import java.util.List;</span><a href="#l11.13"></a>
<span id="l11.14" class="minusline">-import java.util.ArrayList;</span><a href="#l11.14"></a>
<span id="l11.15" class="minusline">-import java.util.Collections;</span><a href="#l11.15"></a>
<span id="l11.16"> </span><a href="#l11.16"></a>
<span id="l11.17"> import java.util.concurrent.*;</span><a href="#l11.17"></a>
<span id="l11.18"> import java.util.concurrent.locks.*;</span><a href="#l11.18"></a>
<span id="l11.19"> </span><a href="#l11.19"></a>
<span id="l11.20"> import java.awt.event.*;</span><a href="#l11.20"></a>
<span id="l11.21"> </span><a href="#l11.21"></a>
<span id="l11.22" class="minusline">-import javax.swing.SwingUtilities;</span><a href="#l11.22"></a>
<span id="l11.23" class="minusline">-</span><a href="#l11.23"></a>
<span id="l11.24"> import sun.awt.AppContext;</span><a href="#l11.24"></a>
<span id="l11.25"> import sun.swing.AccumulativeRunnable;</span><a href="#l11.25"></a>
<span id="l11.26"> </span><a href="#l11.26"></a>
<span id="l11.27" class="atline">@@ -860,7 +856,7 @@</span><a href="#l11.27"></a>
<span id="l11.28">         return (ExecutorService)obj;</span><a href="#l11.28"></a>
<span id="l11.29">     }</span><a href="#l11.29"></a>
<span id="l11.30"> </span><a href="#l11.30"></a>
<span id="l11.31" class="minusline">-    private static final Object DO_SUBMIT_KEY = new StringBuilder(&quot;doSubmit&quot;);</span><a href="#l11.31"></a>
<span id="l11.32" class="plusline">+    private static final Object DO_SUBMIT_KEY = new Object(); // doSubmit</span><a href="#l11.32"></a>
<span id="l11.33">     private static AccumulativeRunnable&lt;Runnable&gt; getDoSubmit() {</span><a href="#l11.33"></a>
<span id="l11.34">         synchronized (DO_SUBMIT_KEY) {</span><a href="#l11.34"></a>
<span id="l11.35">             final AppContext appContext = AppContext.getAppContext();</span><a href="#l11.35"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l12.1" class="minusline">--- a/src/share/classes/javax/swing/TimerQueue.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l12.1"></a>
<span id="l12.2" class="plusline">+++ b/src/share/classes/javax/swing/TimerQueue.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l12.2"></a>
<span id="l12.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l12.3"></a>
<span id="l12.4"> /*</span><a href="#l12.4"></a>
<span id="l12.5" class="minusline">- * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l12.5"></a>
<span id="l12.6" class="plusline">+ * Copyright 1997-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l12.6"></a>
<span id="l12.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l12.7"></a>
<span id="l12.8">  *</span><a href="#l12.8"></a>
<span id="l12.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l12.9"></a>
<span id="l12.10" class="atline">@@ -29,7 +29,6 @@</span><a href="#l12.10"></a>
<span id="l12.11"> </span><a href="#l12.11"></a>
<span id="l12.12"> </span><a href="#l12.12"></a>
<span id="l12.13"> </span><a href="#l12.13"></a>
<span id="l12.14" class="minusline">-import java.util.*;</span><a href="#l12.14"></a>
<span id="l12.15"> import java.util.concurrent.*;</span><a href="#l12.15"></a>
<span id="l12.16"> import java.util.concurrent.atomic.AtomicLong;</span><a href="#l12.16"></a>
<span id="l12.17"> import sun.awt.AppContext;</span><a href="#l12.17"></a>
<span id="l12.18" class="atline">@@ -46,10 +45,7 @@</span><a href="#l12.18"></a>
<span id="l12.19">  */</span><a href="#l12.19"></a>
<span id="l12.20"> class TimerQueue implements Runnable</span><a href="#l12.20"></a>
<span id="l12.21"> {</span><a href="#l12.21"></a>
<span id="l12.22" class="minusline">-    private static final Object sharedInstanceKey =</span><a href="#l12.22"></a>
<span id="l12.23" class="minusline">-        new StringBuffer(&quot;TimerQueue.sharedInstanceKey&quot;);</span><a href="#l12.23"></a>
<span id="l12.24" class="minusline">-    private static final Object expiredTimersKey =</span><a href="#l12.24"></a>
<span id="l12.25" class="minusline">-        new StringBuffer(&quot;TimerQueue.expiredTimersKey&quot;);</span><a href="#l12.25"></a>
<span id="l12.26" class="plusline">+    private static final Object sharedInstanceKey = new Object(); // TimerQueue.sharedInstanceKey</span><a href="#l12.26"></a>
<span id="l12.27"> </span><a href="#l12.27"></a>
<span id="l12.28">     private final DelayQueue&lt;DelayedTimer&gt; queue;</span><a href="#l12.28"></a>
<span id="l12.29">     volatile boolean running;</span><a href="#l12.29"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l13.1" class="minusline">--- a/src/share/classes/javax/swing/ToolTipManager.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l13.1"></a>
<span id="l13.2" class="plusline">+++ b/src/share/classes/javax/swing/ToolTipManager.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l13.2"></a>
<span id="l13.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l13.3"></a>
<span id="l13.4"> /*</span><a href="#l13.4"></a>
<span id="l13.5" class="minusline">- * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l13.5"></a>
<span id="l13.6" class="plusline">+ * Copyright 1997-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l13.6"></a>
<span id="l13.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l13.7"></a>
<span id="l13.8">  *</span><a href="#l13.8"></a>
<span id="l13.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l13.9"></a>
<span id="l13.10" class="atline">@@ -27,10 +27,7 @@</span><a href="#l13.10"></a>
<span id="l13.11"> package javax.swing;</span><a href="#l13.11"></a>
<span id="l13.12"> </span><a href="#l13.12"></a>
<span id="l13.13"> import java.awt.event.*;</span><a href="#l13.13"></a>
<span id="l13.14" class="minusline">-import java.applet.*;</span><a href="#l13.14"></a>
<span id="l13.15"> import java.awt.*;</span><a href="#l13.15"></a>
<span id="l13.16" class="minusline">-import java.io.Serializable;</span><a href="#l13.16"></a>
<span id="l13.17" class="minusline">-import sun.swing.UIAction;</span><a href="#l13.17"></a>
<span id="l13.18"> </span><a href="#l13.18"></a>
<span id="l13.19"> /**</span><a href="#l13.19"></a>
<span id="l13.20">  * Manages all the &lt;code&gt;ToolTips&lt;/code&gt; in the system.</span><a href="#l13.20"></a>
<span id="l13.21" class="atline">@@ -60,7 +57,7 @@</span><a href="#l13.21"></a>
<span id="l13.22">     JComponent insideComponent;</span><a href="#l13.22"></a>
<span id="l13.23">     MouseEvent mouseEvent;</span><a href="#l13.23"></a>
<span id="l13.24">     boolean showImmediately;</span><a href="#l13.24"></a>
<span id="l13.25" class="minusline">-    final static ToolTipManager sharedInstance = new ToolTipManager();</span><a href="#l13.25"></a>
<span id="l13.26" class="plusline">+    private static final Object TOOL_TIP_MANAGER_KEY = new Object();</span><a href="#l13.26"></a>
<span id="l13.27">     transient Popup tipWindow;</span><a href="#l13.27"></a>
<span id="l13.28">     /** The Window tip is being displayed in. This will be non-null if</span><a href="#l13.28"></a>
<span id="l13.29">      * the Window tip is in differs from that of insideComponent's Window.</span><a href="#l13.29"></a>
<span id="l13.30" class="atline">@@ -345,7 +342,13 @@</span><a href="#l13.30"></a>
<span id="l13.31">      * @return a shared &lt;code&gt;ToolTipManager&lt;/code&gt; object</span><a href="#l13.31"></a>
<span id="l13.32">      */</span><a href="#l13.32"></a>
<span id="l13.33">     public static ToolTipManager sharedInstance() {</span><a href="#l13.33"></a>
<span id="l13.34" class="minusline">-        return sharedInstance;</span><a href="#l13.34"></a>
<span id="l13.35" class="plusline">+        Object value = SwingUtilities.appContextGet(TOOL_TIP_MANAGER_KEY);</span><a href="#l13.35"></a>
<span id="l13.36" class="plusline">+        if (value instanceof ToolTipManager) {</span><a href="#l13.36"></a>
<span id="l13.37" class="plusline">+            return (ToolTipManager) value;</span><a href="#l13.37"></a>
<span id="l13.38" class="plusline">+        }</span><a href="#l13.38"></a>
<span id="l13.39" class="plusline">+        ToolTipManager manager = new ToolTipManager();</span><a href="#l13.39"></a>
<span id="l13.40" class="plusline">+        SwingUtilities.appContextPut(TOOL_TIP_MANAGER_KEY, manager);</span><a href="#l13.40"></a>
<span id="l13.41" class="plusline">+        return manager;</span><a href="#l13.41"></a>
<span id="l13.42">     }</span><a href="#l13.42"></a>
<span id="l13.43"> </span><a href="#l13.43"></a>
<span id="l13.44">     // add keylistener here to trigger tip for access</span><a href="#l13.44"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l14.1" class="minusline">--- a/src/share/classes/javax/swing/UIManager.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l14.1"></a>
<span id="l14.2" class="plusline">+++ b/src/share/classes/javax/swing/UIManager.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l14.2"></a>
<span id="l14.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l14.3"></a>
<span id="l14.4"> /*</span><a href="#l14.4"></a>
<span id="l14.5" class="minusline">- * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l14.5"></a>
<span id="l14.6" class="plusline">+ * Copyright 1997-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l14.6"></a>
<span id="l14.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l14.7"></a>
<span id="l14.8">  *</span><a href="#l14.8"></a>
<span id="l14.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l14.9"></a>
<span id="l14.10" class="atline">@@ -194,6 +194,8 @@</span><a href="#l14.10"></a>
<span id="l14.11">         Vector auxLookAndFeels = null;</span><a href="#l14.11"></a>
<span id="l14.12">         SwingPropertyChangeSupport changeSupport;</span><a href="#l14.12"></a>
<span id="l14.13"> </span><a href="#l14.13"></a>
<span id="l14.14" class="plusline">+        LookAndFeelInfo[] installedLAFs;</span><a href="#l14.14"></a>
<span id="l14.15" class="plusline">+</span><a href="#l14.15"></a>
<span id="l14.16">         UIDefaults getLookAndFeelDefaults() { return tables[0]; }</span><a href="#l14.16"></a>
<span id="l14.17">         void setLookAndFeelDefaults(UIDefaults x) { tables[0] = x; }</span><a href="#l14.17"></a>
<span id="l14.18"> </span><a href="#l14.18"></a>
<span id="l14.19" class="atline">@@ -224,18 +226,6 @@</span><a href="#l14.19"></a>
<span id="l14.20">      */</span><a href="#l14.20"></a>
<span id="l14.21">     private static final Object classLock = new Object();</span><a href="#l14.21"></a>
<span id="l14.22"> </span><a href="#l14.22"></a>
<span id="l14.23" class="minusline">-</span><a href="#l14.23"></a>
<span id="l14.24" class="minusline">-    /* Cache the last referenced LAFState to improve performance</span><a href="#l14.24"></a>
<span id="l14.25" class="minusline">-     * when accessing it.  The cache is based on last thread rather</span><a href="#l14.25"></a>
<span id="l14.26" class="minusline">-     * than last AppContext because of the cost of looking up the</span><a href="#l14.26"></a>
<span id="l14.27" class="minusline">-     * AppContext each time.  Since most Swing UI work is on the</span><a href="#l14.27"></a>
<span id="l14.28" class="minusline">-     * EventDispatchThread, this hits often enough to justify the</span><a href="#l14.28"></a>
<span id="l14.29" class="minusline">-     * overhead.  (4193032)</span><a href="#l14.29"></a>
<span id="l14.30" class="minusline">-     */</span><a href="#l14.30"></a>
<span id="l14.31" class="minusline">-    private static Thread currentLAFStateThread = null;</span><a href="#l14.31"></a>
<span id="l14.32" class="minusline">-    private static LAFState currentLAFState = null;</span><a href="#l14.32"></a>
<span id="l14.33" class="minusline">-</span><a href="#l14.33"></a>
<span id="l14.34" class="minusline">-</span><a href="#l14.34"></a>
<span id="l14.35">     /**</span><a href="#l14.35"></a>
<span id="l14.36">      * Return the &lt;code&gt;LAFState&lt;/code&gt; object, lazily create one if necessary.</span><a href="#l14.36"></a>
<span id="l14.37">      * All access to the &lt;code&gt;LAFState&lt;/code&gt; fields is done via this method,</span><a href="#l14.37"></a>
<span id="l14.38" class="atline">@@ -245,13 +235,6 @@</span><a href="#l14.38"></a>
<span id="l14.39">      * &lt;/pre&gt;</span><a href="#l14.39"></a>
<span id="l14.40">      */</span><a href="#l14.40"></a>
<span id="l14.41">     private static LAFState getLAFState() {</span><a href="#l14.41"></a>
<span id="l14.42" class="minusline">-        // First check whether we're running on the same thread as</span><a href="#l14.42"></a>
<span id="l14.43" class="minusline">-        // the last request.</span><a href="#l14.43"></a>
<span id="l14.44" class="minusline">-        Thread thisThread = Thread.currentThread();</span><a href="#l14.44"></a>
<span id="l14.45" class="minusline">-        if (thisThread == currentLAFStateThread) {</span><a href="#l14.45"></a>
<span id="l14.46" class="minusline">-            return currentLAFState;</span><a href="#l14.46"></a>
<span id="l14.47" class="minusline">-        }</span><a href="#l14.47"></a>
<span id="l14.48" class="minusline">-</span><a href="#l14.48"></a>
<span id="l14.49">         LAFState rv = (LAFState)SwingUtilities.appContextGet(</span><a href="#l14.49"></a>
<span id="l14.50">                 SwingUtilities2.LAF_STATE_KEY);</span><a href="#l14.50"></a>
<span id="l14.51">         if (rv == null) {</span><a href="#l14.51"></a>
<span id="l14.52" class="atline">@@ -265,10 +248,6 @@</span><a href="#l14.52"></a>
<span id="l14.53">                 }</span><a href="#l14.53"></a>
<span id="l14.54">             }</span><a href="#l14.54"></a>
<span id="l14.55">         }</span><a href="#l14.55"></a>
<span id="l14.56" class="minusline">-</span><a href="#l14.56"></a>
<span id="l14.57" class="minusline">-        currentLAFStateThread = thisThread;</span><a href="#l14.57"></a>
<span id="l14.58" class="minusline">-        currentLAFState = rv;</span><a href="#l14.58"></a>
<span id="l14.59" class="minusline">-</span><a href="#l14.59"></a>
<span id="l14.60">         return rv;</span><a href="#l14.60"></a>
<span id="l14.61">     }</span><a href="#l14.61"></a>
<span id="l14.62"> </span><a href="#l14.62"></a>
<span id="l14.63" class="atline">@@ -427,7 +406,10 @@</span><a href="#l14.63"></a>
<span id="l14.64">      */</span><a href="#l14.64"></a>
<span id="l14.65">     public static LookAndFeelInfo[] getInstalledLookAndFeels() {</span><a href="#l14.65"></a>
<span id="l14.66">         maybeInitialize();</span><a href="#l14.66"></a>
<span id="l14.67" class="minusline">-        LookAndFeelInfo[] ilafs = installedLAFs;</span><a href="#l14.67"></a>
<span id="l14.68" class="plusline">+        LookAndFeelInfo[] ilafs = getLAFState().installedLAFs;</span><a href="#l14.68"></a>
<span id="l14.69" class="plusline">+        if (ilafs == null) {</span><a href="#l14.69"></a>
<span id="l14.70" class="plusline">+            ilafs = installedLAFs;</span><a href="#l14.70"></a>
<span id="l14.71" class="plusline">+        }</span><a href="#l14.71"></a>
<span id="l14.72">         LookAndFeelInfo[] rv = new LookAndFeelInfo[ilafs.length];</span><a href="#l14.72"></a>
<span id="l14.73">         System.arraycopy(ilafs, 0, rv, 0, ilafs.length);</span><a href="#l14.73"></a>
<span id="l14.74">         return rv;</span><a href="#l14.74"></a>
<span id="l14.75" class="atline">@@ -449,9 +431,10 @@</span><a href="#l14.75"></a>
<span id="l14.76">     public static void setInstalledLookAndFeels(LookAndFeelInfo[] infos)</span><a href="#l14.76"></a>
<span id="l14.77">         throws SecurityException</span><a href="#l14.77"></a>
<span id="l14.78">     {</span><a href="#l14.78"></a>
<span id="l14.79" class="plusline">+        maybeInitialize();</span><a href="#l14.79"></a>
<span id="l14.80">         LookAndFeelInfo[] newInfos = new LookAndFeelInfo[infos.length];</span><a href="#l14.80"></a>
<span id="l14.81">         System.arraycopy(infos, 0, newInfos, 0, infos.length);</span><a href="#l14.81"></a>
<span id="l14.82" class="minusline">-        installedLAFs = newInfos;</span><a href="#l14.82"></a>
<span id="l14.83" class="plusline">+        getLAFState().installedLAFs = newInfos;</span><a href="#l14.83"></a>
<span id="l14.84">     }</span><a href="#l14.84"></a>
<span id="l14.85"> </span><a href="#l14.85"></a>
<span id="l14.86"> </span><a href="#l14.86"></a>
<span id="l14.87" class="atline">@@ -1304,10 +1287,11 @@</span><a href="#l14.87"></a>
<span id="l14.88">             }</span><a href="#l14.88"></a>
<span id="l14.89">         }</span><a href="#l14.89"></a>
<span id="l14.90"> </span><a href="#l14.90"></a>
<span id="l14.91" class="minusline">-        installedLAFs = new LookAndFeelInfo[ilafs.size()];</span><a href="#l14.91"></a>
<span id="l14.92" class="plusline">+        LookAndFeelInfo[] installedLAFs = new LookAndFeelInfo[ilafs.size()];</span><a href="#l14.92"></a>
<span id="l14.93">         for(int i = 0; i &lt; ilafs.size(); i++) {</span><a href="#l14.93"></a>
<span id="l14.94">             installedLAFs[i] = (LookAndFeelInfo)(ilafs.elementAt(i));</span><a href="#l14.94"></a>
<span id="l14.95">         }</span><a href="#l14.95"></a>
<span id="l14.96" class="plusline">+        getLAFState().installedLAFs = installedLAFs;</span><a href="#l14.96"></a>
<span id="l14.97">     }</span><a href="#l14.97"></a>
<span id="l14.98"> </span><a href="#l14.98"></a>
<span id="l14.99"> </span><a href="#l14.99"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l15.1" class="minusline">--- a/src/share/classes/javax/swing/plaf/basic/BasicComboBoxUI.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l15.1"></a>
<span id="l15.2" class="plusline">+++ b/src/share/classes/javax/swing/plaf/basic/BasicComboBoxUI.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l15.2"></a>
<span id="l15.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l15.3"></a>
<span id="l15.4"> /*</span><a href="#l15.4"></a>
<span id="l15.5" class="minusline">- * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l15.5"></a>
<span id="l15.6" class="plusline">+ * Copyright 1997-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l15.6"></a>
<span id="l15.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l15.7"></a>
<span id="l15.8">  *</span><a href="#l15.8"></a>
<span id="l15.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l15.9"></a>
<span id="l15.10" class="atline">@@ -29,9 +29,7 @@</span><a href="#l15.10"></a>
<span id="l15.11"> import java.awt.event.*;</span><a href="#l15.11"></a>
<span id="l15.12"> import javax.swing.*;</span><a href="#l15.12"></a>
<span id="l15.13"> import javax.accessibility.*;</span><a href="#l15.13"></a>
<span id="l15.14" class="minusline">-import javax.swing.FocusManager;</span><a href="#l15.14"></a>
<span id="l15.15"> import javax.swing.plaf.*;</span><a href="#l15.15"></a>
<span id="l15.16" class="minusline">-import javax.swing.border.*;</span><a href="#l15.16"></a>
<span id="l15.17"> import javax.swing.text.*;</span><a href="#l15.17"></a>
<span id="l15.18"> import javax.swing.event.*;</span><a href="#l15.18"></a>
<span id="l15.19"> import java.beans.PropertyChangeListener;</span><a href="#l15.19"></a>
<span id="l15.20" class="atline">@@ -176,11 +174,9 @@</span><a href="#l15.20"></a>
<span id="l15.21">     private Dimension cachedDisplaySize = new Dimension( 0, 0 );</span><a href="#l15.21"></a>
<span id="l15.22"> </span><a href="#l15.22"></a>
<span id="l15.23">     // Key used for lookup of the DefaultListCellRenderer in the AppContext.</span><a href="#l15.23"></a>
<span id="l15.24" class="minusline">-    private static final Object COMBO_UI_LIST_CELL_RENDERER_KEY =</span><a href="#l15.24"></a>
<span id="l15.25" class="minusline">-                        new StringBuffer(&quot;DefaultListCellRendererKey&quot;);</span><a href="#l15.25"></a>
<span id="l15.26" class="plusline">+    private static final Object COMBO_UI_LIST_CELL_RENDERER_KEY = new Object(); // DefaultListCellRendererKey</span><a href="#l15.26"></a>
<span id="l15.27"> </span><a href="#l15.27"></a>
<span id="l15.28" class="minusline">-    static final StringBuffer HIDE_POPUP_KEY</span><a href="#l15.28"></a>
<span id="l15.29" class="minusline">-                  = new StringBuffer(&quot;HidePopupKey&quot;);</span><a href="#l15.29"></a>
<span id="l15.30" class="plusline">+    static final Object HIDE_POPUP_KEY = new Object(); // HidePopupKey</span><a href="#l15.30"></a>
<span id="l15.31"> </span><a href="#l15.31"></a>
<span id="l15.32">     /**</span><a href="#l15.32"></a>
<span id="l15.33">      * Whether or not all cells have the same baseline.</span><a href="#l15.33"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l16.1" class="minusline">--- a/src/share/classes/javax/swing/plaf/basic/BasicLabelUI.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l16.1"></a>
<span id="l16.2" class="plusline">+++ b/src/share/classes/javax/swing/plaf/basic/BasicLabelUI.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l16.2"></a>
<span id="l16.3" class="atline">@@ -65,6 +65,9 @@</span><a href="#l16.3"></a>
<span id="l16.4">     protected static BasicLabelUI labelUI = new BasicLabelUI();</span><a href="#l16.4"></a>
<span id="l16.5">     private final static BasicLabelUI SAFE_BASIC_LABEL_UI = new BasicLabelUI();</span><a href="#l16.5"></a>
<span id="l16.6"> </span><a href="#l16.6"></a>
<span id="l16.7" class="plusline">+    private Rectangle paintIconR = new Rectangle();</span><a href="#l16.7"></a>
<span id="l16.8" class="plusline">+    private Rectangle paintTextR = new Rectangle();</span><a href="#l16.8"></a>
<span id="l16.9" class="plusline">+</span><a href="#l16.9"></a>
<span id="l16.10">     static void loadActionMap(LazyActionMap map) {</span><a href="#l16.10"></a>
<span id="l16.11">         map.put(new Actions(Actions.PRESS));</span><a href="#l16.11"></a>
<span id="l16.12">         map.put(new Actions(Actions.RELEASE));</span><a href="#l16.12"></a>
<span id="l16.13" class="atline">@@ -135,17 +138,6 @@</span><a href="#l16.13"></a>
<span id="l16.14">                                                    textX, textY);</span><a href="#l16.14"></a>
<span id="l16.15">     }</span><a href="#l16.15"></a>
<span id="l16.16"> </span><a href="#l16.16"></a>
<span id="l16.17" class="minusline">-</span><a href="#l16.17"></a>
<span id="l16.18" class="minusline">-    /* These rectangles/insets are allocated once for this shared LabelUI</span><a href="#l16.18"></a>
<span id="l16.19" class="minusline">-     * implementation.  Re-using rectangles rather than allocating</span><a href="#l16.19"></a>
<span id="l16.20" class="minusline">-     * them in each paint call halved the time it took paint to run.</span><a href="#l16.20"></a>
<span id="l16.21" class="minusline">-     */</span><a href="#l16.21"></a>
<span id="l16.22" class="minusline">-    private static Rectangle paintIconR = new Rectangle();</span><a href="#l16.22"></a>
<span id="l16.23" class="minusline">-    private static Rectangle paintTextR = new Rectangle();</span><a href="#l16.23"></a>
<span id="l16.24" class="minusline">-    private static Rectangle paintViewR = new Rectangle();</span><a href="#l16.24"></a>
<span id="l16.25" class="minusline">-    private static Insets paintViewInsets = new Insets(0, 0, 0, 0);</span><a href="#l16.25"></a>
<span id="l16.26" class="minusline">-</span><a href="#l16.26"></a>
<span id="l16.27" class="minusline">-</span><a href="#l16.27"></a>
<span id="l16.28">     /**</span><a href="#l16.28"></a>
<span id="l16.29">      * Paint the label text in the foreground color, if the label</span><a href="#l16.29"></a>
<span id="l16.30">      * is opaque then paint the entire background with the background</span><a href="#l16.30"></a>
<span id="l16.31" class="atline">@@ -194,10 +186,11 @@</span><a href="#l16.31"></a>
<span id="l16.32"> </span><a href="#l16.32"></a>
<span id="l16.33">     private String layout(JLabel label, FontMetrics fm,</span><a href="#l16.33"></a>
<span id="l16.34">                           int width, int height) {</span><a href="#l16.34"></a>
<span id="l16.35" class="minusline">-        Insets insets = label.getInsets(paintViewInsets);</span><a href="#l16.35"></a>
<span id="l16.36" class="plusline">+        Insets insets = label.getInsets(null);</span><a href="#l16.36"></a>
<span id="l16.37">         String text = label.getText();</span><a href="#l16.37"></a>
<span id="l16.38">         Icon icon = (label.isEnabled()) ? label.getIcon() :</span><a href="#l16.38"></a>
<span id="l16.39">                                           label.getDisabledIcon();</span><a href="#l16.39"></a>
<span id="l16.40" class="plusline">+        Rectangle paintViewR = new Rectangle();</span><a href="#l16.40"></a>
<span id="l16.41">         paintViewR.x = insets.left;</span><a href="#l16.41"></a>
<span id="l16.42">         paintViewR.y = insets.top;</span><a href="#l16.42"></a>
<span id="l16.43">         paintViewR.width = width - (insets.left + insets.right);</span><a href="#l16.43"></a>
<span id="l16.44" class="atline">@@ -208,24 +201,13 @@</span><a href="#l16.44"></a>
<span id="l16.45">                         paintTextR);</span><a href="#l16.45"></a>
<span id="l16.46">     }</span><a href="#l16.46"></a>
<span id="l16.47"> </span><a href="#l16.47"></a>
<span id="l16.48" class="minusline">-</span><a href="#l16.48"></a>
<span id="l16.49" class="minusline">-    /* These rectangles/insets are allocated once for this shared LabelUI</span><a href="#l16.49"></a>
<span id="l16.50" class="minusline">-     * implementation.  Re-using rectangles rather than allocating</span><a href="#l16.50"></a>
<span id="l16.51" class="minusline">-     * them in each getPreferredSize call sped up the method substantially.</span><a href="#l16.51"></a>
<span id="l16.52" class="minusline">-     */</span><a href="#l16.52"></a>
<span id="l16.53" class="minusline">-    private static Rectangle iconR = new Rectangle();</span><a href="#l16.53"></a>
<span id="l16.54" class="minusline">-    private static Rectangle textR = new Rectangle();</span><a href="#l16.54"></a>
<span id="l16.55" class="minusline">-    private static Rectangle viewR = new Rectangle();</span><a href="#l16.55"></a>
<span id="l16.56" class="minusline">-    private static Insets viewInsets = new Insets(0, 0, 0, 0);</span><a href="#l16.56"></a>
<span id="l16.57" class="minusline">-</span><a href="#l16.57"></a>
<span id="l16.58" class="minusline">-</span><a href="#l16.58"></a>
<span id="l16.59">     public Dimension getPreferredSize(JComponent c)</span><a href="#l16.59"></a>
<span id="l16.60">     {</span><a href="#l16.60"></a>
<span id="l16.61">         JLabel label = (JLabel)c;</span><a href="#l16.61"></a>
<span id="l16.62">         String text = label.getText();</span><a href="#l16.62"></a>
<span id="l16.63">         Icon icon = (label.isEnabled()) ? label.getIcon() :</span><a href="#l16.63"></a>
<span id="l16.64">                                           label.getDisabledIcon();</span><a href="#l16.64"></a>
<span id="l16.65" class="minusline">-        Insets insets = label.getInsets(viewInsets);</span><a href="#l16.65"></a>
<span id="l16.66" class="plusline">+        Insets insets = label.getInsets(null);</span><a href="#l16.66"></a>
<span id="l16.67">         Font font = label.getFont();</span><a href="#l16.67"></a>
<span id="l16.68"> </span><a href="#l16.68"></a>
<span id="l16.69">         int dx = insets.left + insets.right;</span><a href="#l16.69"></a>
<span id="l16.70" class="atline">@@ -243,6 +225,9 @@</span><a href="#l16.70"></a>
<span id="l16.71">         else {</span><a href="#l16.71"></a>
<span id="l16.72">             FontMetrics fm = label.getFontMetrics(font);</span><a href="#l16.72"></a>
<span id="l16.73"> </span><a href="#l16.73"></a>
<span id="l16.74" class="plusline">+            Rectangle iconR = new Rectangle();</span><a href="#l16.74"></a>
<span id="l16.75" class="plusline">+            Rectangle textR = new Rectangle();</span><a href="#l16.75"></a>
<span id="l16.76" class="plusline">+            Rectangle viewR = new Rectangle();</span><a href="#l16.76"></a>
<span id="l16.77">             iconR.x = iconR.y = iconR.width = iconR.height = 0;</span><a href="#l16.77"></a>
<span id="l16.78">             textR.x = textR.y = textR.width = textR.height = 0;</span><a href="#l16.78"></a>
<span id="l16.79">             viewR.x = dx;</span><a href="#l16.79"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l17.1" class="minusline">--- a/src/share/classes/javax/swing/plaf/basic/BasicListUI.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l17.1"></a>
<span id="l17.2" class="plusline">+++ b/src/share/classes/javax/swing/plaf/basic/BasicListUI.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l17.2"></a>
<span id="l17.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l17.3"></a>
<span id="l17.4"> /*</span><a href="#l17.4"></a>
<span id="l17.5" class="minusline">- * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l17.5"></a>
<span id="l17.6" class="plusline">+ * Copyright 1997-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l17.6"></a>
<span id="l17.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l17.7"></a>
<span id="l17.8">  *</span><a href="#l17.8"></a>
<span id="l17.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l17.9"></a>
<span id="l17.10" class="atline">@@ -56,8 +56,7 @@</span><a href="#l17.10"></a>
<span id="l17.11">  */</span><a href="#l17.11"></a>
<span id="l17.12"> public class BasicListUI extends ListUI</span><a href="#l17.12"></a>
<span id="l17.13"> {</span><a href="#l17.13"></a>
<span id="l17.14" class="minusline">-    private static final StringBuilder BASELINE_COMPONENT_KEY =</span><a href="#l17.14"></a>
<span id="l17.15" class="minusline">-        new StringBuilder(&quot;List.baselineComponent&quot;);</span><a href="#l17.15"></a>
<span id="l17.16" class="plusline">+    private static final Object BASELINE_COMPONENT_KEY = new Object(); // List.baselineComponent</span><a href="#l17.16"></a>
<span id="l17.17"> </span><a href="#l17.17"></a>
<span id="l17.18">     protected JList list = null;</span><a href="#l17.18"></a>
<span id="l17.19">     protected CellRendererPane rendererPane;</span><a href="#l17.19"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l18.1" class="minusline">--- a/src/share/classes/javax/swing/plaf/basic/BasicPopupMenuUI.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l18.1"></a>
<span id="l18.2" class="plusline">+++ b/src/share/classes/javax/swing/plaf/basic/BasicPopupMenuUI.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l18.2"></a>
<span id="l18.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l18.3"></a>
<span id="l18.4"> /*</span><a href="#l18.4"></a>
<span id="l18.5" class="minusline">- * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l18.5"></a>
<span id="l18.6" class="plusline">+ * Copyright 1997-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l18.6"></a>
<span id="l18.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l18.7"></a>
<span id="l18.8">  *</span><a href="#l18.8"></a>
<span id="l18.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l18.9"></a>
<span id="l18.10" class="atline">@@ -28,26 +28,18 @@</span><a href="#l18.10"></a>
<span id="l18.11"> import javax.swing.*;</span><a href="#l18.11"></a>
<span id="l18.12"> import javax.swing.event.*;</span><a href="#l18.12"></a>
<span id="l18.13"> import javax.swing.plaf.*;</span><a href="#l18.13"></a>
<span id="l18.14" class="minusline">-import javax.swing.plaf.basic.*;</span><a href="#l18.14"></a>
<span id="l18.15" class="minusline">-import javax.swing.border.*;</span><a href="#l18.15"></a>
<span id="l18.16"> </span><a href="#l18.16"></a>
<span id="l18.17"> import java.applet.Applet;</span><a href="#l18.17"></a>
<span id="l18.18"> </span><a href="#l18.18"></a>
<span id="l18.19"> import java.awt.Component;</span><a href="#l18.19"></a>
<span id="l18.20" class="minusline">-import java.awt.Container;</span><a href="#l18.20"></a>
<span id="l18.21" class="minusline">-import java.awt.Dimension;</span><a href="#l18.21"></a>
<span id="l18.22"> import java.awt.KeyboardFocusManager;</span><a href="#l18.22"></a>
<span id="l18.23"> import java.awt.Window;</span><a href="#l18.23"></a>
<span id="l18.24"> import java.awt.event.*;</span><a href="#l18.24"></a>
<span id="l18.25"> import java.awt.AWTEvent;</span><a href="#l18.25"></a>
<span id="l18.26"> import java.awt.Toolkit;</span><a href="#l18.26"></a>
<span id="l18.27"> </span><a href="#l18.27"></a>
<span id="l18.28" class="minusline">-import java.beans.PropertyChangeListener;</span><a href="#l18.28"></a>
<span id="l18.29" class="minusline">-import java.beans.PropertyChangeEvent;</span><a href="#l18.29"></a>
<span id="l18.30" class="minusline">-</span><a href="#l18.30"></a>
<span id="l18.31"> import java.util.*;</span><a href="#l18.31"></a>
<span id="l18.32"> </span><a href="#l18.32"></a>
<span id="l18.33" class="minusline">-import sun.swing.DefaultLookup;</span><a href="#l18.33"></a>
<span id="l18.34"> import sun.swing.UIAction;</span><a href="#l18.34"></a>
<span id="l18.35"> </span><a href="#l18.35"></a>
<span id="l18.36"> import sun.awt.AppContext;</span><a href="#l18.36"></a>
<span id="l18.37" class="atline">@@ -61,10 +53,8 @@</span><a href="#l18.37"></a>
<span id="l18.38">  * @author Arnaud Weber</span><a href="#l18.38"></a>
<span id="l18.39">  */</span><a href="#l18.39"></a>
<span id="l18.40"> public class BasicPopupMenuUI extends PopupMenuUI {</span><a href="#l18.40"></a>
<span id="l18.41" class="minusline">-    static final StringBuilder MOUSE_GRABBER_KEY = new StringBuilder(</span><a href="#l18.41"></a>
<span id="l18.42" class="minusline">-                   &quot;javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber&quot;);</span><a href="#l18.42"></a>
<span id="l18.43" class="minusline">-    static final StringBuilder MENU_KEYBOARD_HELPER_KEY = new StringBuilder(</span><a href="#l18.43"></a>
<span id="l18.44" class="minusline">-                   &quot;javax.swing.plaf.basic.BasicPopupMenuUI.MenuKeyboardHelper&quot;);</span><a href="#l18.44"></a>
<span id="l18.45" class="plusline">+    static final Object MOUSE_GRABBER_KEY = new Object(); // javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber</span><a href="#l18.45"></a>
<span id="l18.46" class="plusline">+    static final Object MENU_KEYBOARD_HELPER_KEY = new Object(); // javax.swing.plaf.basic.BasicPopupMenuUI.MenuKeyboardHelper</span><a href="#l18.46"></a>
<span id="l18.47"> </span><a href="#l18.47"></a>
<span id="l18.48">     protected JPopupMenu popupMenu = null;</span><a href="#l18.48"></a>
<span id="l18.49">     private transient PopupMenuListener popupMenuListener = null;</span><a href="#l18.49"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l19.1" class="minusline">--- a/src/share/classes/javax/swing/plaf/basic/BasicSplitPaneUI.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l19.1"></a>
<span id="l19.2" class="plusline">+++ b/src/share/classes/javax/swing/plaf/basic/BasicSplitPaneUI.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l19.2"></a>
<span id="l19.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l19.3"></a>
<span id="l19.4"> /*</span><a href="#l19.4"></a>
<span id="l19.5" class="minusline">- * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l19.5"></a>
<span id="l19.6" class="plusline">+ * Copyright 1997-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l19.6"></a>
<span id="l19.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l19.7"></a>
<span id="l19.8">  *</span><a href="#l19.8"></a>
<span id="l19.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l19.9"></a>
<span id="l19.10" class="atline">@@ -31,14 +31,12 @@</span><a href="#l19.10"></a>
<span id="l19.11"> import sun.swing.UIAction;</span><a href="#l19.11"></a>
<span id="l19.12"> import javax.swing.*;</span><a href="#l19.12"></a>
<span id="l19.13"> import javax.swing.border.Border;</span><a href="#l19.13"></a>
<span id="l19.14" class="minusline">-import javax.swing.event.*;</span><a href="#l19.14"></a>
<span id="l19.15"> import java.awt.*;</span><a href="#l19.15"></a>
<span id="l19.16"> import java.awt.event.*;</span><a href="#l19.16"></a>
<span id="l19.17"> import java.awt.peer.ComponentPeer;</span><a href="#l19.17"></a>
<span id="l19.18"> import java.awt.peer.LightweightPeer;</span><a href="#l19.18"></a>
<span id="l19.19"> import java.beans.*;</span><a href="#l19.19"></a>
<span id="l19.20"> import java.util.*;</span><a href="#l19.20"></a>
<span id="l19.21" class="minusline">-import javax.swing.plaf.ActionMapUIResource;</span><a href="#l19.21"></a>
<span id="l19.22"> import javax.swing.plaf.SplitPaneUI;</span><a href="#l19.22"></a>
<span id="l19.23"> import javax.swing.plaf.ComponentUI;</span><a href="#l19.23"></a>
<span id="l19.24"> import javax.swing.plaf.UIResource;</span><a href="#l19.24"></a>
<span id="l19.25" class="atline">@@ -106,13 +104,13 @@</span><a href="#l19.25"></a>
<span id="l19.26">      * Keys to use for forward focus traversal when the JComponent is</span><a href="#l19.26"></a>
<span id="l19.27">      * managing focus.</span><a href="#l19.27"></a>
<span id="l19.28">      */</span><a href="#l19.28"></a>
<span id="l19.29" class="minusline">-    private static Set managingFocusForwardTraversalKeys;</span><a href="#l19.29"></a>
<span id="l19.30" class="plusline">+    private Set managingFocusForwardTraversalKeys;</span><a href="#l19.30"></a>
<span id="l19.31"> </span><a href="#l19.31"></a>
<span id="l19.32">     /**</span><a href="#l19.32"></a>
<span id="l19.33">      * Keys to use for backward focus traversal when the JComponent is</span><a href="#l19.33"></a>
<span id="l19.34">      * managing focus.</span><a href="#l19.34"></a>
<span id="l19.35">      */</span><a href="#l19.35"></a>
<span id="l19.36" class="minusline">-    private static Set managingFocusBackwardTraversalKeys;</span><a href="#l19.36"></a>
<span id="l19.37" class="plusline">+    private Set managingFocusBackwardTraversalKeys;</span><a href="#l19.37"></a>
<span id="l19.38"> </span><a href="#l19.38"></a>
<span id="l19.39"> </span><a href="#l19.39"></a>
<span id="l19.40">     /**</span><a href="#l19.40"></a>
<span id="l19.41" class="atline">@@ -674,7 +672,7 @@</span><a href="#l19.41"></a>
<span id="l19.42">      * @return increment via keyboard methods.</span><a href="#l19.42"></a>
<span id="l19.43">      */</span><a href="#l19.43"></a>
<span id="l19.44">     int getKeyboardMoveIncrement() {</span><a href="#l19.44"></a>
<span id="l19.45" class="minusline">-        return KEYBOARD_DIVIDER_MOVE_OFFSET;</span><a href="#l19.45"></a>
<span id="l19.46" class="plusline">+        return 3;</span><a href="#l19.46"></a>
<span id="l19.47">     }</span><a href="#l19.47"></a>
<span id="l19.48"> </span><a href="#l19.48"></a>
<span id="l19.49">     /**</span><a href="#l19.49"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l20.1" class="minusline">--- a/src/share/classes/javax/swing/plaf/basic/BasicTableUI.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l20.1"></a>
<span id="l20.2" class="plusline">+++ b/src/share/classes/javax/swing/plaf/basic/BasicTableUI.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l20.2"></a>
<span id="l20.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l20.3"></a>
<span id="l20.4"> /*</span><a href="#l20.4"></a>
<span id="l20.5" class="minusline">- * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l20.5"></a>
<span id="l20.6" class="plusline">+ * Copyright 1997-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l20.6"></a>
<span id="l20.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l20.7"></a>
<span id="l20.8">  *</span><a href="#l20.8"></a>
<span id="l20.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l20.9"></a>
<span id="l20.10" class="atline">@@ -27,16 +27,11 @@</span><a href="#l20.10"></a>
<span id="l20.11"> </span><a href="#l20.11"></a>
<span id="l20.12"> import java.awt.*;</span><a href="#l20.12"></a>
<span id="l20.13"> import java.awt.datatransfer.*;</span><a href="#l20.13"></a>
<span id="l20.14" class="minusline">-import java.awt.dnd.*;</span><a href="#l20.14"></a>
<span id="l20.15"> import java.awt.event.*;</span><a href="#l20.15"></a>
<span id="l20.16"> import java.util.Enumeration;</span><a href="#l20.16"></a>
<span id="l20.17" class="minusline">-import java.util.EventObject;</span><a href="#l20.17"></a>
<span id="l20.18" class="minusline">-import java.util.Hashtable;</span><a href="#l20.18"></a>
<span id="l20.19" class="minusline">-import java.util.TooManyListenersException;</span><a href="#l20.19"></a>
<span id="l20.20"> import javax.swing.*;</span><a href="#l20.20"></a>
<span id="l20.21"> import javax.swing.event.*;</span><a href="#l20.21"></a>
<span id="l20.22"> import javax.swing.plaf.*;</span><a href="#l20.22"></a>
<span id="l20.23" class="minusline">-import javax.swing.text.*;</span><a href="#l20.23"></a>
<span id="l20.24"> import javax.swing.table.*;</span><a href="#l20.24"></a>
<span id="l20.25"> import javax.swing.plaf.basic.DragRecognitionSupport.BeforeDrag;</span><a href="#l20.25"></a>
<span id="l20.26"> import sun.swing.SwingUtilities2;</span><a href="#l20.26"></a>
<span id="l20.27" class="atline">@@ -56,8 +51,7 @@</span><a href="#l20.27"></a>
<span id="l20.28">  */</span><a href="#l20.28"></a>
<span id="l20.29"> public class BasicTableUI extends TableUI</span><a href="#l20.29"></a>
<span id="l20.30"> {</span><a href="#l20.30"></a>
<span id="l20.31" class="minusline">-    private static final StringBuilder BASELINE_COMPONENT_KEY =</span><a href="#l20.31"></a>
<span id="l20.32" class="minusline">-        new StringBuilder(&quot;Table.baselineComponent&quot;);</span><a href="#l20.32"></a>
<span id="l20.33" class="plusline">+    private static final Object BASELINE_COMPONENT_KEY = new Object(); // Table.baselineComponent</span><a href="#l20.33"></a>
<span id="l20.34"> </span><a href="#l20.34"></a>
<span id="l20.35"> //</span><a href="#l20.35"></a>
<span id="l20.36"> // Instance Variables</span><a href="#l20.36"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l21.1" class="minusline">--- a/src/share/classes/javax/swing/plaf/basic/BasicTreeUI.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l21.1"></a>
<span id="l21.2" class="plusline">+++ b/src/share/classes/javax/swing/plaf/basic/BasicTreeUI.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l21.2"></a>
<span id="l21.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l21.3"></a>
<span id="l21.4"> /*</span><a href="#l21.4"></a>
<span id="l21.5" class="minusline">- * Copyright 1997-2007 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l21.5"></a>
<span id="l21.6" class="plusline">+ * Copyright 1997-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l21.6"></a>
<span id="l21.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l21.7"></a>
<span id="l21.8">  *</span><a href="#l21.8"></a>
<span id="l21.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l21.9"></a>
<span id="l21.10" class="atline">@@ -30,16 +30,12 @@</span><a href="#l21.10"></a>
<span id="l21.11"> import java.awt.*;</span><a href="#l21.11"></a>
<span id="l21.12"> import java.awt.event.*;</span><a href="#l21.12"></a>
<span id="l21.13"> import java.awt.datatransfer.*;</span><a href="#l21.13"></a>
<span id="l21.14" class="minusline">-import java.awt.dnd.*;</span><a href="#l21.14"></a>
<span id="l21.15"> import java.beans.*;</span><a href="#l21.15"></a>
<span id="l21.16" class="minusline">-import java.io.*;</span><a href="#l21.16"></a>
<span id="l21.17"> import java.util.Enumeration;</span><a href="#l21.17"></a>
<span id="l21.18"> import java.util.Hashtable;</span><a href="#l21.18"></a>
<span id="l21.19" class="minusline">-import java.util.TooManyListenersException;</span><a href="#l21.19"></a>
<span id="l21.20"> import java.util.ArrayList;</span><a href="#l21.20"></a>
<span id="l21.21"> import java.util.Collections;</span><a href="#l21.21"></a>
<span id="l21.22"> import java.util.Comparator;</span><a href="#l21.22"></a>
<span id="l21.23" class="minusline">-import javax.swing.plaf.ActionMapUIResource;</span><a href="#l21.23"></a>
<span id="l21.24"> import javax.swing.plaf.ComponentUI;</span><a href="#l21.24"></a>
<span id="l21.25"> import javax.swing.plaf.UIResource;</span><a href="#l21.25"></a>
<span id="l21.26"> import javax.swing.plaf.TreeUI;</span><a href="#l21.26"></a>
<span id="l21.27" class="atline">@@ -61,8 +57,7 @@</span><a href="#l21.27"></a>
<span id="l21.28"> </span><a href="#l21.28"></a>
<span id="l21.29"> public class BasicTreeUI extends TreeUI</span><a href="#l21.29"></a>
<span id="l21.30"> {</span><a href="#l21.30"></a>
<span id="l21.31" class="minusline">-    private static final StringBuilder BASELINE_COMPONENT_KEY =</span><a href="#l21.31"></a>
<span id="l21.32" class="minusline">-        new StringBuilder(&quot;Tree.baselineComponent&quot;);</span><a href="#l21.32"></a>
<span id="l21.33" class="plusline">+    private static final Object BASELINE_COMPONENT_KEY = new Object(); // Tree.baselineComponent</span><a href="#l21.33"></a>
<span id="l21.34"> </span><a href="#l21.34"></a>
<span id="l21.35">     // Old actions forward to an instance of this.</span><a href="#l21.35"></a>
<span id="l21.36">     static private final Actions SHARED_ACTION = new Actions();</span><a href="#l21.36"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l22.1" class="minusline">--- a/src/share/classes/javax/swing/plaf/metal/MetalBorders.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l22.1"></a>
<span id="l22.2" class="plusline">+++ b/src/share/classes/javax/swing/plaf/metal/MetalBorders.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l22.2"></a>
<span id="l22.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l22.3"></a>
<span id="l22.4"> /*</span><a href="#l22.4"></a>
<span id="l22.5" class="minusline">- * Copyright 1998-2006 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l22.5"></a>
<span id="l22.6" class="plusline">+ * Copyright 1998-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l22.6"></a>
<span id="l22.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l22.7"></a>
<span id="l22.8">  *</span><a href="#l22.8"></a>
<span id="l22.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l22.9"></a>
<span id="l22.10" class="atline">@@ -33,14 +33,11 @@</span><a href="#l22.10"></a>
<span id="l22.11"> </span><a href="#l22.11"></a>
<span id="l22.12"> import java.awt.Component;</span><a href="#l22.12"></a>
<span id="l22.13"> import java.awt.Insets;</span><a href="#l22.13"></a>
<span id="l22.14" class="minusline">-import java.awt.Dimension;</span><a href="#l22.14"></a>
<span id="l22.15" class="minusline">-import java.awt.Rectangle;</span><a href="#l22.15"></a>
<span id="l22.16"> import java.awt.Color;</span><a href="#l22.16"></a>
<span id="l22.17"> import java.awt.Dialog;</span><a href="#l22.17"></a>
<span id="l22.18"> import java.awt.Frame;</span><a href="#l22.18"></a>
<span id="l22.19"> import java.awt.Graphics;</span><a href="#l22.19"></a>
<span id="l22.20"> import java.awt.Window;</span><a href="#l22.20"></a>
<span id="l22.21" class="minusline">-import java.io.Serializable;</span><a href="#l22.21"></a>
<span id="l22.22"> </span><a href="#l22.22"></a>
<span id="l22.23"> import sun.swing.StringUIClientPropertyKey;</span><a href="#l22.23"></a>
<span id="l22.24"> </span><a href="#l22.24"></a>
<span id="l22.25" class="atline">@@ -62,8 +59,6 @@</span><a href="#l22.25"></a>
<span id="l22.26"> </span><a href="#l22.26"></a>
<span id="l22.27">     public static class Flush3DBorder extends AbstractBorder implements UIResource{</span><a href="#l22.27"></a>
<span id="l22.28"> </span><a href="#l22.28"></a>
<span id="l22.29" class="minusline">-        private static final Insets insets = new Insets(2, 2, 2, 2);</span><a href="#l22.29"></a>
<span id="l22.30" class="minusline">-</span><a href="#l22.30"></a>
<span id="l22.31">         public void paintBorder(Component c, Graphics g, int x, int y,</span><a href="#l22.31"></a>
<span id="l22.32">                           int w, int h) {</span><a href="#l22.32"></a>
<span id="l22.33">             if (c.isEnabled()) {</span><a href="#l22.33"></a>
<span id="l22.34" class="atline">@@ -73,13 +68,13 @@</span><a href="#l22.34"></a>
<span id="l22.35">             }</span><a href="#l22.35"></a>
<span id="l22.36">         }</span><a href="#l22.36"></a>
<span id="l22.37">         public Insets getBorderInsets(Component c)       {</span><a href="#l22.37"></a>
<span id="l22.38" class="minusline">-            return insets;</span><a href="#l22.38"></a>
<span id="l22.39" class="plusline">+            return new Insets(2, 2, 2, 2);</span><a href="#l22.39"></a>
<span id="l22.40">         }</span><a href="#l22.40"></a>
<span id="l22.41">         public Insets getBorderInsets(Component c, Insets newInsets) {</span><a href="#l22.41"></a>
<span id="l22.42" class="minusline">-            newInsets.top = insets.top;</span><a href="#l22.42"></a>
<span id="l22.43" class="minusline">-            newInsets.left = insets.left;</span><a href="#l22.43"></a>
<span id="l22.44" class="minusline">-            newInsets.bottom = insets.bottom;</span><a href="#l22.44"></a>
<span id="l22.45" class="minusline">-            newInsets.right = insets.right;</span><a href="#l22.45"></a>
<span id="l22.46" class="plusline">+            newInsets.top = 2;</span><a href="#l22.46"></a>
<span id="l22.47" class="plusline">+            newInsets.left = 2;</span><a href="#l22.47"></a>
<span id="l22.48" class="plusline">+            newInsets.bottom = 2;</span><a href="#l22.48"></a>
<span id="l22.49" class="plusline">+            newInsets.right = 2;</span><a href="#l22.49"></a>
<span id="l22.50">             return newInsets;</span><a href="#l22.50"></a>
<span id="l22.51">         }</span><a href="#l22.51"></a>
<span id="l22.52">     }</span><a href="#l22.52"></a>
<span id="l22.53" class="atline">@@ -190,21 +185,19 @@</span><a href="#l22.53"></a>
<span id="l22.54">         }</span><a href="#l22.54"></a>
<span id="l22.55"> </span><a href="#l22.55"></a>
<span id="l22.56">         public Insets getBorderInsets( Component c ) {</span><a href="#l22.56"></a>
<span id="l22.57" class="minusline">-            return borderInsets;</span><a href="#l22.57"></a>
<span id="l22.58" class="plusline">+            return new Insets(3, 3, 3, 3);</span><a href="#l22.58"></a>
<span id="l22.59">         }</span><a href="#l22.59"></a>
<span id="l22.60">         public Insets getBorderInsets(Component c, Insets newInsets) {</span><a href="#l22.60"></a>
<span id="l22.61" class="minusline">-            newInsets.top = borderInsets.top;</span><a href="#l22.61"></a>
<span id="l22.62" class="minusline">-            newInsets.left = borderInsets.left;</span><a href="#l22.62"></a>
<span id="l22.63" class="minusline">-            newInsets.bottom = borderInsets.bottom;</span><a href="#l22.63"></a>
<span id="l22.64" class="minusline">-            newInsets.right = borderInsets.right;</span><a href="#l22.64"></a>
<span id="l22.65" class="plusline">+            newInsets.top = 3;</span><a href="#l22.65"></a>
<span id="l22.66" class="plusline">+            newInsets.left = 3;</span><a href="#l22.66"></a>
<span id="l22.67" class="plusline">+            newInsets.bottom = 3;</span><a href="#l22.67"></a>
<span id="l22.68" class="plusline">+            newInsets.right = 3;</span><a href="#l22.68"></a>
<span id="l22.69">             return newInsets;</span><a href="#l22.69"></a>
<span id="l22.70">         }</span><a href="#l22.70"></a>
<span id="l22.71">     }</span><a href="#l22.71"></a>
<span id="l22.72"> </span><a href="#l22.72"></a>
<span id="l22.73">     public static class InternalFrameBorder extends AbstractBorder implements UIResource {</span><a href="#l22.73"></a>
<span id="l22.74"> </span><a href="#l22.74"></a>
<span id="l22.75" class="minusline">-        private static final Insets insets = new Insets(5, 5, 5, 5);</span><a href="#l22.75"></a>
<span id="l22.76" class="minusline">-</span><a href="#l22.76"></a>
<span id="l22.77">         private static final int corner = 14;</span><a href="#l22.77"></a>
<span id="l22.78"> </span><a href="#l22.78"></a>
<span id="l22.79">         public void paintBorder(Component c, Graphics g, int x, int y,</span><a href="#l22.79"></a>
<span id="l22.80" class="atline">@@ -256,13 +249,13 @@</span><a href="#l22.80"></a>
<span id="l22.81">           }</span><a href="#l22.81"></a>
<span id="l22.82"> </span><a href="#l22.82"></a>
<span id="l22.83">           public Insets getBorderInsets(Component c)       {</span><a href="#l22.83"></a>
<span id="l22.84" class="minusline">-              return insets;</span><a href="#l22.84"></a>
<span id="l22.85" class="plusline">+              return new Insets(5, 5, 5, 5);</span><a href="#l22.85"></a>
<span id="l22.86">           }</span><a href="#l22.86"></a>
<span id="l22.87">           public Insets getBorderInsets(Component c, Insets newInsets) {</span><a href="#l22.87"></a>
<span id="l22.88" class="minusline">-              newInsets.top = insets.top;</span><a href="#l22.88"></a>
<span id="l22.89" class="minusline">-              newInsets.left = insets.left;</span><a href="#l22.89"></a>
<span id="l22.90" class="minusline">-              newInsets.bottom = insets.bottom;</span><a href="#l22.90"></a>
<span id="l22.91" class="minusline">-              newInsets.right = insets.right;</span><a href="#l22.91"></a>
<span id="l22.92" class="plusline">+              newInsets.top = 5;</span><a href="#l22.92"></a>
<span id="l22.93" class="plusline">+              newInsets.left = 5;</span><a href="#l22.93"></a>
<span id="l22.94" class="plusline">+              newInsets.bottom = 5;</span><a href="#l22.94"></a>
<span id="l22.95" class="plusline">+              newInsets.right = 5;</span><a href="#l22.95"></a>
<span id="l22.96">               return newInsets;</span><a href="#l22.96"></a>
<span id="l22.97">           }</span><a href="#l22.97"></a>
<span id="l22.98">     }</span><a href="#l22.98"></a>
<span id="l22.99" class="atline">@@ -273,8 +266,6 @@</span><a href="#l22.99"></a>
<span id="l22.100">      */</span><a href="#l22.100"></a>
<span id="l22.101">     static class FrameBorder extends AbstractBorder implements UIResource {</span><a href="#l22.101"></a>
<span id="l22.102"> </span><a href="#l22.102"></a>
<span id="l22.103" class="minusline">-        private static final Insets insets = new Insets(5, 5, 5, 5);</span><a href="#l22.103"></a>
<span id="l22.104" class="minusline">-</span><a href="#l22.104"></a>
<span id="l22.105">         private static final int corner = 14;</span><a href="#l22.105"></a>
<span id="l22.106"> </span><a href="#l22.106"></a>
<span id="l22.107">         public void paintBorder(Component c, Graphics g, int x, int y,</span><a href="#l22.107"></a>
<span id="l22.108" class="atline">@@ -326,15 +317,15 @@</span><a href="#l22.108"></a>
<span id="l22.109">         }</span><a href="#l22.109"></a>
<span id="l22.110"> </span><a href="#l22.110"></a>
<span id="l22.111">         public Insets getBorderInsets(Component c)       {</span><a href="#l22.111"></a>
<span id="l22.112" class="minusline">-            return insets;</span><a href="#l22.112"></a>
<span id="l22.113" class="plusline">+            return new Insets(5, 5, 5, 5);</span><a href="#l22.113"></a>
<span id="l22.114">         }</span><a href="#l22.114"></a>
<span id="l22.115"> </span><a href="#l22.115"></a>
<span id="l22.116">         public Insets getBorderInsets(Component c, Insets newInsets)</span><a href="#l22.116"></a>
<span id="l22.117">         {</span><a href="#l22.117"></a>
<span id="l22.118" class="minusline">-            newInsets.top = insets.top;</span><a href="#l22.118"></a>
<span id="l22.119" class="minusline">-            newInsets.left = insets.left;</span><a href="#l22.119"></a>
<span id="l22.120" class="minusline">-            newInsets.bottom = insets.bottom;</span><a href="#l22.120"></a>
<span id="l22.121" class="minusline">-            newInsets.right = insets.right;</span><a href="#l22.121"></a>
<span id="l22.122" class="plusline">+            newInsets.top = 5;</span><a href="#l22.122"></a>
<span id="l22.123" class="plusline">+            newInsets.left = 5;</span><a href="#l22.123"></a>
<span id="l22.124" class="plusline">+            newInsets.bottom = 5;</span><a href="#l22.124"></a>
<span id="l22.125" class="plusline">+            newInsets.right = 5;</span><a href="#l22.125"></a>
<span id="l22.126">             return newInsets;</span><a href="#l22.126"></a>
<span id="l22.127">         }</span><a href="#l22.127"></a>
<span id="l22.128">     }</span><a href="#l22.128"></a>
<span id="l22.129" class="atline">@@ -345,7 +336,6 @@</span><a href="#l22.129"></a>
<span id="l22.130">      */</span><a href="#l22.130"></a>
<span id="l22.131">     static class DialogBorder extends AbstractBorder implements UIResource</span><a href="#l22.131"></a>
<span id="l22.132">     {</span><a href="#l22.132"></a>
<span id="l22.133" class="minusline">-        private static final Insets insets = new Insets(5, 5, 5, 5);</span><a href="#l22.133"></a>
<span id="l22.134">         private static final int corner = 14;</span><a href="#l22.134"></a>
<span id="l22.135"> </span><a href="#l22.135"></a>
<span id="l22.136">         protected Color getActiveBackground()</span><a href="#l22.136"></a>
<span id="l22.137" class="atline">@@ -427,15 +417,15 @@</span><a href="#l22.137"></a>
<span id="l22.138">         }</span><a href="#l22.138"></a>
<span id="l22.139"> </span><a href="#l22.139"></a>
<span id="l22.140">         public Insets getBorderInsets(Component c)       {</span><a href="#l22.140"></a>
<span id="l22.141" class="minusline">-            return insets;</span><a href="#l22.141"></a>
<span id="l22.142" class="plusline">+            return new Insets(5, 5, 5, 5);</span><a href="#l22.142"></a>
<span id="l22.143">         }</span><a href="#l22.143"></a>
<span id="l22.144"> </span><a href="#l22.144"></a>
<span id="l22.145">         public Insets getBorderInsets(Component c, Insets newInsets)</span><a href="#l22.145"></a>
<span id="l22.146">         {</span><a href="#l22.146"></a>
<span id="l22.147" class="minusline">-            newInsets.top = insets.top;</span><a href="#l22.147"></a>
<span id="l22.148" class="minusline">-            newInsets.left = insets.left;</span><a href="#l22.148"></a>
<span id="l22.149" class="minusline">-            newInsets.bottom = insets.bottom;</span><a href="#l22.149"></a>
<span id="l22.150" class="minusline">-            newInsets.right = insets.right;</span><a href="#l22.150"></a>
<span id="l22.151" class="plusline">+            newInsets.top = 5;</span><a href="#l22.151"></a>
<span id="l22.152" class="plusline">+            newInsets.left = 5;</span><a href="#l22.152"></a>
<span id="l22.153" class="plusline">+            newInsets.bottom = 5;</span><a href="#l22.153"></a>
<span id="l22.154" class="plusline">+            newInsets.right = 5;</span><a href="#l22.154"></a>
<span id="l22.155">             return newInsets;</span><a href="#l22.155"></a>
<span id="l22.156">         }</span><a href="#l22.156"></a>
<span id="l22.157">     }</span><a href="#l22.157"></a>
<span id="l22.158" class="atline">@@ -482,7 +472,6 @@</span><a href="#l22.158"></a>
<span id="l22.159">      * @since 1.3</span><a href="#l22.159"></a>
<span id="l22.160">      */</span><a href="#l22.160"></a>
<span id="l22.161">     public static class PaletteBorder extends AbstractBorder implements UIResource {</span><a href="#l22.161"></a>
<span id="l22.162" class="minusline">-        private static final Insets insets = new Insets(1, 1, 1, 1);</span><a href="#l22.162"></a>
<span id="l22.163">         int titleHeight = 0;</span><a href="#l22.163"></a>
<span id="l22.164"> </span><a href="#l22.164"></a>
<span id="l22.165">         public void paintBorder( Component c, Graphics g, int x, int y, int w, int h ) {</span><a href="#l22.165"></a>
<span id="l22.166" class="atline">@@ -499,20 +488,19 @@</span><a href="#l22.166"></a>
<span id="l22.167">         }</span><a href="#l22.167"></a>
<span id="l22.168"> </span><a href="#l22.168"></a>
<span id="l22.169">         public Insets getBorderInsets(Component c)       {</span><a href="#l22.169"></a>
<span id="l22.170" class="minusline">-            return insets;</span><a href="#l22.170"></a>
<span id="l22.171" class="plusline">+            return new Insets(1, 1, 1, 1);</span><a href="#l22.171"></a>
<span id="l22.172">         }</span><a href="#l22.172"></a>
<span id="l22.173"> </span><a href="#l22.173"></a>
<span id="l22.174">         public Insets getBorderInsets(Component c, Insets newInsets) {</span><a href="#l22.174"></a>
<span id="l22.175" class="minusline">-            newInsets.top = insets.top;</span><a href="#l22.175"></a>
<span id="l22.176" class="minusline">-            newInsets.left = insets.left;</span><a href="#l22.176"></a>
<span id="l22.177" class="minusline">-            newInsets.bottom = insets.bottom;</span><a href="#l22.177"></a>
<span id="l22.178" class="minusline">-            newInsets.right = insets.right;</span><a href="#l22.178"></a>
<span id="l22.179" class="plusline">+            newInsets.top = 1;</span><a href="#l22.179"></a>
<span id="l22.180" class="plusline">+            newInsets.left = 1;</span><a href="#l22.180"></a>
<span id="l22.181" class="plusline">+            newInsets.bottom = 1;</span><a href="#l22.181"></a>
<span id="l22.182" class="plusline">+            newInsets.right = 1;</span><a href="#l22.182"></a>
<span id="l22.183">             return newInsets;</span><a href="#l22.183"></a>
<span id="l22.184">         }</span><a href="#l22.184"></a>
<span id="l22.185">     }</span><a href="#l22.185"></a>
<span id="l22.186"> </span><a href="#l22.186"></a>
<span id="l22.187">     public static class OptionDialogBorder extends AbstractBorder implements UIResource {</span><a href="#l22.187"></a>
<span id="l22.188" class="minusline">-        private static final Insets insets = new Insets(3, 3, 3, 3);</span><a href="#l22.188"></a>
<span id="l22.189">         int titleHeight = 0;</span><a href="#l22.189"></a>
<span id="l22.190"> </span><a href="#l22.190"></a>
<span id="l22.191">         public void paintBorder( Component c, Graphics g, int x, int y, int w, int h ) {</span><a href="#l22.191"></a>
<span id="l22.192" class="atline">@@ -568,14 +556,14 @@</span><a href="#l22.192"></a>
<span id="l22.193">         }</span><a href="#l22.193"></a>
<span id="l22.194"> </span><a href="#l22.194"></a>
<span id="l22.195">         public Insets getBorderInsets(Component c)       {</span><a href="#l22.195"></a>
<span id="l22.196" class="minusline">-            return insets;</span><a href="#l22.196"></a>
<span id="l22.197" class="plusline">+            return new Insets(3, 3, 3, 3);</span><a href="#l22.197"></a>
<span id="l22.198">         }</span><a href="#l22.198"></a>
<span id="l22.199"> </span><a href="#l22.199"></a>
<span id="l22.200">         public Insets getBorderInsets(Component c, Insets newInsets) {</span><a href="#l22.200"></a>
<span id="l22.201" class="minusline">-            newInsets.top = insets.top;</span><a href="#l22.201"></a>
<span id="l22.202" class="minusline">-            newInsets.left = insets.left;</span><a href="#l22.202"></a>
<span id="l22.203" class="minusline">-            newInsets.bottom = insets.bottom;</span><a href="#l22.203"></a>
<span id="l22.204" class="minusline">-            newInsets.right = insets.right;</span><a href="#l22.204"></a>
<span id="l22.205" class="plusline">+            newInsets.top = 3;</span><a href="#l22.205"></a>
<span id="l22.206" class="plusline">+            newInsets.left = 3;</span><a href="#l22.206"></a>
<span id="l22.207" class="plusline">+            newInsets.bottom = 3;</span><a href="#l22.207"></a>
<span id="l22.208" class="plusline">+            newInsets.right = 3;</span><a href="#l22.208"></a>
<span id="l22.209">             return newInsets;</span><a href="#l22.209"></a>
<span id="l22.210">         }</span><a href="#l22.210"></a>
<span id="l22.211">     }</span><a href="#l22.211"></a>
<span id="l22.212" class="atline">@@ -615,10 +603,10 @@</span><a href="#l22.212"></a>
<span id="l22.213">                 newInsets.set(0, 0, 2, 0);</span><a href="#l22.213"></a>
<span id="l22.214">             }</span><a href="#l22.214"></a>
<span id="l22.215">             else {</span><a href="#l22.215"></a>
<span id="l22.216" class="minusline">-                newInsets.top = borderInsets.top;</span><a href="#l22.216"></a>
<span id="l22.217" class="minusline">-                newInsets.left = borderInsets.left;</span><a href="#l22.217"></a>
<span id="l22.218" class="minusline">-                newInsets.bottom = borderInsets.bottom;</span><a href="#l22.218"></a>
<span id="l22.219" class="minusline">-                newInsets.right = borderInsets.right;</span><a href="#l22.219"></a>
<span id="l22.220" class="plusline">+                newInsets.top = 1;</span><a href="#l22.220"></a>
<span id="l22.221" class="plusline">+                newInsets.left = 0;</span><a href="#l22.221"></a>
<span id="l22.222" class="plusline">+                newInsets.bottom = 1;</span><a href="#l22.222"></a>
<span id="l22.223" class="plusline">+                newInsets.right = 0;</span><a href="#l22.223"></a>
<span id="l22.224">             }</span><a href="#l22.224"></a>
<span id="l22.225">             return newInsets;</span><a href="#l22.225"></a>
<span id="l22.226">         }</span><a href="#l22.226"></a>
<span id="l22.227" class="atline">@@ -663,14 +651,14 @@</span><a href="#l22.227"></a>
<span id="l22.228">         }</span><a href="#l22.228"></a>
<span id="l22.229"> </span><a href="#l22.229"></a>
<span id="l22.230">         public Insets getBorderInsets( Component c ) {</span><a href="#l22.230"></a>
<span id="l22.231" class="minusline">-            return borderInsets;</span><a href="#l22.231"></a>
<span id="l22.232" class="plusline">+            return new Insets(2, 2, 2, 2);</span><a href="#l22.232"></a>
<span id="l22.233">         }</span><a href="#l22.233"></a>
<span id="l22.234"> </span><a href="#l22.234"></a>
<span id="l22.235">         public Insets getBorderInsets(Component c, Insets newInsets) {</span><a href="#l22.235"></a>
<span id="l22.236" class="minusline">-            newInsets.top = borderInsets.top;</span><a href="#l22.236"></a>
<span id="l22.237" class="minusline">-            newInsets.left = borderInsets.left;</span><a href="#l22.237"></a>
<span id="l22.238" class="minusline">-            newInsets.bottom = borderInsets.bottom;</span><a href="#l22.238"></a>
<span id="l22.239" class="minusline">-            newInsets.right = borderInsets.right;</span><a href="#l22.239"></a>
<span id="l22.240" class="plusline">+            newInsets.top = 2;</span><a href="#l22.240"></a>
<span id="l22.241" class="plusline">+            newInsets.left = 2;</span><a href="#l22.241"></a>
<span id="l22.242" class="plusline">+            newInsets.bottom = 2;</span><a href="#l22.242"></a>
<span id="l22.243" class="plusline">+            newInsets.right = 2;</span><a href="#l22.243"></a>
<span id="l22.244">             return newInsets;</span><a href="#l22.244"></a>
<span id="l22.245">         }</span><a href="#l22.245"></a>
<span id="l22.246">     }</span><a href="#l22.246"></a>
<span id="l22.247" class="atline">@@ -694,14 +682,14 @@</span><a href="#l22.247"></a>
<span id="l22.248">         }</span><a href="#l22.248"></a>
<span id="l22.249"> </span><a href="#l22.249"></a>
<span id="l22.250">         public Insets getBorderInsets( Component c ) {</span><a href="#l22.250"></a>
<span id="l22.251" class="minusline">-             return borderInsets;</span><a href="#l22.251"></a>
<span id="l22.252" class="plusline">+             return new Insets(3, 1, 2, 1);</span><a href="#l22.252"></a>
<span id="l22.253">         }</span><a href="#l22.253"></a>
<span id="l22.254"> </span><a href="#l22.254"></a>
<span id="l22.255">         public Insets getBorderInsets(Component c, Insets newInsets) {</span><a href="#l22.255"></a>
<span id="l22.256" class="minusline">-            newInsets.top = borderInsets.top;</span><a href="#l22.256"></a>
<span id="l22.257" class="minusline">-            newInsets.left = borderInsets.left;</span><a href="#l22.257"></a>
<span id="l22.258" class="minusline">-            newInsets.bottom = borderInsets.bottom;</span><a href="#l22.258"></a>
<span id="l22.259" class="minusline">-            newInsets.right = borderInsets.right;</span><a href="#l22.259"></a>
<span id="l22.260" class="plusline">+            newInsets.top = 3;</span><a href="#l22.260"></a>
<span id="l22.261" class="plusline">+            newInsets.left = 1;</span><a href="#l22.261"></a>
<span id="l22.262" class="plusline">+            newInsets.bottom = 2;</span><a href="#l22.262"></a>
<span id="l22.263" class="plusline">+            newInsets.right = 1;</span><a href="#l22.263"></a>
<span id="l22.264">             return newInsets;</span><a href="#l22.264"></a>
<span id="l22.265">         }</span><a href="#l22.265"></a>
<span id="l22.266">     }</span><a href="#l22.266"></a>
<span id="l22.267" class="atline">@@ -911,8 +899,6 @@</span><a href="#l22.267"></a>
<span id="l22.268"> </span><a href="#l22.268"></a>
<span id="l22.269">     public static class ScrollPaneBorder extends AbstractBorder implements UIResource {</span><a href="#l22.269"></a>
<span id="l22.270"> </span><a href="#l22.270"></a>
<span id="l22.271" class="minusline">-       private static final Insets insets = new Insets(1, 1, 2, 2);</span><a href="#l22.271"></a>
<span id="l22.272" class="minusline">-</span><a href="#l22.272"></a>
<span id="l22.273">         public void paintBorder(Component c, Graphics g, int x, int y,</span><a href="#l22.273"></a>
<span id="l22.274">                           int w, int h) {</span><a href="#l22.274"></a>
<span id="l22.275"> </span><a href="#l22.275"></a>
<span id="l22.276" class="atline">@@ -946,7 +932,7 @@</span><a href="#l22.276"></a>
<span id="l22.277">         }</span><a href="#l22.277"></a>
<span id="l22.278"> </span><a href="#l22.278"></a>
<span id="l22.279">         public Insets getBorderInsets(Component c)       {</span><a href="#l22.279"></a>
<span id="l22.280" class="minusline">-            return insets;</span><a href="#l22.280"></a>
<span id="l22.281" class="plusline">+            return new Insets(1, 1, 2, 2);</span><a href="#l22.281"></a>
<span id="l22.282">         }</span><a href="#l22.282"></a>
<span id="l22.283">     }</span><a href="#l22.283"></a>
<span id="l22.284"> </span><a href="#l22.284"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l23.1" class="minusline">--- a/src/share/classes/javax/swing/plaf/metal/MetalBumps.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l23.1"></a>
<span id="l23.2" class="plusline">+++ b/src/share/classes/javax/swing/plaf/metal/MetalBumps.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l23.2"></a>
<span id="l23.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l23.3"></a>
<span id="l23.4"> /*</span><a href="#l23.4"></a>
<span id="l23.5" class="minusline">- * Copyright 1998-2003 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l23.5"></a>
<span id="l23.6" class="plusline">+ * Copyright 1998-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l23.6"></a>
<span id="l23.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l23.7"></a>
<span id="l23.8">  *</span><a href="#l23.8"></a>
<span id="l23.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l23.9"></a>
<span id="l23.10" class="atline">@@ -25,11 +25,22 @@</span><a href="#l23.10"></a>
<span id="l23.11"> </span><a href="#l23.11"></a>
<span id="l23.12"> package javax.swing.plaf.metal;</span><a href="#l23.12"></a>
<span id="l23.13"> </span><a href="#l23.13"></a>
<span id="l23.14" class="minusline">-import java.awt.*;</span><a href="#l23.14"></a>
<span id="l23.15" class="minusline">-import java.awt.image.*;</span><a href="#l23.15"></a>
<span id="l23.16" class="minusline">-import javax.swing.*;</span><a href="#l23.16"></a>
<span id="l23.17" class="minusline">-import java.io.*;</span><a href="#l23.17"></a>
<span id="l23.18" class="minusline">-import java.util.*;</span><a href="#l23.18"></a>
<span id="l23.19" class="plusline">+import sun.awt.AppContext;</span><a href="#l23.19"></a>
<span id="l23.20" class="plusline">+</span><a href="#l23.20"></a>
<span id="l23.21" class="plusline">+import java.awt.Color;</span><a href="#l23.21"></a>
<span id="l23.22" class="plusline">+import java.awt.Component;</span><a href="#l23.22"></a>
<span id="l23.23" class="plusline">+import java.awt.Dimension;</span><a href="#l23.23"></a>
<span id="l23.24" class="plusline">+import java.awt.Graphics;</span><a href="#l23.24"></a>
<span id="l23.25" class="plusline">+import java.awt.Graphics2D;</span><a href="#l23.25"></a>
<span id="l23.26" class="plusline">+import java.awt.GraphicsConfiguration;</span><a href="#l23.26"></a>
<span id="l23.27" class="plusline">+import java.awt.Image;</span><a href="#l23.27"></a>
<span id="l23.28" class="plusline">+import java.awt.Transparency;</span><a href="#l23.28"></a>
<span id="l23.29" class="plusline">+import java.awt.image.BufferedImage;</span><a href="#l23.29"></a>
<span id="l23.30" class="plusline">+import java.awt.image.DataBuffer;</span><a href="#l23.30"></a>
<span id="l23.31" class="plusline">+import java.awt.image.IndexColorModel;</span><a href="#l23.31"></a>
<span id="l23.32" class="plusline">+import java.util.ArrayList;</span><a href="#l23.32"></a>
<span id="l23.33" class="plusline">+import java.util.List;</span><a href="#l23.33"></a>
<span id="l23.34" class="plusline">+import javax.swing.Icon;</span><a href="#l23.34"></a>
<span id="l23.35"> </span><a href="#l23.35"></a>
<span id="l23.36"> /**</span><a href="#l23.36"></a>
<span id="l23.37">  * Implements the bumps used throughout the Metal Look and Feel.</span><a href="#l23.37"></a>
<span id="l23.38" class="atline">@@ -49,19 +60,9 @@</span><a href="#l23.38"></a>
<span id="l23.39">     protected Color shadowColor;</span><a href="#l23.39"></a>
<span id="l23.40">     protected Color backColor;</span><a href="#l23.40"></a>
<span id="l23.41"> </span><a href="#l23.41"></a>
<span id="l23.42" class="minusline">-    protected static Vector buffers = new Vector();</span><a href="#l23.42"></a>
<span id="l23.43" class="plusline">+    private static final Object METAL_BUMPS = new Object();</span><a href="#l23.43"></a>
<span id="l23.44">     protected BumpBuffer buffer;</span><a href="#l23.44"></a>
<span id="l23.45"> </span><a href="#l23.45"></a>
<span id="l23.46" class="minusline">-    public MetalBumps( Dimension bumpArea ) {</span><a href="#l23.46"></a>
<span id="l23.47" class="minusline">-        this( bumpArea.width, bumpArea.height );</span><a href="#l23.47"></a>
<span id="l23.48" class="minusline">-    }</span><a href="#l23.48"></a>
<span id="l23.49" class="minusline">-</span><a href="#l23.49"></a>
<span id="l23.50" class="minusline">-    public MetalBumps( int width, int height ) {</span><a href="#l23.50"></a>
<span id="l23.51" class="minusline">-        this(width, height, MetalLookAndFeel.getPrimaryControlHighlight(),</span><a href="#l23.51"></a>
<span id="l23.52" class="minusline">-             MetalLookAndFeel.getPrimaryControlDarkShadow(),</span><a href="#l23.52"></a>
<span id="l23.53" class="minusline">-             MetalLookAndFeel.getPrimaryControlShadow());</span><a href="#l23.53"></a>
<span id="l23.54" class="minusline">-    }</span><a href="#l23.54"></a>
<span id="l23.55" class="minusline">-</span><a href="#l23.55"></a>
<span id="l23.56">     /**</span><a href="#l23.56"></a>
<span id="l23.57">      * Creates MetalBumps of the specified size with the specified colors.</span><a href="#l23.57"></a>
<span id="l23.58">      * If &lt;code&gt;newBackColor&lt;/code&gt; is null, the background will be</span><a href="#l23.58"></a>
<span id="l23.59" class="atline">@@ -73,29 +74,22 @@</span><a href="#l23.59"></a>
<span id="l23.60">         setBumpColors( newTopColor, newShadowColor, newBackColor );</span><a href="#l23.60"></a>
<span id="l23.61">     }</span><a href="#l23.61"></a>
<span id="l23.62"> </span><a href="#l23.62"></a>
<span id="l23.63" class="minusline">-    private BumpBuffer getBuffer(GraphicsConfiguration gc, Color aTopColor,</span><a href="#l23.63"></a>
<span id="l23.64" class="minusline">-                                 Color aShadowColor, Color aBackColor) {</span><a href="#l23.64"></a>
<span id="l23.65" class="minusline">-        if (buffer != null &amp;&amp; buffer.hasSameConfiguration(</span><a href="#l23.65"></a>
<span id="l23.66" class="minusline">-                              gc, aTopColor, aShadowColor, aBackColor)) {</span><a href="#l23.66"></a>
<span id="l23.67" class="minusline">-            return buffer;</span><a href="#l23.67"></a>
<span id="l23.68" class="plusline">+    private static BumpBuffer createBuffer(GraphicsConfiguration gc,</span><a href="#l23.68"></a>
<span id="l23.69" class="plusline">+                                           Color topColor, Color shadowColor, Color backColor) {</span><a href="#l23.69"></a>
<span id="l23.70" class="plusline">+        AppContext context = AppContext.getAppContext();</span><a href="#l23.70"></a>
<span id="l23.71" class="plusline">+        List&lt;BumpBuffer&gt; buffers = (List&lt;BumpBuffer&gt;) context.get(METAL_BUMPS);</span><a href="#l23.71"></a>
<span id="l23.72" class="plusline">+        if (buffers == null) {</span><a href="#l23.72"></a>
<span id="l23.73" class="plusline">+            buffers = new ArrayList&lt;BumpBuffer&gt;();</span><a href="#l23.73"></a>
<span id="l23.74" class="plusline">+            context.put(METAL_BUMPS, buffers);</span><a href="#l23.74"></a>
<span id="l23.75">         }</span><a href="#l23.75"></a>
<span id="l23.76" class="minusline">-        BumpBuffer result = null;</span><a href="#l23.76"></a>
<span id="l23.77" class="minusline">-</span><a href="#l23.77"></a>
<span id="l23.78" class="minusline">-        Enumeration elements = buffers.elements();</span><a href="#l23.78"></a>
<span id="l23.79" class="minusline">-</span><a href="#l23.79"></a>
<span id="l23.80" class="minusline">-        while ( elements.hasMoreElements() ) {</span><a href="#l23.80"></a>
<span id="l23.81" class="minusline">-            BumpBuffer aBuffer = (BumpBuffer)elements.nextElement();</span><a href="#l23.81"></a>
<span id="l23.82" class="minusline">-            if ( aBuffer.hasSameConfiguration(gc, aTopColor, aShadowColor,</span><a href="#l23.82"></a>
<span id="l23.83" class="minusline">-                                              aBackColor)) {</span><a href="#l23.83"></a>
<span id="l23.84" class="minusline">-                result = aBuffer;</span><a href="#l23.84"></a>
<span id="l23.85" class="minusline">-                break;</span><a href="#l23.85"></a>
<span id="l23.86" class="plusline">+        for (BumpBuffer buffer : buffers) {</span><a href="#l23.86"></a>
<span id="l23.87" class="plusline">+            if (buffer.hasSameConfiguration(gc, topColor, shadowColor, backColor)) {</span><a href="#l23.87"></a>
<span id="l23.88" class="plusline">+                return buffer;</span><a href="#l23.88"></a>
<span id="l23.89">             }</span><a href="#l23.89"></a>
<span id="l23.90">         }</span><a href="#l23.90"></a>
<span id="l23.91" class="minusline">-        if (result == null) {</span><a href="#l23.91"></a>
<span id="l23.92" class="minusline">-            result = new BumpBuffer(gc, topColor, shadowColor, backColor);</span><a href="#l23.92"></a>
<span id="l23.93" class="minusline">-            buffers.addElement(result);</span><a href="#l23.93"></a>
<span id="l23.94" class="minusline">-        }</span><a href="#l23.94"></a>
<span id="l23.95" class="minusline">-        return result;</span><a href="#l23.95"></a>
<span id="l23.96" class="plusline">+        BumpBuffer buffer = new BumpBuffer(gc, topColor, shadowColor, backColor);</span><a href="#l23.96"></a>
<span id="l23.97" class="plusline">+        buffers.add(buffer);</span><a href="#l23.97"></a>
<span id="l23.98" class="plusline">+        return buffer;</span><a href="#l23.98"></a>
<span id="l23.99">     }</span><a href="#l23.99"></a>
<span id="l23.100"> </span><a href="#l23.100"></a>
<span id="l23.101">     public void setBumpArea( Dimension bumpArea ) {</span><a href="#l23.101"></a>
<span id="l23.102" class="atline">@@ -123,10 +117,12 @@</span><a href="#l23.102"></a>
<span id="l23.103">                                      (GraphicsConfiguration)((Graphics2D)g).</span><a href="#l23.103"></a>
<span id="l23.104">                                      getDeviceConfiguration() : null;</span><a href="#l23.104"></a>
<span id="l23.105"> </span><a href="#l23.105"></a>
<span id="l23.106" class="minusline">-        buffer = getBuffer(gc, topColor, shadowColor, backColor);</span><a href="#l23.106"></a>
<span id="l23.107" class="plusline">+        if ((buffer == null) || !buffer.hasSameConfiguration(gc, topColor, shadowColor, backColor)) {</span><a href="#l23.107"></a>
<span id="l23.108" class="plusline">+            buffer = createBuffer(gc, topColor, shadowColor, backColor);</span><a href="#l23.108"></a>
<span id="l23.109" class="plusline">+        }</span><a href="#l23.109"></a>
<span id="l23.110"> </span><a href="#l23.110"></a>
<span id="l23.111" class="minusline">-        int bufferWidth = buffer.getImageSize().width;</span><a href="#l23.111"></a>
<span id="l23.112" class="minusline">-        int bufferHeight = buffer.getImageSize().height;</span><a href="#l23.112"></a>
<span id="l23.113" class="plusline">+        int bufferWidth = BumpBuffer.IMAGE_SIZE;</span><a href="#l23.113"></a>
<span id="l23.114" class="plusline">+        int bufferHeight = BumpBuffer.IMAGE_SIZE;</span><a href="#l23.114"></a>
<span id="l23.115">         int iconWidth = getIconWidth();</span><a href="#l23.115"></a>
<span id="l23.116">         int iconHeight = getIconHeight();</span><a href="#l23.116"></a>
<span id="l23.117">         int x2 = x + iconWidth;</span><a href="#l23.117"></a>
<span id="l23.118" class="atline">@@ -159,7 +155,6 @@</span><a href="#l23.118"></a>
<span id="l23.119"> class BumpBuffer {</span><a href="#l23.119"></a>
<span id="l23.120"> </span><a href="#l23.120"></a>
<span id="l23.121">     static final int IMAGE_SIZE = 64;</span><a href="#l23.121"></a>
<span id="l23.122" class="minusline">-    static Dimension imageSize = new Dimension( IMAGE_SIZE, IMAGE_SIZE );</span><a href="#l23.122"></a>
<span id="l23.123"> </span><a href="#l23.123"></a>
<span id="l23.124">     transient Image image;</span><a href="#l23.124"></a>
<span id="l23.125">     Color topColor;</span><a href="#l23.125"></a>
<span id="l23.126" class="atline">@@ -201,10 +196,6 @@</span><a href="#l23.126"></a>
<span id="l23.127">         return image;</span><a href="#l23.127"></a>
<span id="l23.128">     }</span><a href="#l23.128"></a>
<span id="l23.129"> </span><a href="#l23.129"></a>
<span id="l23.130" class="minusline">-    public Dimension getImageSize() {</span><a href="#l23.130"></a>
<span id="l23.131" class="minusline">-        return imageSize;</span><a href="#l23.131"></a>
<span id="l23.132" class="minusline">-    }</span><a href="#l23.132"></a>
<span id="l23.133" class="minusline">-</span><a href="#l23.133"></a>
<span id="l23.134">     /**</span><a href="#l23.134"></a>
<span id="l23.135">      * Paints the bumps into the current image.</span><a href="#l23.135"></a>
<span id="l23.136">      */</span><a href="#l23.136"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l24.1" class="minusline">--- a/src/share/classes/javax/swing/plaf/metal/MetalInternalFrameUI.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l24.1"></a>
<span id="l24.2" class="plusline">+++ b/src/share/classes/javax/swing/plaf/metal/MetalInternalFrameUI.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l24.2"></a>
<span id="l24.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l24.3"></a>
<span id="l24.4"> /*</span><a href="#l24.4"></a>
<span id="l24.5" class="minusline">- * Copyright 1998-2006 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l24.5"></a>
<span id="l24.6" class="plusline">+ * Copyright 1998-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l24.6"></a>
<span id="l24.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l24.7"></a>
<span id="l24.8">  *</span><a href="#l24.8"></a>
<span id="l24.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l24.9"></a>
<span id="l24.10" class="atline">@@ -31,10 +31,8 @@</span><a href="#l24.10"></a>
<span id="l24.11"> import javax.swing.event.*;</span><a href="#l24.11"></a>
<span id="l24.12"> import javax.swing.border.*;</span><a href="#l24.12"></a>
<span id="l24.13"> import javax.swing.plaf.basic.*;</span><a href="#l24.13"></a>
<span id="l24.14" class="minusline">-import java.util.EventListener;</span><a href="#l24.14"></a>
<span id="l24.15"> import java.beans.PropertyChangeListener;</span><a href="#l24.15"></a>
<span id="l24.16"> import java.beans.PropertyChangeEvent;</span><a href="#l24.16"></a>
<span id="l24.17" class="minusline">-import java.beans.PropertyVetoException;</span><a href="#l24.17"></a>
<span id="l24.18"> import javax.swing.plaf.*;</span><a href="#l24.18"></a>
<span id="l24.19"> </span><a href="#l24.19"></a>
<span id="l24.20"> /**</span><a href="#l24.20"></a>
<span id="l24.21" class="atline">@@ -51,7 +49,7 @@</span><a href="#l24.21"></a>
<span id="l24.22">   private static final Border handyEmptyBorder = new EmptyBorder(0,0,0,0);</span><a href="#l24.22"></a>
<span id="l24.23"> </span><a href="#l24.23"></a>
<span id="l24.24">   protected static String IS_PALETTE   = &quot;JInternalFrame.isPalette&quot;;</span><a href="#l24.24"></a>
<span id="l24.25" class="minusline">-</span><a href="#l24.25"></a>
<span id="l24.26" class="plusline">+  private static String IS_PALETTE_KEY = &quot;JInternalFrame.isPalette&quot;;</span><a href="#l24.26"></a>
<span id="l24.27">   private static String FRAME_TYPE     = &quot;JInternalFrame.frameType&quot;;</span><a href="#l24.27"></a>
<span id="l24.28">   private static String NORMAL_FRAME   = &quot;normal&quot;;</span><a href="#l24.28"></a>
<span id="l24.29">   private static String PALETTE_FRAME  = &quot;palette&quot;;</span><a href="#l24.29"></a>
<span id="l24.30" class="atline">@@ -68,7 +66,7 @@</span><a href="#l24.30"></a>
<span id="l24.31">   public void installUI(JComponent c) {</span><a href="#l24.31"></a>
<span id="l24.32">     super.installUI(c);</span><a href="#l24.32"></a>
<span id="l24.33"> </span><a href="#l24.33"></a>
<span id="l24.34" class="minusline">-    Object paletteProp = c.getClientProperty( IS_PALETTE );</span><a href="#l24.34"></a>
<span id="l24.35" class="plusline">+    Object paletteProp = c.getClientProperty(IS_PALETTE_KEY);</span><a href="#l24.35"></a>
<span id="l24.36">     if ( paletteProp != null ) {</span><a href="#l24.36"></a>
<span id="l24.37">         setPalette( ((Boolean)paletteProp).booleanValue() );</span><a href="#l24.37"></a>
<span id="l24.38">     }</span><a href="#l24.38"></a>
<span id="l24.39" class="atline">@@ -187,7 +185,7 @@</span><a href="#l24.39"></a>
<span id="l24.40">                   ui.setFrameType( (String) e.getNewValue() );</span><a href="#l24.40"></a>
<span id="l24.41">               }</span><a href="#l24.41"></a>
<span id="l24.42">           }</span><a href="#l24.42"></a>
<span id="l24.43" class="minusline">-          else if ( name.equals( IS_PALETTE ) )</span><a href="#l24.43"></a>
<span id="l24.44" class="plusline">+          else if ( name.equals(IS_PALETTE_KEY) )</span><a href="#l24.44"></a>
<span id="l24.45">           {</span><a href="#l24.45"></a>
<span id="l24.46">               if ( e.getNewValue() != null )</span><a href="#l24.46"></a>
<span id="l24.47">               {</span><a href="#l24.47"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l25.1" class="minusline">--- a/src/share/classes/javax/swing/plaf/metal/MetalSliderUI.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l25.1"></a>
<span id="l25.2" class="plusline">+++ b/src/share/classes/javax/swing/plaf/metal/MetalSliderUI.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l25.2"></a>
<span id="l25.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l25.3"></a>
<span id="l25.4"> /*</span><a href="#l25.4"></a>
<span id="l25.5" class="minusline">- * Copyright 1998-2005 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l25.5"></a>
<span id="l25.6" class="plusline">+ * Copyright 1998-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l25.6"></a>
<span id="l25.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l25.7"></a>
<span id="l25.8">  *</span><a href="#l25.8"></a>
<span id="l25.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l25.9"></a>
<span id="l25.10" class="atline">@@ -27,23 +27,12 @@</span><a href="#l25.10"></a>
<span id="l25.11"> </span><a href="#l25.11"></a>
<span id="l25.12"> import javax.swing.plaf.basic.BasicSliderUI;</span><a href="#l25.12"></a>
<span id="l25.13"> </span><a href="#l25.13"></a>
<span id="l25.14" class="minusline">-import java.awt.Component;</span><a href="#l25.14"></a>
<span id="l25.15" class="minusline">-import java.awt.Container;</span><a href="#l25.15"></a>
<span id="l25.16"> import java.awt.Graphics;</span><a href="#l25.16"></a>
<span id="l25.17"> import java.awt.Dimension;</span><a href="#l25.17"></a>
<span id="l25.18"> import java.awt.Rectangle;</span><a href="#l25.18"></a>
<span id="l25.19" class="minusline">-import java.awt.Point;</span><a href="#l25.19"></a>
<span id="l25.20" class="minusline">-import java.awt.Insets;</span><a href="#l25.20"></a>
<span id="l25.21"> import java.awt.Color;</span><a href="#l25.21"></a>
<span id="l25.22" class="minusline">-import java.io.Serializable;</span><a href="#l25.22"></a>
<span id="l25.23" class="minusline">-import java.awt.IllegalComponentStateException;</span><a href="#l25.23"></a>
<span id="l25.24" class="minusline">-import java.awt.Polygon;</span><a href="#l25.24"></a>
<span id="l25.25"> import java.beans.*;</span><a href="#l25.25"></a>
<span id="l25.26" class="minusline">-</span><a href="#l25.26"></a>
<span id="l25.27" class="minusline">-import javax.swing.border.AbstractBorder;</span><a href="#l25.27"></a>
<span id="l25.28" class="minusline">-</span><a href="#l25.28"></a>
<span id="l25.29"> import javax.swing.*;</span><a href="#l25.29"></a>
<span id="l25.30" class="minusline">-import javax.swing.event.*;</span><a href="#l25.30"></a>
<span id="l25.31"> import javax.swing.plaf.*;</span><a href="#l25.31"></a>
<span id="l25.32"> </span><a href="#l25.32"></a>
<span id="l25.33"> /**</span><a href="#l25.33"></a>
<span id="l25.34" class="atline">@@ -64,12 +53,13 @@</span><a href="#l25.34"></a>
<span id="l25.35"> </span><a href="#l25.35"></a>
<span id="l25.36">     protected final int TICK_BUFFER = 4;</span><a href="#l25.36"></a>
<span id="l25.37">     protected boolean filledSlider = false;</span><a href="#l25.37"></a>
<span id="l25.38" class="minusline">-    // NOTE: these next three variables are currently unused.</span><a href="#l25.38"></a>
<span id="l25.39" class="plusline">+    // NOTE: these next five variables are currently unused.</span><a href="#l25.39"></a>
<span id="l25.40">     protected static Color thumbColor;</span><a href="#l25.40"></a>
<span id="l25.41">     protected static Color highlightColor;</span><a href="#l25.41"></a>
<span id="l25.42">     protected static Color darkShadowColor;</span><a href="#l25.42"></a>
<span id="l25.43">     protected static int trackWidth;</span><a href="#l25.43"></a>
<span id="l25.44">     protected static int tickLength;</span><a href="#l25.44"></a>
<span id="l25.45" class="plusline">+    private int safeLength;</span><a href="#l25.45"></a>
<span id="l25.46"> </span><a href="#l25.46"></a>
<span id="l25.47">    /**</span><a href="#l25.47"></a>
<span id="l25.48">     * A default horizontal thumb &lt;code&gt;Icon&lt;/code&gt;. This field might not be</span><a href="#l25.48"></a>
<span id="l25.49" class="atline">@@ -117,7 +107,7 @@</span><a href="#l25.49"></a>
<span id="l25.50"> </span><a href="#l25.50"></a>
<span id="l25.51">     public void installUI( JComponent c ) {</span><a href="#l25.51"></a>
<span id="l25.52">         trackWidth = ((Integer)UIManager.get( &quot;Slider.trackWidth&quot; )).intValue();</span><a href="#l25.52"></a>
<span id="l25.53" class="minusline">-        tickLength = ((Integer)UIManager.get( &quot;Slider.majorTickLength&quot; )).intValue();</span><a href="#l25.53"></a>
<span id="l25.54" class="plusline">+        tickLength = safeLength = ((Integer)UIManager.get( &quot;Slider.majorTickLength&quot; )).intValue();</span><a href="#l25.54"></a>
<span id="l25.55">         horizThumbIcon = SAFE_HORIZ_THUMB_ICON =</span><a href="#l25.55"></a>
<span id="l25.56">                 UIManager.getIcon( &quot;Slider.horizontalThumbIcon&quot; );</span><a href="#l25.56"></a>
<span id="l25.57">         vertThumbIcon = SAFE_VERT_THUMB_ICON =</span><a href="#l25.57"></a>
<span id="l25.58" class="atline">@@ -465,8 +455,8 @@</span><a href="#l25.58"></a>
<span id="l25.59">      * determine the tick area rectangle.</span><a href="#l25.59"></a>
<span id="l25.60">      */</span><a href="#l25.60"></a>
<span id="l25.61">     public int getTickLength() {</span><a href="#l25.61"></a>
<span id="l25.62" class="minusline">-        return slider.getOrientation() == JSlider.HORIZONTAL ? tickLength + TICK_BUFFER + 1 :</span><a href="#l25.62"></a>
<span id="l25.63" class="minusline">-        tickLength + TICK_BUFFER + 3;</span><a href="#l25.63"></a>
<span id="l25.64" class="plusline">+        return slider.getOrientation() == JSlider.HORIZONTAL ? safeLength + TICK_BUFFER + 1 :</span><a href="#l25.64"></a>
<span id="l25.65" class="plusline">+        safeLength + TICK_BUFFER + 3;</span><a href="#l25.65"></a>
<span id="l25.66">     }</span><a href="#l25.66"></a>
<span id="l25.67"> </span><a href="#l25.67"></a>
<span id="l25.68">     /**</span><a href="#l25.68"></a>
<span id="l25.69" class="atline">@@ -511,22 +501,22 @@</span><a href="#l25.69"></a>
<span id="l25.70"> </span><a href="#l25.70"></a>
<span id="l25.71">     protected void paintMinorTickForHorizSlider( Graphics g, Rectangle tickBounds, int x ) {</span><a href="#l25.71"></a>
<span id="l25.72">         g.setColor( slider.isEnabled() ? slider.getForeground() : MetalLookAndFeel.getControlShadow() );</span><a href="#l25.72"></a>
<span id="l25.73" class="minusline">-        g.drawLine( x, TICK_BUFFER, x, TICK_BUFFER + (tickLength / 2) );</span><a href="#l25.73"></a>
<span id="l25.74" class="plusline">+        g.drawLine( x, TICK_BUFFER, x, TICK_BUFFER + (safeLength / 2) );</span><a href="#l25.74"></a>
<span id="l25.75">     }</span><a href="#l25.75"></a>
<span id="l25.76"> </span><a href="#l25.76"></a>
<span id="l25.77">     protected void paintMajorTickForHorizSlider( Graphics g, Rectangle tickBounds, int x ) {</span><a href="#l25.77"></a>
<span id="l25.78">         g.setColor( slider.isEnabled() ? slider.getForeground() : MetalLookAndFeel.getControlShadow() );</span><a href="#l25.78"></a>
<span id="l25.79" class="minusline">-        g.drawLine( x, TICK_BUFFER , x, TICK_BUFFER + (tickLength - 1) );</span><a href="#l25.79"></a>
<span id="l25.80" class="plusline">+        g.drawLine( x, TICK_BUFFER , x, TICK_BUFFER + (safeLength - 1) );</span><a href="#l25.80"></a>
<span id="l25.81">     }</span><a href="#l25.81"></a>
<span id="l25.82"> </span><a href="#l25.82"></a>
<span id="l25.83">     protected void paintMinorTickForVertSlider( Graphics g, Rectangle tickBounds, int y ) {</span><a href="#l25.83"></a>
<span id="l25.84">         g.setColor( slider.isEnabled() ? slider.getForeground() : MetalLookAndFeel.getControlShadow() );</span><a href="#l25.84"></a>
<span id="l25.85"> </span><a href="#l25.85"></a>
<span id="l25.86">         if (MetalUtils.isLeftToRight(slider)) {</span><a href="#l25.86"></a>
<span id="l25.87" class="minusline">-            g.drawLine( TICK_BUFFER, y, TICK_BUFFER + (tickLength / 2), y );</span><a href="#l25.87"></a>
<span id="l25.88" class="plusline">+            g.drawLine( TICK_BUFFER, y, TICK_BUFFER + (safeLength / 2), y );</span><a href="#l25.88"></a>
<span id="l25.89">         }</span><a href="#l25.89"></a>
<span id="l25.90">         else {</span><a href="#l25.90"></a>
<span id="l25.91" class="minusline">-            g.drawLine( 0, y, tickLength/2, y );</span><a href="#l25.91"></a>
<span id="l25.92" class="plusline">+            g.drawLine( 0, y, safeLength/2, y );</span><a href="#l25.92"></a>
<span id="l25.93">         }</span><a href="#l25.93"></a>
<span id="l25.94">     }</span><a href="#l25.94"></a>
<span id="l25.95"> </span><a href="#l25.95"></a>
<span id="l25.96" class="atline">@@ -534,10 +524,10 @@</span><a href="#l25.96"></a>
<span id="l25.97">         g.setColor( slider.isEnabled() ? slider.getForeground() : MetalLookAndFeel.getControlShadow() );</span><a href="#l25.97"></a>
<span id="l25.98"> </span><a href="#l25.98"></a>
<span id="l25.99">         if (MetalUtils.isLeftToRight(slider)) {</span><a href="#l25.99"></a>
<span id="l25.100" class="minusline">-            g.drawLine( TICK_BUFFER, y, TICK_BUFFER + tickLength, y );</span><a href="#l25.100"></a>
<span id="l25.101" class="plusline">+            g.drawLine( TICK_BUFFER, y, TICK_BUFFER + safeLength, y );</span><a href="#l25.101"></a>
<span id="l25.102">         }</span><a href="#l25.102"></a>
<span id="l25.103">         else {</span><a href="#l25.103"></a>
<span id="l25.104" class="minusline">-            g.drawLine( 0, y, tickLength, y );</span><a href="#l25.104"></a>
<span id="l25.105" class="plusline">+            g.drawLine( 0, y, safeLength, y );</span><a href="#l25.105"></a>
<span id="l25.106">         }</span><a href="#l25.106"></a>
<span id="l25.107">     }</span><a href="#l25.107"></a>
<span id="l25.108"> }</span><a href="#l25.108"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l26.1" class="minusline">--- a/src/share/classes/javax/swing/plaf/synth/ImagePainter.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l26.1"></a>
<span id="l26.2" class="plusline">+++ b/src/share/classes/javax/swing/plaf/synth/ImagePainter.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l26.2"></a>
<span id="l26.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l26.3"></a>
<span id="l26.4"> /*</span><a href="#l26.4"></a>
<span id="l26.5" class="minusline">- * Copyright 2002-2005 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l26.5"></a>
<span id="l26.6" class="plusline">+ * Copyright 2002-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l26.6"></a>
<span id="l26.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l26.7"></a>
<span id="l26.8">  *</span><a href="#l26.8"></a>
<span id="l26.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l26.9"></a>
<span id="l26.10" class="atline">@@ -41,8 +41,7 @@</span><a href="#l26.10"></a>
<span id="l26.11">  * @author Scott Violet</span><a href="#l26.11"></a>
<span id="l26.12">  */</span><a href="#l26.12"></a>
<span id="l26.13"> class ImagePainter extends SynthPainter {</span><a href="#l26.13"></a>
<span id="l26.14" class="minusline">-    private static final StringBuffer CACHE_KEY =</span><a href="#l26.14"></a>
<span id="l26.15" class="minusline">-                               new StringBuffer(&quot;SynthCacheKey&quot;);</span><a href="#l26.15"></a>
<span id="l26.16" class="plusline">+    private static final Object CACHE_KEY = new Object(); // SynthCacheKey</span><a href="#l26.16"></a>
<span id="l26.17"> </span><a href="#l26.17"></a>
<span id="l26.18">     private Image image;</span><a href="#l26.18"></a>
<span id="l26.19">     private Insets sInsets;</span><a href="#l26.19"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l27.1" class="minusline">--- a/src/share/classes/javax/swing/plaf/synth/SynthLookAndFeel.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l27.1"></a>
<span id="l27.2" class="plusline">+++ b/src/share/classes/javax/swing/plaf/synth/SynthLookAndFeel.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l27.2"></a>
<span id="l27.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l27.3"></a>
<span id="l27.4"> /*</span><a href="#l27.4"></a>
<span id="l27.5" class="minusline">- * Copyright 2002-2006 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l27.5"></a>
<span id="l27.6" class="plusline">+ * Copyright 2002-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l27.6"></a>
<span id="l27.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l27.7"></a>
<span id="l27.8">  *</span><a href="#l27.8"></a>
<span id="l27.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l27.9"></a>
<span id="l27.10" class="atline">@@ -73,8 +73,7 @@</span><a href="#l27.10"></a>
<span id="l27.11">     /**</span><a href="#l27.11"></a>
<span id="l27.12">      * AppContext key to get the current SynthStyleFactory.</span><a href="#l27.12"></a>
<span id="l27.13">      */</span><a href="#l27.13"></a>
<span id="l27.14" class="minusline">-    private static final Object STYLE_FACTORY_KEY =</span><a href="#l27.14"></a>
<span id="l27.15" class="minusline">-                  new StringBuffer(&quot;com.sun.java.swing.plaf.gtk.StyleCache&quot;);</span><a href="#l27.15"></a>
<span id="l27.16" class="plusline">+    private static final Object STYLE_FACTORY_KEY = new Object(); // com.sun.java.swing.plaf.gtk.StyleCache</span><a href="#l27.16"></a>
<span id="l27.17"> </span><a href="#l27.17"></a>
<span id="l27.18">     /**</span><a href="#l27.18"></a>
<span id="l27.19">      * The last SynthStyleFactory that was asked for from AppContext</span><a href="#l27.19"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l28.1" class="minusline">--- a/src/share/classes/javax/swing/text/JTextComponent.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l28.1"></a>
<span id="l28.2" class="plusline">+++ b/src/share/classes/javax/swing/text/JTextComponent.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l28.2"></a>
<span id="l28.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l28.3"></a>
<span id="l28.4"> /*</span><a href="#l28.4"></a>
<span id="l28.5" class="minusline">- * Copyright 1997-2006 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l28.5"></a>
<span id="l28.6" class="plusline">+ * Copyright 1997-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l28.6"></a>
<span id="l28.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l28.7"></a>
<span id="l28.8">  *</span><a href="#l28.8"></a>
<span id="l28.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l28.9"></a>
<span id="l28.10" class="atline">@@ -34,10 +34,7 @@</span><a href="#l28.10"></a>
<span id="l28.11"> import java.util.Hashtable;</span><a href="#l28.11"></a>
<span id="l28.12"> import java.util.Enumeration;</span><a href="#l28.12"></a>
<span id="l28.13"> import java.util.Vector;</span><a href="#l28.13"></a>
<span id="l28.14" class="minusline">-import java.util.Iterator;</span><a href="#l28.14"></a>
<span id="l28.15"> import java.util.Map;</span><a href="#l28.15"></a>
<span id="l28.16" class="minusline">-import java.util.Map.Entry;</span><a href="#l28.16"></a>
<span id="l28.17" class="minusline">-import java.util.Set;</span><a href="#l28.17"></a>
<span id="l28.18"> </span><a href="#l28.18"></a>
<span id="l28.19"> import java.util.concurrent.*;</span><a href="#l28.19"></a>
<span id="l28.20"> </span><a href="#l28.20"></a>
<span id="l28.21" class="atline">@@ -4041,8 +4038,7 @@</span><a href="#l28.21"></a>
<span id="l28.22">         return modifiers;</span><a href="#l28.22"></a>
<span id="l28.23">     }</span><a href="#l28.23"></a>
<span id="l28.24"> </span><a href="#l28.24"></a>
<span id="l28.25" class="minusline">-    private static final Object KEYMAP_TABLE =</span><a href="#l28.25"></a>
<span id="l28.26" class="minusline">-        new StringBuilder(&quot;JTextComponent_KeymapTable&quot;);</span><a href="#l28.26"></a>
<span id="l28.27" class="plusline">+    private static final Object KEYMAP_TABLE = new Object(); // JTextComponent_KeymapTable</span><a href="#l28.27"></a>
<span id="l28.28">     private JTextComponent editor;</span><a href="#l28.28"></a>
<span id="l28.29">     //</span><a href="#l28.29"></a>
<span id="l28.30">     // member variables used for on-the-spot input method</span><a href="#l28.30"></a>
<span id="l28.31" class="atline">@@ -4376,8 +4372,7 @@</span><a href="#l28.31"></a>
<span id="l28.32">         }</span><a href="#l28.32"></a>
<span id="l28.33">     }</span><a href="#l28.33"></a>
<span id="l28.34"> </span><a href="#l28.34"></a>
<span id="l28.35" class="minusline">-    private static final Object FOCUSED_COMPONENT =</span><a href="#l28.35"></a>
<span id="l28.36" class="minusline">-        new StringBuilder(&quot;JTextComponent_FocusedComponent&quot;);</span><a href="#l28.36"></a>
<span id="l28.37" class="plusline">+    private static final Object FOCUSED_COMPONENT = new Object(); // JTextComponent_FocusedComponent</span><a href="#l28.37"></a>
<span id="l28.38"> </span><a href="#l28.38"></a>
<span id="l28.39">     /**</span><a href="#l28.39"></a>
<span id="l28.40">      * The default keymap that will be shared by all</span><a href="#l28.40"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l29.1" class="minusline">--- a/src/share/classes/sun/swing/DefaultLookup.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l29.1"></a>
<span id="l29.2" class="plusline">+++ b/src/share/classes/sun/swing/DefaultLookup.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l29.2"></a>
<span id="l29.3" class="atline">@@ -46,8 +46,7 @@</span><a href="#l29.3"></a>
<span id="l29.4">     /**</span><a href="#l29.4"></a>
<span id="l29.5">      * Key used to store DefaultLookup for AppContext.</span><a href="#l29.5"></a>
<span id="l29.6">      */</span><a href="#l29.6"></a>
<span id="l29.7" class="minusline">-    private static final Object DEFAULT_LOOKUP_KEY = new</span><a href="#l29.7"></a>
<span id="l29.8" class="minusline">-                                        StringBuffer(&quot;DefaultLookup&quot;);</span><a href="#l29.8"></a>
<span id="l29.9" class="plusline">+    private static final Object DEFAULT_LOOKUP_KEY = new Object(); // DefaultLookup</span><a href="#l29.9"></a>
<span id="l29.10">     /**</span><a href="#l29.10"></a>
<span id="l29.11">      * Thread that last asked for a default.</span><a href="#l29.11"></a>
<span id="l29.12">      */</span><a href="#l29.12"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l30.1" class="minusline">--- a/src/share/classes/sun/swing/SwingUtilities2.java	Sat Sep 05 07:56:10 2009 -0700</span><a href="#l30.1"></a>
<span id="l30.2" class="plusline">+++ b/src/share/classes/sun/swing/SwingUtilities2.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l30.2"></a>
<span id="l30.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l30.3"></a>
<span id="l30.4"> /*</span><a href="#l30.4"></a>
<span id="l30.5" class="minusline">- * Copyright 2002-2007 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l30.5"></a>
<span id="l30.6" class="plusline">+ * Copyright 2002-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l30.6"></a>
<span id="l30.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l30.7"></a>
<span id="l30.8">  *</span><a href="#l30.8"></a>
<span id="l30.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l30.9"></a>
<span id="l30.10" class="atline">@@ -32,25 +32,18 @@</span><a href="#l30.10"></a>
<span id="l30.11"> import static java.awt.RenderingHints.*;</span><a href="#l30.11"></a>
<span id="l30.12"> import java.awt.event.*;</span><a href="#l30.12"></a>
<span id="l30.13"> import java.awt.font.*;</span><a href="#l30.13"></a>
<span id="l30.14" class="minusline">-import java.awt.geom.*;</span><a href="#l30.14"></a>
<span id="l30.15"> import java.awt.print.PrinterGraphics;</span><a href="#l30.15"></a>
<span id="l30.16" class="minusline">-import java.text.Bidi;</span><a href="#l30.16"></a>
<span id="l30.17"> import java.text.AttributedCharacterIterator;</span><a href="#l30.17"></a>
<span id="l30.18"> import java.text.AttributedString;</span><a href="#l30.18"></a>
<span id="l30.19"> </span><a href="#l30.19"></a>
<span id="l30.20"> import javax.swing.*;</span><a href="#l30.20"></a>
<span id="l30.21" class="minusline">-import javax.swing.plaf.*;</span><a href="#l30.21"></a>
<span id="l30.22"> import javax.swing.text.Highlighter;</span><a href="#l30.22"></a>
<span id="l30.23"> import javax.swing.text.JTextComponent;</span><a href="#l30.23"></a>
<span id="l30.24"> import javax.swing.text.DefaultHighlighter;</span><a href="#l30.24"></a>
<span id="l30.25"> import javax.swing.text.DefaultCaret;</span><a href="#l30.25"></a>
<span id="l30.26"> import javax.swing.table.TableCellRenderer;</span><a href="#l30.26"></a>
<span id="l30.27" class="minusline">-import sun.swing.PrintColorUIResource;</span><a href="#l30.27"></a>
<span id="l30.28" class="minusline">-import sun.swing.ImageIconUIResource;</span><a href="#l30.28"></a>
<span id="l30.29"> import sun.print.ProxyPrintGraphics;</span><a href="#l30.29"></a>
<span id="l30.30"> import sun.awt.*;</span><a href="#l30.30"></a>
<span id="l30.31" class="minusline">-import sun.security.action.GetPropertyAction;</span><a href="#l30.31"></a>
<span id="l30.32" class="minusline">-import sun.security.util.SecurityConstants;</span><a href="#l30.32"></a>
<span id="l30.33"> import java.io.*;</span><a href="#l30.33"></a>
<span id="l30.34"> import java.util.*;</span><a href="#l30.34"></a>
<span id="l30.35"> import sun.font.FontDesignMetrics;</span><a href="#l30.35"></a>
<span id="l30.36" class="atline">@@ -74,8 +67,7 @@</span><a href="#l30.36"></a>
<span id="l30.37">      * The &lt;code&gt;AppContext&lt;/code&gt; key for our one &lt;code&gt;LAFState&lt;/code&gt;</span><a href="#l30.37"></a>
<span id="l30.38">      * instance.</span><a href="#l30.38"></a>
<span id="l30.39">      */</span><a href="#l30.39"></a>
<span id="l30.40" class="minusline">-    public static final Object LAF_STATE_KEY =</span><a href="#l30.40"></a>
<span id="l30.41" class="minusline">-            new StringBuffer(&quot;LookAndFeel State&quot;);</span><a href="#l30.41"></a>
<span id="l30.42" class="plusline">+    public static final Object LAF_STATE_KEY = new Object(); // LookAndFeel State</span><a href="#l30.42"></a>
<span id="l30.43"> </span><a href="#l30.43"></a>
<span id="l30.44">     // Most of applications use 10 or less fonts simultaneously</span><a href="#l30.44"></a>
<span id="l30.45">     private static final int STRONG_BEARING_CACHE_SIZE = 10;</span><a href="#l30.45"></a>
<span id="l30.46" class="atline">@@ -97,15 +89,13 @@</span><a href="#l30.46"></a>
<span id="l30.47">      * To avoid having this property persist between look and feels changes</span><a href="#l30.47"></a>
<span id="l30.48">      * the value of the property is set to null in JComponent.setUI</span><a href="#l30.48"></a>
<span id="l30.49">      */</span><a href="#l30.49"></a>
<span id="l30.50" class="minusline">-    public static final Object AA_TEXT_PROPERTY_KEY =</span><a href="#l30.50"></a>
<span id="l30.51" class="minusline">-                          new StringBuffer(&quot;AATextInfoPropertyKey&quot;);</span><a href="#l30.51"></a>
<span id="l30.52" class="plusline">+    public static final Object AA_TEXT_PROPERTY_KEY = new Object(); // AATextInfoPropertyKey</span><a href="#l30.52"></a>
<span id="l30.53"> </span><a href="#l30.53"></a>
<span id="l30.54">     /**</span><a href="#l30.54"></a>
<span id="l30.55">      * Used to tell a text component, being used as an editor for table</span><a href="#l30.55"></a>
<span id="l30.56">      * or tree, how many clicks it took to start editing.</span><a href="#l30.56"></a>
<span id="l30.57">      */</span><a href="#l30.57"></a>
<span id="l30.58" class="minusline">-    private static final StringBuilder SKIP_CLICK_COUNT =</span><a href="#l30.58"></a>
<span id="l30.59" class="minusline">-        new StringBuilder(&quot;skipClickCount&quot;);</span><a href="#l30.59"></a>
<span id="l30.60" class="plusline">+    private static final Object SKIP_CLICK_COUNT = new Object(); // skipClickCount</span><a href="#l30.60"></a>
<span id="l30.61"> </span><a href="#l30.61"></a>
<span id="l30.62">     /* Presently this class assumes default fractional metrics.</span><a href="#l30.62"></a>
<span id="l30.63">      * This may need to change to emulate future platform L&amp;Fs.</span><a href="#l30.63"></a>
<span id="l30.64" class="atline">@@ -165,8 +155,7 @@</span><a href="#l30.64"></a>
<span id="l30.65">      * Key used in client properties used to indicate that the</span><a href="#l30.65"></a>
<span id="l30.66">      * &lt;code&gt;ComponentUI&lt;/code&gt; of the JComponent instance should be returned.</span><a href="#l30.66"></a>
<span id="l30.67">      */</span><a href="#l30.67"></a>
<span id="l30.68" class="minusline">-    public static final Object COMPONENT_UI_PROPERTY_KEY =</span><a href="#l30.68"></a>
<span id="l30.69" class="minusline">-                            new StringBuffer(&quot;ComponentUIPropertyKey&quot;);</span><a href="#l30.69"></a>
<span id="l30.70" class="plusline">+    public static final Object COMPONENT_UI_PROPERTY_KEY = new Object(); // ComponentUIPropertyKey</span><a href="#l30.70"></a>
<span id="l30.71"> </span><a href="#l30.71"></a>
<span id="l30.72">     /** Client Property key for the text maximal offsets for BasicMenuItemUI */</span><a href="#l30.72"></a>
<span id="l30.73">     public static final StringUIClientPropertyKey BASICMENUITEMUI_MAX_TEXT_OFFSET =</span><a href="#l30.73"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l31.1" class="minusline">--- /dev/null	Thu Jan 01 00:00:00 1970 +0000</span><a href="#l31.1"></a>
<span id="l31.2" class="plusline">+++ b/test/javax/swing/ToolTipManager/Test6657026.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l31.2"></a>
<span id="l31.3" class="atline">@@ -0,0 +1,74 @@</span><a href="#l31.3"></a>
<span id="l31.4" class="plusline">+/*</span><a href="#l31.4"></a>
<span id="l31.5" class="plusline">+ * Copyright 2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l31.5"></a>
<span id="l31.6" class="plusline">+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l31.6"></a>
<span id="l31.7" class="plusline">+ *</span><a href="#l31.7"></a>
<span id="l31.8" class="plusline">+ * This code is free software; you can redistribute it and/or modify it</span><a href="#l31.8"></a>
<span id="l31.9" class="plusline">+ * under the terms of the GNU General Public License version 2 only, as</span><a href="#l31.9"></a>
<span id="l31.10" class="plusline">+ * published by the Free Software Foundation.</span><a href="#l31.10"></a>
<span id="l31.11" class="plusline">+ *</span><a href="#l31.11"></a>
<span id="l31.12" class="plusline">+ * This code is distributed in the hope that it will be useful, but WITHOUT</span><a href="#l31.12"></a>
<span id="l31.13" class="plusline">+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or</span><a href="#l31.13"></a>
<span id="l31.14" class="plusline">+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License</span><a href="#l31.14"></a>
<span id="l31.15" class="plusline">+ * version 2 for more details (a copy is included in the LICENSE file that</span><a href="#l31.15"></a>
<span id="l31.16" class="plusline">+ * accompanied this code).</span><a href="#l31.16"></a>
<span id="l31.17" class="plusline">+ *</span><a href="#l31.17"></a>
<span id="l31.18" class="plusline">+ * You should have received a copy of the GNU General Public License version</span><a href="#l31.18"></a>
<span id="l31.19" class="plusline">+ * 2 along with this work; if not, write to the Free Software Foundation,</span><a href="#l31.19"></a>
<span id="l31.20" class="plusline">+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.</span><a href="#l31.20"></a>
<span id="l31.21" class="plusline">+ *</span><a href="#l31.21"></a>
<span id="l31.22" class="plusline">+ * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,</span><a href="#l31.22"></a>
<span id="l31.23" class="plusline">+ * CA 95054 USA or visit www.sun.com if you need additional information or</span><a href="#l31.23"></a>
<span id="l31.24" class="plusline">+ * have any questions.</span><a href="#l31.24"></a>
<span id="l31.25" class="plusline">+ */</span><a href="#l31.25"></a>
<span id="l31.26" class="plusline">+</span><a href="#l31.26"></a>
<span id="l31.27" class="plusline">+/*</span><a href="#l31.27"></a>
<span id="l31.28" class="plusline">+ * @test</span><a href="#l31.28"></a>
<span id="l31.29" class="plusline">+ * @bug 6657026</span><a href="#l31.29"></a>
<span id="l31.30" class="plusline">+ * @summary Tests shared ToolTipManager in different application contexts</span><a href="#l31.30"></a>
<span id="l31.31" class="plusline">+ * @author Sergey Malenkov</span><a href="#l31.31"></a>
<span id="l31.32" class="plusline">+ */</span><a href="#l31.32"></a>
<span id="l31.33" class="plusline">+</span><a href="#l31.33"></a>
<span id="l31.34" class="plusline">+import sun.awt.SunToolkit;</span><a href="#l31.34"></a>
<span id="l31.35" class="plusline">+import javax.swing.ToolTipManager;</span><a href="#l31.35"></a>
<span id="l31.36" class="plusline">+</span><a href="#l31.36"></a>
<span id="l31.37" class="plusline">+public class Test6657026 implements Runnable {</span><a href="#l31.37"></a>
<span id="l31.38" class="plusline">+</span><a href="#l31.38"></a>
<span id="l31.39" class="plusline">+    private static final int DISMISS = 4000;</span><a href="#l31.39"></a>
<span id="l31.40" class="plusline">+    private static final int INITIAL = 750;</span><a href="#l31.40"></a>
<span id="l31.41" class="plusline">+    private static final int RESHOW = 500;</span><a href="#l31.41"></a>
<span id="l31.42" class="plusline">+</span><a href="#l31.42"></a>
<span id="l31.43" class="plusline">+    public static void main(String[] args) throws InterruptedException {</span><a href="#l31.43"></a>
<span id="l31.44" class="plusline">+        ToolTipManager manager = ToolTipManager.sharedInstance();</span><a href="#l31.44"></a>
<span id="l31.45" class="plusline">+        if (DISMISS != manager.getDismissDelay()) {</span><a href="#l31.45"></a>
<span id="l31.46" class="plusline">+            throw new Error(&quot;unexpected dismiss delay&quot;);</span><a href="#l31.46"></a>
<span id="l31.47" class="plusline">+        }</span><a href="#l31.47"></a>
<span id="l31.48" class="plusline">+        if (INITIAL != manager.getInitialDelay()) {</span><a href="#l31.48"></a>
<span id="l31.49" class="plusline">+            throw new Error(&quot;unexpected initial delay&quot;);</span><a href="#l31.49"></a>
<span id="l31.50" class="plusline">+        }</span><a href="#l31.50"></a>
<span id="l31.51" class="plusline">+        if (RESHOW != manager.getReshowDelay()) {</span><a href="#l31.51"></a>
<span id="l31.52" class="plusline">+            throw new Error(&quot;unexpected reshow delay&quot;);</span><a href="#l31.52"></a>
<span id="l31.53" class="plusline">+        }</span><a href="#l31.53"></a>
<span id="l31.54" class="plusline">+        manager.setDismissDelay(DISMISS + 1);</span><a href="#l31.54"></a>
<span id="l31.55" class="plusline">+        manager.setInitialDelay(INITIAL + 1);</span><a href="#l31.55"></a>
<span id="l31.56" class="plusline">+        manager.setReshowDelay(RESHOW + 1);</span><a href="#l31.56"></a>
<span id="l31.57" class="plusline">+</span><a href="#l31.57"></a>
<span id="l31.58" class="plusline">+        ThreadGroup group = new ThreadGroup(&quot;$$$&quot;);</span><a href="#l31.58"></a>
<span id="l31.59" class="plusline">+        Thread thread = new Thread(group, new Test6657026());</span><a href="#l31.59"></a>
<span id="l31.60" class="plusline">+        thread.start();</span><a href="#l31.60"></a>
<span id="l31.61" class="plusline">+        thread.join();</span><a href="#l31.61"></a>
<span id="l31.62" class="plusline">+    }</span><a href="#l31.62"></a>
<span id="l31.63" class="plusline">+</span><a href="#l31.63"></a>
<span id="l31.64" class="plusline">+    public void run() {</span><a href="#l31.64"></a>
<span id="l31.65" class="plusline">+        SunToolkit.createNewAppContext();</span><a href="#l31.65"></a>
<span id="l31.66" class="plusline">+        ToolTipManager manager = ToolTipManager.sharedInstance();</span><a href="#l31.66"></a>
<span id="l31.67" class="plusline">+        if (DISMISS != manager.getDismissDelay()) {</span><a href="#l31.67"></a>
<span id="l31.68" class="plusline">+            throw new Error(&quot;shared dismiss delay&quot;);</span><a href="#l31.68"></a>
<span id="l31.69" class="plusline">+        }</span><a href="#l31.69"></a>
<span id="l31.70" class="plusline">+        if (INITIAL != manager.getInitialDelay()) {</span><a href="#l31.70"></a>
<span id="l31.71" class="plusline">+            throw new Error(&quot;shared initial delay&quot;);</span><a href="#l31.71"></a>
<span id="l31.72" class="plusline">+        }</span><a href="#l31.72"></a>
<span id="l31.73" class="plusline">+        if (RESHOW != manager.getReshowDelay()) {</span><a href="#l31.73"></a>
<span id="l31.74" class="plusline">+            throw new Error(&quot;shared reshow delay&quot;);</span><a href="#l31.74"></a>
<span id="l31.75" class="plusline">+        }</span><a href="#l31.75"></a>
<span id="l31.76" class="plusline">+    }</span><a href="#l31.76"></a>
<span id="l31.77" class="plusline">+}</span><a href="#l31.77"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l32.1" class="minusline">--- /dev/null	Thu Jan 01 00:00:00 1970 +0000</span><a href="#l32.1"></a>
<span id="l32.2" class="plusline">+++ b/test/javax/swing/UIManager/Test6657026.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l32.2"></a>
<span id="l32.3" class="atline">@@ -0,0 +1,59 @@</span><a href="#l32.3"></a>
<span id="l32.4" class="plusline">+/*</span><a href="#l32.4"></a>
<span id="l32.5" class="plusline">+ * Copyright 2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l32.5"></a>
<span id="l32.6" class="plusline">+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l32.6"></a>
<span id="l32.7" class="plusline">+ *</span><a href="#l32.7"></a>
<span id="l32.8" class="plusline">+ * This code is free software; you can redistribute it and/or modify it</span><a href="#l32.8"></a>
<span id="l32.9" class="plusline">+ * under the terms of the GNU General Public License version 2 only, as</span><a href="#l32.9"></a>
<span id="l32.10" class="plusline">+ * published by the Free Software Foundation.</span><a href="#l32.10"></a>
<span id="l32.11" class="plusline">+ *</span><a href="#l32.11"></a>
<span id="l32.12" class="plusline">+ * This code is distributed in the hope that it will be useful, but WITHOUT</span><a href="#l32.12"></a>
<span id="l32.13" class="plusline">+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or</span><a href="#l32.13"></a>
<span id="l32.14" class="plusline">+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License</span><a href="#l32.14"></a>
<span id="l32.15" class="plusline">+ * version 2 for more details (a copy is included in the LICENSE file that</span><a href="#l32.15"></a>
<span id="l32.16" class="plusline">+ * accompanied this code).</span><a href="#l32.16"></a>
<span id="l32.17" class="plusline">+ *</span><a href="#l32.17"></a>
<span id="l32.18" class="plusline">+ * You should have received a copy of the GNU General Public License version</span><a href="#l32.18"></a>
<span id="l32.19" class="plusline">+ * 2 along with this work; if not, write to the Free Software Foundation,</span><a href="#l32.19"></a>
<span id="l32.20" class="plusline">+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.</span><a href="#l32.20"></a>
<span id="l32.21" class="plusline">+ *</span><a href="#l32.21"></a>
<span id="l32.22" class="plusline">+ * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,</span><a href="#l32.22"></a>
<span id="l32.23" class="plusline">+ * CA 95054 USA or visit www.sun.com if you need additional information or</span><a href="#l32.23"></a>
<span id="l32.24" class="plusline">+ * have any questions.</span><a href="#l32.24"></a>
<span id="l32.25" class="plusline">+ */</span><a href="#l32.25"></a>
<span id="l32.26" class="plusline">+</span><a href="#l32.26"></a>
<span id="l32.27" class="plusline">+/*</span><a href="#l32.27"></a>
<span id="l32.28" class="plusline">+ * @test</span><a href="#l32.28"></a>
<span id="l32.29" class="plusline">+ * @bug 6657026</span><a href="#l32.29"></a>
<span id="l32.30" class="plusline">+ * @summary Tests shared UIManager in different application contexts</span><a href="#l32.30"></a>
<span id="l32.31" class="plusline">+ * @author Sergey Malenkov</span><a href="#l32.31"></a>
<span id="l32.32" class="plusline">+ */</span><a href="#l32.32"></a>
<span id="l32.33" class="plusline">+</span><a href="#l32.33"></a>
<span id="l32.34" class="plusline">+import sun.awt.SunToolkit;</span><a href="#l32.34"></a>
<span id="l32.35" class="plusline">+</span><a href="#l32.35"></a>
<span id="l32.36" class="plusline">+import javax.swing.UIManager;</span><a href="#l32.36"></a>
<span id="l32.37" class="plusline">+import javax.swing.UIManager.LookAndFeelInfo;</span><a href="#l32.37"></a>
<span id="l32.38" class="plusline">+</span><a href="#l32.38"></a>
<span id="l32.39" class="plusline">+public class Test6657026 implements Runnable {</span><a href="#l32.39"></a>
<span id="l32.40" class="plusline">+</span><a href="#l32.40"></a>
<span id="l32.41" class="plusline">+    public static void main(String[] args) throws Exception {</span><a href="#l32.41"></a>
<span id="l32.42" class="plusline">+        if (UIManager.getInstalledLookAndFeels().length == 0) {</span><a href="#l32.42"></a>
<span id="l32.43" class="plusline">+            throw new Error(&quot;unexpected amount of look&amp;feels&quot;);</span><a href="#l32.43"></a>
<span id="l32.44" class="plusline">+        }</span><a href="#l32.44"></a>
<span id="l32.45" class="plusline">+        UIManager.setInstalledLookAndFeels(new LookAndFeelInfo[0]);</span><a href="#l32.45"></a>
<span id="l32.46" class="plusline">+        if (UIManager.getInstalledLookAndFeels().length != 0) {</span><a href="#l32.46"></a>
<span id="l32.47" class="plusline">+            throw new Error(&quot;unexpected amount of look&amp;feels&quot;);</span><a href="#l32.47"></a>
<span id="l32.48" class="plusline">+        }</span><a href="#l32.48"></a>
<span id="l32.49" class="plusline">+</span><a href="#l32.49"></a>
<span id="l32.50" class="plusline">+        ThreadGroup group = new ThreadGroup(&quot;$$$&quot;);</span><a href="#l32.50"></a>
<span id="l32.51" class="plusline">+        Thread thread = new Thread(group, new Test6657026());</span><a href="#l32.51"></a>
<span id="l32.52" class="plusline">+        thread.start();</span><a href="#l32.52"></a>
<span id="l32.53" class="plusline">+        thread.join();</span><a href="#l32.53"></a>
<span id="l32.54" class="plusline">+    }</span><a href="#l32.54"></a>
<span id="l32.55" class="plusline">+</span><a href="#l32.55"></a>
<span id="l32.56" class="plusline">+    public void run() {</span><a href="#l32.56"></a>
<span id="l32.57" class="plusline">+        SunToolkit.createNewAppContext();</span><a href="#l32.57"></a>
<span id="l32.58" class="plusline">+        if (UIManager.getInstalledLookAndFeels().length == 0) {</span><a href="#l32.58"></a>
<span id="l32.59" class="plusline">+            throw new Error(&quot;shared look&amp;feels&quot;);</span><a href="#l32.59"></a>
<span id="l32.60" class="plusline">+        }</span><a href="#l32.60"></a>
<span id="l32.61" class="plusline">+    }</span><a href="#l32.61"></a>
<span id="l32.62" class="plusline">+}</span><a href="#l32.62"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l33.1" class="minusline">--- /dev/null	Thu Jan 01 00:00:00 1970 +0000</span><a href="#l33.1"></a>
<span id="l33.2" class="plusline">+++ b/test/javax/swing/plaf/basic/BasicSplitPaneUI/Test6657026.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l33.2"></a>
<span id="l33.3" class="atline">@@ -0,0 +1,82 @@</span><a href="#l33.3"></a>
<span id="l33.4" class="plusline">+/*</span><a href="#l33.4"></a>
<span id="l33.5" class="plusline">+ * Copyright 2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l33.5"></a>
<span id="l33.6" class="plusline">+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l33.6"></a>
<span id="l33.7" class="plusline">+ *</span><a href="#l33.7"></a>
<span id="l33.8" class="plusline">+ * This code is free software; you can redistribute it and/or modify it</span><a href="#l33.8"></a>
<span id="l33.9" class="plusline">+ * under the terms of the GNU General Public License version 2 only, as</span><a href="#l33.9"></a>
<span id="l33.10" class="plusline">+ * published by the Free Software Foundation.</span><a href="#l33.10"></a>
<span id="l33.11" class="plusline">+ *</span><a href="#l33.11"></a>
<span id="l33.12" class="plusline">+ * This code is distributed in the hope that it will be useful, but WITHOUT</span><a href="#l33.12"></a>
<span id="l33.13" class="plusline">+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or</span><a href="#l33.13"></a>
<span id="l33.14" class="plusline">+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License</span><a href="#l33.14"></a>
<span id="l33.15" class="plusline">+ * version 2 for more details (a copy is included in the LICENSE file that</span><a href="#l33.15"></a>
<span id="l33.16" class="plusline">+ * accompanied this code).</span><a href="#l33.16"></a>
<span id="l33.17" class="plusline">+ *</span><a href="#l33.17"></a>
<span id="l33.18" class="plusline">+ * You should have received a copy of the GNU General Public License version</span><a href="#l33.18"></a>
<span id="l33.19" class="plusline">+ * 2 along with this work; if not, write to the Free Software Foundation,</span><a href="#l33.19"></a>
<span id="l33.20" class="plusline">+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.</span><a href="#l33.20"></a>
<span id="l33.21" class="plusline">+ *</span><a href="#l33.21"></a>
<span id="l33.22" class="plusline">+ * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,</span><a href="#l33.22"></a>
<span id="l33.23" class="plusline">+ * CA 95054 USA or visit www.sun.com if you need additional information or</span><a href="#l33.23"></a>
<span id="l33.24" class="plusline">+ * have any questions.</span><a href="#l33.24"></a>
<span id="l33.25" class="plusline">+ */</span><a href="#l33.25"></a>
<span id="l33.26" class="plusline">+</span><a href="#l33.26"></a>
<span id="l33.27" class="plusline">+/*</span><a href="#l33.27"></a>
<span id="l33.28" class="plusline">+ * @test</span><a href="#l33.28"></a>
<span id="l33.29" class="plusline">+ * @bug 6657026</span><a href="#l33.29"></a>
<span id="l33.30" class="plusline">+ * @summary Tests shared BasicSplitPaneUI in different application contexts</span><a href="#l33.30"></a>
<span id="l33.31" class="plusline">+ * @author Sergey Malenkov</span><a href="#l33.31"></a>
<span id="l33.32" class="plusline">+ */</span><a href="#l33.32"></a>
<span id="l33.33" class="plusline">+</span><a href="#l33.33"></a>
<span id="l33.34" class="plusline">+import sun.awt.SunToolkit;</span><a href="#l33.34"></a>
<span id="l33.35" class="plusline">+</span><a href="#l33.35"></a>
<span id="l33.36" class="plusline">+import java.awt.event.ActionEvent;</span><a href="#l33.36"></a>
<span id="l33.37" class="plusline">+import java.util.Set;</span><a href="#l33.37"></a>
<span id="l33.38" class="plusline">+import javax.swing.JSplitPane;</span><a href="#l33.38"></a>
<span id="l33.39" class="plusline">+import javax.swing.plaf.basic.BasicSplitPaneUI;</span><a href="#l33.39"></a>
<span id="l33.40" class="plusline">+</span><a href="#l33.40"></a>
<span id="l33.41" class="plusline">+public class Test6657026 extends BasicSplitPaneUI implements Runnable {</span><a href="#l33.41"></a>
<span id="l33.42" class="plusline">+</span><a href="#l33.42"></a>
<span id="l33.43" class="plusline">+    public static void main(String[] args) throws InterruptedException {</span><a href="#l33.43"></a>
<span id="l33.44" class="plusline">+        if (new JSplitPane().getFocusTraversalKeys(0).isEmpty()){</span><a href="#l33.44"></a>
<span id="l33.45" class="plusline">+            throw new Error(&quot;unexpected traversal keys&quot;);</span><a href="#l33.45"></a>
<span id="l33.46" class="plusline">+        }</span><a href="#l33.46"></a>
<span id="l33.47" class="plusline">+        new JSplitPane() {</span><a href="#l33.47"></a>
<span id="l33.48" class="plusline">+            public void setFocusTraversalKeys(int id, Set keystrokes) {</span><a href="#l33.48"></a>
<span id="l33.49" class="plusline">+                keystrokes.clear();</span><a href="#l33.49"></a>
<span id="l33.50" class="plusline">+                super.setFocusTraversalKeys(id, keystrokes);</span><a href="#l33.50"></a>
<span id="l33.51" class="plusline">+            }</span><a href="#l33.51"></a>
<span id="l33.52" class="plusline">+        };</span><a href="#l33.52"></a>
<span id="l33.53" class="plusline">+        if (new JSplitPane().getFocusTraversalKeys(0).isEmpty()) {</span><a href="#l33.53"></a>
<span id="l33.54" class="plusline">+            throw new Error(&quot;shared traversal keys&quot;);</span><a href="#l33.54"></a>
<span id="l33.55" class="plusline">+        }</span><a href="#l33.55"></a>
<span id="l33.56" class="plusline">+        KEYBOARD_DIVIDER_MOVE_OFFSET = -KEYBOARD_DIVIDER_MOVE_OFFSET;</span><a href="#l33.56"></a>
<span id="l33.57" class="plusline">+</span><a href="#l33.57"></a>
<span id="l33.58" class="plusline">+        ThreadGroup group = new ThreadGroup(&quot;$$$&quot;);</span><a href="#l33.58"></a>
<span id="l33.59" class="plusline">+        Thread thread = new Thread(group, new Test6657026());</span><a href="#l33.59"></a>
<span id="l33.60" class="plusline">+        thread.start();</span><a href="#l33.60"></a>
<span id="l33.61" class="plusline">+        thread.join();</span><a href="#l33.61"></a>
<span id="l33.62" class="plusline">+    }</span><a href="#l33.62"></a>
<span id="l33.63" class="plusline">+</span><a href="#l33.63"></a>
<span id="l33.64" class="plusline">+    public void run() {</span><a href="#l33.64"></a>
<span id="l33.65" class="plusline">+        SunToolkit.createNewAppContext();</span><a href="#l33.65"></a>
<span id="l33.66" class="plusline">+        if (new JSplitPane().getFocusTraversalKeys(0).isEmpty()) {</span><a href="#l33.66"></a>
<span id="l33.67" class="plusline">+            throw new Error(&quot;shared traversal keys&quot;);</span><a href="#l33.67"></a>
<span id="l33.68" class="plusline">+        }</span><a href="#l33.68"></a>
<span id="l33.69" class="plusline">+        JSplitPane pane = new JSplitPane();</span><a href="#l33.69"></a>
<span id="l33.70" class="plusline">+        pane.setUI(this);</span><a href="#l33.70"></a>
<span id="l33.71" class="plusline">+</span><a href="#l33.71"></a>
<span id="l33.72" class="plusline">+        createFocusListener().focusGained(null); // allows actions</span><a href="#l33.72"></a>
<span id="l33.73" class="plusline">+        test(pane, &quot;positiveIncrement&quot;, 3);</span><a href="#l33.73"></a>
<span id="l33.74" class="plusline">+        test(pane, &quot;negativeIncrement&quot;, 0);</span><a href="#l33.74"></a>
<span id="l33.75" class="plusline">+    }</span><a href="#l33.75"></a>
<span id="l33.76" class="plusline">+</span><a href="#l33.76"></a>
<span id="l33.77" class="plusline">+    private static void test(JSplitPane pane, String action, int expected) {</span><a href="#l33.77"></a>
<span id="l33.78" class="plusline">+        ActionEvent event = new ActionEvent(pane, expected, action);</span><a href="#l33.78"></a>
<span id="l33.79" class="plusline">+        pane.getActionMap().get(action).actionPerformed(event);</span><a href="#l33.79"></a>
<span id="l33.80" class="plusline">+        int actual = pane.getDividerLocation();</span><a href="#l33.80"></a>
<span id="l33.81" class="plusline">+        if (actual != expected) {</span><a href="#l33.81"></a>
<span id="l33.82" class="plusline">+            throw new Error(actual + &quot;, but expected &quot; + expected);</span><a href="#l33.82"></a>
<span id="l33.83" class="plusline">+        }</span><a href="#l33.83"></a>
<span id="l33.84" class="plusline">+    }</span><a href="#l33.84"></a>
<span id="l33.85" class="plusline">+}</span><a href="#l33.85"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l34.1" class="minusline">--- /dev/null	Thu Jan 01 00:00:00 1970 +0000</span><a href="#l34.1"></a>
<span id="l34.2" class="plusline">+++ b/test/javax/swing/plaf/metal/MetalBorders/Test6657026.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l34.2"></a>
<span id="l34.3" class="atline">@@ -0,0 +1,91 @@</span><a href="#l34.3"></a>
<span id="l34.4" class="plusline">+/*</span><a href="#l34.4"></a>
<span id="l34.5" class="plusline">+ * Copyright 2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l34.5"></a>
<span id="l34.6" class="plusline">+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l34.6"></a>
<span id="l34.7" class="plusline">+ *</span><a href="#l34.7"></a>
<span id="l34.8" class="plusline">+ * This code is free software; you can redistribute it and/or modify it</span><a href="#l34.8"></a>
<span id="l34.9" class="plusline">+ * under the terms of the GNU General Public License version 2 only, as</span><a href="#l34.9"></a>
<span id="l34.10" class="plusline">+ * published by the Free Software Foundation.</span><a href="#l34.10"></a>
<span id="l34.11" class="plusline">+ *</span><a href="#l34.11"></a>
<span id="l34.12" class="plusline">+ * This code is distributed in the hope that it will be useful, but WITHOUT</span><a href="#l34.12"></a>
<span id="l34.13" class="plusline">+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or</span><a href="#l34.13"></a>
<span id="l34.14" class="plusline">+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License</span><a href="#l34.14"></a>
<span id="l34.15" class="plusline">+ * version 2 for more details (a copy is included in the LICENSE file that</span><a href="#l34.15"></a>
<span id="l34.16" class="plusline">+ * accompanied this code).</span><a href="#l34.16"></a>
<span id="l34.17" class="plusline">+ *</span><a href="#l34.17"></a>
<span id="l34.18" class="plusline">+ * You should have received a copy of the GNU General Public License version</span><a href="#l34.18"></a>
<span id="l34.19" class="plusline">+ * 2 along with this work; if not, write to the Free Software Foundation,</span><a href="#l34.19"></a>
<span id="l34.20" class="plusline">+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.</span><a href="#l34.20"></a>
<span id="l34.21" class="plusline">+ *</span><a href="#l34.21"></a>
<span id="l34.22" class="plusline">+ * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,</span><a href="#l34.22"></a>
<span id="l34.23" class="plusline">+ * CA 95054 USA or visit www.sun.com if you need additional information or</span><a href="#l34.23"></a>
<span id="l34.24" class="plusline">+ * have any questions.</span><a href="#l34.24"></a>
<span id="l34.25" class="plusline">+ */</span><a href="#l34.25"></a>
<span id="l34.26" class="plusline">+</span><a href="#l34.26"></a>
<span id="l34.27" class="plusline">+/*</span><a href="#l34.27"></a>
<span id="l34.28" class="plusline">+ * @test</span><a href="#l34.28"></a>
<span id="l34.29" class="plusline">+ * @bug 6657026</span><a href="#l34.29"></a>
<span id="l34.30" class="plusline">+ * @summary Tests constancy of borders</span><a href="#l34.30"></a>
<span id="l34.31" class="plusline">+ * @author Sergey Malenkov</span><a href="#l34.31"></a>
<span id="l34.32" class="plusline">+ */</span><a href="#l34.32"></a>
<span id="l34.33" class="plusline">+</span><a href="#l34.33"></a>
<span id="l34.34" class="plusline">+import java.awt.Insets;</span><a href="#l34.34"></a>
<span id="l34.35" class="plusline">+import javax.swing.border.Border;</span><a href="#l34.35"></a>
<span id="l34.36" class="plusline">+import javax.swing.plaf.metal.MetalBorders.ButtonBorder;</span><a href="#l34.36"></a>
<span id="l34.37" class="plusline">+import javax.swing.plaf.metal.MetalBorders.MenuBarBorder;</span><a href="#l34.37"></a>
<span id="l34.38" class="plusline">+import javax.swing.plaf.metal.MetalBorders.MenuItemBorder;</span><a href="#l34.38"></a>
<span id="l34.39" class="plusline">+import javax.swing.plaf.metal.MetalBorders.PopupMenuBorder;</span><a href="#l34.39"></a>
<span id="l34.40" class="plusline">+</span><a href="#l34.40"></a>
<span id="l34.41" class="plusline">+public class Test6657026 {</span><a href="#l34.41"></a>
<span id="l34.42" class="plusline">+</span><a href="#l34.42"></a>
<span id="l34.43" class="plusline">+    private static final Insets NEGATIVE = new Insets(Integer.MIN_VALUE,</span><a href="#l34.43"></a>
<span id="l34.44" class="plusline">+                                                      Integer.MIN_VALUE,</span><a href="#l34.44"></a>
<span id="l34.45" class="plusline">+                                                      Integer.MIN_VALUE,</span><a href="#l34.45"></a>
<span id="l34.46" class="plusline">+                                                      Integer.MIN_VALUE);</span><a href="#l34.46"></a>
<span id="l34.47" class="plusline">+</span><a href="#l34.47"></a>
<span id="l34.48" class="plusline">+    public static void main(String[] args) {</span><a href="#l34.48"></a>
<span id="l34.49" class="plusline">+        new ButtonBorder() {{borderInsets = NEGATIVE;}};</span><a href="#l34.49"></a>
<span id="l34.50" class="plusline">+        new MenuBarBorder() {{borderInsets = NEGATIVE;}};</span><a href="#l34.50"></a>
<span id="l34.51" class="plusline">+        new MenuItemBorder() {{borderInsets = NEGATIVE;}};</span><a href="#l34.51"></a>
<span id="l34.52" class="plusline">+        new PopupMenuBorder() {{borderInsets = NEGATIVE;}};</span><a href="#l34.52"></a>
<span id="l34.53" class="plusline">+</span><a href="#l34.53"></a>
<span id="l34.54" class="plusline">+        test(create(&quot;ButtonBorder&quot;));</span><a href="#l34.54"></a>
<span id="l34.55" class="plusline">+        test(create(&quot;MenuBarBorder&quot;));</span><a href="#l34.55"></a>
<span id="l34.56" class="plusline">+        test(create(&quot;MenuItemBorder&quot;));</span><a href="#l34.56"></a>
<span id="l34.57" class="plusline">+        test(create(&quot;PopupMenuBorder&quot;));</span><a href="#l34.57"></a>
<span id="l34.58" class="plusline">+</span><a href="#l34.58"></a>
<span id="l34.59" class="plusline">+        test(create(&quot;Flush3DBorder&quot;));</span><a href="#l34.59"></a>
<span id="l34.60" class="plusline">+        test(create(&quot;InternalFrameBorder&quot;));</span><a href="#l34.60"></a>
<span id="l34.61" class="plusline">+        // NOT USED: test(create(&quot;FrameBorder&quot;));</span><a href="#l34.61"></a>
<span id="l34.62" class="plusline">+        // NOT USED: test(create(&quot;DialogBorder&quot;));</span><a href="#l34.62"></a>
<span id="l34.63" class="plusline">+        test(create(&quot;PaletteBorder&quot;));</span><a href="#l34.63"></a>
<span id="l34.64" class="plusline">+        test(create(&quot;OptionDialogBorder&quot;));</span><a href="#l34.64"></a>
<span id="l34.65" class="plusline">+        test(create(&quot;ScrollPaneBorder&quot;));</span><a href="#l34.65"></a>
<span id="l34.66" class="plusline">+    }</span><a href="#l34.66"></a>
<span id="l34.67" class="plusline">+</span><a href="#l34.67"></a>
<span id="l34.68" class="plusline">+    private static Border create(String name) {</span><a href="#l34.68"></a>
<span id="l34.69" class="plusline">+        try {</span><a href="#l34.69"></a>
<span id="l34.70" class="plusline">+            name = &quot;javax.swing.plaf.metal.MetalBorders$&quot; + name;</span><a href="#l34.70"></a>
<span id="l34.71" class="plusline">+            return (Border) Class.forName(name).newInstance();</span><a href="#l34.71"></a>
<span id="l34.72" class="plusline">+        }</span><a href="#l34.72"></a>
<span id="l34.73" class="plusline">+        catch (Exception exception) {</span><a href="#l34.73"></a>
<span id="l34.74" class="plusline">+            throw new Error(&quot;unexpected exception&quot;, exception);</span><a href="#l34.74"></a>
<span id="l34.75" class="plusline">+        }</span><a href="#l34.75"></a>
<span id="l34.76" class="plusline">+    }</span><a href="#l34.76"></a>
<span id="l34.77" class="plusline">+</span><a href="#l34.77"></a>
<span id="l34.78" class="plusline">+    private static void test(Border border) {</span><a href="#l34.78"></a>
<span id="l34.79" class="plusline">+        Insets actual = border.getBorderInsets(null);</span><a href="#l34.79"></a>
<span id="l34.80" class="plusline">+        if (NEGATIVE.equals(actual)) {</span><a href="#l34.80"></a>
<span id="l34.81" class="plusline">+            throw new Error(&quot;unexpected insets in &quot; + border.getClass());</span><a href="#l34.81"></a>
<span id="l34.82" class="plusline">+        }</span><a href="#l34.82"></a>
<span id="l34.83" class="plusline">+        Insets expected = (Insets) actual.clone();</span><a href="#l34.83"></a>
<span id="l34.84" class="plusline">+        // modify</span><a href="#l34.84"></a>
<span id="l34.85" class="plusline">+        actual.top++;</span><a href="#l34.85"></a>
<span id="l34.86" class="plusline">+        actual.left++;</span><a href="#l34.86"></a>
<span id="l34.87" class="plusline">+        actual.right++;</span><a href="#l34.87"></a>
<span id="l34.88" class="plusline">+        actual.bottom++;</span><a href="#l34.88"></a>
<span id="l34.89" class="plusline">+        // validate</span><a href="#l34.89"></a>
<span id="l34.90" class="plusline">+        if (!expected.equals(border.getBorderInsets(null))) {</span><a href="#l34.90"></a>
<span id="l34.91" class="plusline">+            throw new Error(&quot;shared insets in &quot; + border.getClass());</span><a href="#l34.91"></a>
<span id="l34.92" class="plusline">+        }</span><a href="#l34.92"></a>
<span id="l34.93" class="plusline">+    }</span><a href="#l34.93"></a>
<span id="l34.94" class="plusline">+}</span><a href="#l34.94"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l35.1" class="minusline">--- /dev/null	Thu Jan 01 00:00:00 1970 +0000</span><a href="#l35.1"></a>
<span id="l35.2" class="plusline">+++ b/test/javax/swing/plaf/metal/MetalBumps/Test6657026.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l35.2"></a>
<span id="l35.3" class="atline">@@ -0,0 +1,238 @@</span><a href="#l35.3"></a>
<span id="l35.4" class="plusline">+/*</span><a href="#l35.4"></a>
<span id="l35.5" class="plusline">+ * Copyright 2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l35.5"></a>
<span id="l35.6" class="plusline">+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l35.6"></a>
<span id="l35.7" class="plusline">+ *</span><a href="#l35.7"></a>
<span id="l35.8" class="plusline">+ * This code is free software; you can redistribute it and/or modify it</span><a href="#l35.8"></a>
<span id="l35.9" class="plusline">+ * under the terms of the GNU General Public License version 2 only, as</span><a href="#l35.9"></a>
<span id="l35.10" class="plusline">+ * published by the Free Software Foundation.</span><a href="#l35.10"></a>
<span id="l35.11" class="plusline">+ *</span><a href="#l35.11"></a>
<span id="l35.12" class="plusline">+ * This code is distributed in the hope that it will be useful, but WITHOUT</span><a href="#l35.12"></a>
<span id="l35.13" class="plusline">+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or</span><a href="#l35.13"></a>
<span id="l35.14" class="plusline">+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License</span><a href="#l35.14"></a>
<span id="l35.15" class="plusline">+ * version 2 for more details (a copy is included in the LICENSE file that</span><a href="#l35.15"></a>
<span id="l35.16" class="plusline">+ * accompanied this code).</span><a href="#l35.16"></a>
<span id="l35.17" class="plusline">+ *</span><a href="#l35.17"></a>
<span id="l35.18" class="plusline">+ * You should have received a copy of the GNU General Public License version</span><a href="#l35.18"></a>
<span id="l35.19" class="plusline">+ * 2 along with this work; if not, write to the Free Software Foundation,</span><a href="#l35.19"></a>
<span id="l35.20" class="plusline">+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.</span><a href="#l35.20"></a>
<span id="l35.21" class="plusline">+ *</span><a href="#l35.21"></a>
<span id="l35.22" class="plusline">+ * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,</span><a href="#l35.22"></a>
<span id="l35.23" class="plusline">+ * CA 95054 USA or visit www.sun.com if you need additional information or</span><a href="#l35.23"></a>
<span id="l35.24" class="plusline">+ * have any questions.</span><a href="#l35.24"></a>
<span id="l35.25" class="plusline">+ */</span><a href="#l35.25"></a>
<span id="l35.26" class="plusline">+</span><a href="#l35.26"></a>
<span id="l35.27" class="plusline">+/*</span><a href="#l35.27"></a>
<span id="l35.28" class="plusline">+ * @test</span><a href="#l35.28"></a>
<span id="l35.29" class="plusline">+ * @bug 6657026</span><a href="#l35.29"></a>
<span id="l35.30" class="plusline">+ * @summary Tests shared MetalBumps in different application contexts</span><a href="#l35.30"></a>
<span id="l35.31" class="plusline">+ * @author Sergey Malenkov</span><a href="#l35.31"></a>
<span id="l35.32" class="plusline">+ */</span><a href="#l35.32"></a>
<span id="l35.33" class="plusline">+</span><a href="#l35.33"></a>
<span id="l35.34" class="plusline">+import sun.awt.SunToolkit;</span><a href="#l35.34"></a>
<span id="l35.35" class="plusline">+</span><a href="#l35.35"></a>
<span id="l35.36" class="plusline">+import java.awt.Color;</span><a href="#l35.36"></a>
<span id="l35.37" class="plusline">+import java.awt.Component;</span><a href="#l35.37"></a>
<span id="l35.38" class="plusline">+import java.awt.Font;</span><a href="#l35.38"></a>
<span id="l35.39" class="plusline">+import java.awt.FontMetrics;</span><a href="#l35.39"></a>
<span id="l35.40" class="plusline">+import java.awt.Graphics;</span><a href="#l35.40"></a>
<span id="l35.41" class="plusline">+import java.awt.Image;</span><a href="#l35.41"></a>
<span id="l35.42" class="plusline">+import java.awt.Rectangle;</span><a href="#l35.42"></a>
<span id="l35.43" class="plusline">+import java.awt.Shape;</span><a href="#l35.43"></a>
<span id="l35.44" class="plusline">+import java.awt.image.BufferedImage;</span><a href="#l35.44"></a>
<span id="l35.45" class="plusline">+import java.awt.image.ImageObserver;</span><a href="#l35.45"></a>
<span id="l35.46" class="plusline">+import java.text.AttributedCharacterIterator;</span><a href="#l35.46"></a>
<span id="l35.47" class="plusline">+import javax.swing.Icon;</span><a href="#l35.47"></a>
<span id="l35.48" class="plusline">+import javax.swing.plaf.metal.MetalBorders.ToolBarBorder;</span><a href="#l35.48"></a>
<span id="l35.49" class="plusline">+</span><a href="#l35.49"></a>
<span id="l35.50" class="plusline">+public class Test6657026 extends ToolBarBorder implements Runnable {</span><a href="#l35.50"></a>
<span id="l35.51" class="plusline">+</span><a href="#l35.51"></a>
<span id="l35.52" class="plusline">+    public static void main(String[] args) throws Exception {</span><a href="#l35.52"></a>
<span id="l35.53" class="plusline">+        new Test6657026().test();</span><a href="#l35.53"></a>
<span id="l35.54" class="plusline">+</span><a href="#l35.54"></a>
<span id="l35.55" class="plusline">+        ThreadGroup group = new ThreadGroup(&quot;$$$&quot;);</span><a href="#l35.55"></a>
<span id="l35.56" class="plusline">+        Thread thread = new Thread(group, new Test6657026());</span><a href="#l35.56"></a>
<span id="l35.57" class="plusline">+        thread.start();</span><a href="#l35.57"></a>
<span id="l35.58" class="plusline">+        thread.join();</span><a href="#l35.58"></a>
<span id="l35.59" class="plusline">+    }</span><a href="#l35.59"></a>
<span id="l35.60" class="plusline">+</span><a href="#l35.60"></a>
<span id="l35.61" class="plusline">+    public void run() {</span><a href="#l35.61"></a>
<span id="l35.62" class="plusline">+        SunToolkit.createNewAppContext();</span><a href="#l35.62"></a>
<span id="l35.63" class="plusline">+        test();</span><a href="#l35.63"></a>
<span id="l35.64" class="plusline">+    }</span><a href="#l35.64"></a>
<span id="l35.65" class="plusline">+</span><a href="#l35.65"></a>
<span id="l35.66" class="plusline">+    private void test() {</span><a href="#l35.66"></a>
<span id="l35.67" class="plusline">+        MyGraphics mg = new MyGraphics();</span><a href="#l35.67"></a>
<span id="l35.68" class="plusline">+        Icon icon = bumps;</span><a href="#l35.68"></a>
<span id="l35.69" class="plusline">+        icon.paintIcon(mg.component, mg, 0, 0);</span><a href="#l35.69"></a>
<span id="l35.70" class="plusline">+        if (mg.image != null) {</span><a href="#l35.70"></a>
<span id="l35.71" class="plusline">+            boolean failed = true;</span><a href="#l35.71"></a>
<span id="l35.72" class="plusline">+            int value = mg.image.getRGB(0, 0);</span><a href="#l35.72"></a>
<span id="l35.73" class="plusline">+            for (int x = 0; x &lt; mg.image.getWidth(); x++) {</span><a href="#l35.73"></a>
<span id="l35.74" class="plusline">+                for (int y = 0; y &lt; mg.image.getHeight(); y++) {</span><a href="#l35.74"></a>
<span id="l35.75" class="plusline">+                    int current = mg.image.getRGB(x, y);</span><a href="#l35.75"></a>
<span id="l35.76" class="plusline">+                    if (current != value) {</span><a href="#l35.76"></a>
<span id="l35.77" class="plusline">+                        mg.image.setRGB(x, y, value);</span><a href="#l35.77"></a>
<span id="l35.78" class="plusline">+                        failed = false;</span><a href="#l35.78"></a>
<span id="l35.79" class="plusline">+                    }</span><a href="#l35.79"></a>
<span id="l35.80" class="plusline">+</span><a href="#l35.80"></a>
<span id="l35.81" class="plusline">+                }</span><a href="#l35.81"></a>
<span id="l35.82" class="plusline">+            }</span><a href="#l35.82"></a>
<span id="l35.83" class="plusline">+            if (failed) {</span><a href="#l35.83"></a>
<span id="l35.84" class="plusline">+                throw new Error(&quot;shared metal bumps&quot;);</span><a href="#l35.84"></a>
<span id="l35.85" class="plusline">+            }</span><a href="#l35.85"></a>
<span id="l35.86" class="plusline">+        }</span><a href="#l35.86"></a>
<span id="l35.87" class="plusline">+    }</span><a href="#l35.87"></a>
<span id="l35.88" class="plusline">+</span><a href="#l35.88"></a>
<span id="l35.89" class="plusline">+    private static class MyGraphics extends Graphics {</span><a href="#l35.89"></a>
<span id="l35.90" class="plusline">+</span><a href="#l35.90"></a>
<span id="l35.91" class="plusline">+        private final Component component = new Component() {};</span><a href="#l35.91"></a>
<span id="l35.92" class="plusline">+        private BufferedImage image;</span><a href="#l35.92"></a>
<span id="l35.93" class="plusline">+</span><a href="#l35.93"></a>
<span id="l35.94" class="plusline">+        public Graphics create() {</span><a href="#l35.94"></a>
<span id="l35.95" class="plusline">+            return null;  // TODO: check</span><a href="#l35.95"></a>
<span id="l35.96" class="plusline">+        }</span><a href="#l35.96"></a>
<span id="l35.97" class="plusline">+</span><a href="#l35.97"></a>
<span id="l35.98" class="plusline">+        public void translate(int x, int y) {</span><a href="#l35.98"></a>
<span id="l35.99" class="plusline">+            // TODO: check</span><a href="#l35.99"></a>
<span id="l35.100" class="plusline">+        }</span><a href="#l35.100"></a>
<span id="l35.101" class="plusline">+</span><a href="#l35.101"></a>
<span id="l35.102" class="plusline">+        public Color getColor() {</span><a href="#l35.102"></a>
<span id="l35.103" class="plusline">+            return null;  // TODO: check</span><a href="#l35.103"></a>
<span id="l35.104" class="plusline">+        }</span><a href="#l35.104"></a>
<span id="l35.105" class="plusline">+</span><a href="#l35.105"></a>
<span id="l35.106" class="plusline">+        public void setColor(Color color) {</span><a href="#l35.106"></a>
<span id="l35.107" class="plusline">+            // TODO: check</span><a href="#l35.107"></a>
<span id="l35.108" class="plusline">+        }</span><a href="#l35.108"></a>
<span id="l35.109" class="plusline">+</span><a href="#l35.109"></a>
<span id="l35.110" class="plusline">+        public void setPaintMode() {</span><a href="#l35.110"></a>
<span id="l35.111" class="plusline">+            // TODO: check</span><a href="#l35.111"></a>
<span id="l35.112" class="plusline">+        }</span><a href="#l35.112"></a>
<span id="l35.113" class="plusline">+</span><a href="#l35.113"></a>
<span id="l35.114" class="plusline">+        public void setXORMode(Color c1) {</span><a href="#l35.114"></a>
<span id="l35.115" class="plusline">+            // TODO: check</span><a href="#l35.115"></a>
<span id="l35.116" class="plusline">+        }</span><a href="#l35.116"></a>
<span id="l35.117" class="plusline">+</span><a href="#l35.117"></a>
<span id="l35.118" class="plusline">+        public Font getFont() {</span><a href="#l35.118"></a>
<span id="l35.119" class="plusline">+            return null;  // TODO: check</span><a href="#l35.119"></a>
<span id="l35.120" class="plusline">+        }</span><a href="#l35.120"></a>
<span id="l35.121" class="plusline">+</span><a href="#l35.121"></a>
<span id="l35.122" class="plusline">+        public void setFont(Font font) {</span><a href="#l35.122"></a>
<span id="l35.123" class="plusline">+            // TODO: check</span><a href="#l35.123"></a>
<span id="l35.124" class="plusline">+        }</span><a href="#l35.124"></a>
<span id="l35.125" class="plusline">+</span><a href="#l35.125"></a>
<span id="l35.126" class="plusline">+        public FontMetrics getFontMetrics(Font font) {</span><a href="#l35.126"></a>
<span id="l35.127" class="plusline">+            return null;  // TODO: check</span><a href="#l35.127"></a>
<span id="l35.128" class="plusline">+        }</span><a href="#l35.128"></a>
<span id="l35.129" class="plusline">+</span><a href="#l35.129"></a>
<span id="l35.130" class="plusline">+        public Rectangle getClipBounds() {</span><a href="#l35.130"></a>
<span id="l35.131" class="plusline">+            return null;  // TODO: check</span><a href="#l35.131"></a>
<span id="l35.132" class="plusline">+        }</span><a href="#l35.132"></a>
<span id="l35.133" class="plusline">+</span><a href="#l35.133"></a>
<span id="l35.134" class="plusline">+        public void clipRect(int x, int y, int width, int height) {</span><a href="#l35.134"></a>
<span id="l35.135" class="plusline">+            // TODO: check</span><a href="#l35.135"></a>
<span id="l35.136" class="plusline">+        }</span><a href="#l35.136"></a>
<span id="l35.137" class="plusline">+</span><a href="#l35.137"></a>
<span id="l35.138" class="plusline">+        public void setClip(int x, int y, int width, int height) {</span><a href="#l35.138"></a>
<span id="l35.139" class="plusline">+            // TODO: check</span><a href="#l35.139"></a>
<span id="l35.140" class="plusline">+        }</span><a href="#l35.140"></a>
<span id="l35.141" class="plusline">+</span><a href="#l35.141"></a>
<span id="l35.142" class="plusline">+        public Shape getClip() {</span><a href="#l35.142"></a>
<span id="l35.143" class="plusline">+            return null;  // TODO: check</span><a href="#l35.143"></a>
<span id="l35.144" class="plusline">+        }</span><a href="#l35.144"></a>
<span id="l35.145" class="plusline">+</span><a href="#l35.145"></a>
<span id="l35.146" class="plusline">+        public void setClip(Shape clip) {</span><a href="#l35.146"></a>
<span id="l35.147" class="plusline">+            // TODO: check</span><a href="#l35.147"></a>
<span id="l35.148" class="plusline">+        }</span><a href="#l35.148"></a>
<span id="l35.149" class="plusline">+</span><a href="#l35.149"></a>
<span id="l35.150" class="plusline">+        public void copyArea(int x, int y, int width, int height, int dx, int dy) {</span><a href="#l35.150"></a>
<span id="l35.151" class="plusline">+            // TODO: check</span><a href="#l35.151"></a>
<span id="l35.152" class="plusline">+        }</span><a href="#l35.152"></a>
<span id="l35.153" class="plusline">+</span><a href="#l35.153"></a>
<span id="l35.154" class="plusline">+        public void drawLine(int x1, int y1, int x2, int y2) {</span><a href="#l35.154"></a>
<span id="l35.155" class="plusline">+            // TODO: check</span><a href="#l35.155"></a>
<span id="l35.156" class="plusline">+        }</span><a href="#l35.156"></a>
<span id="l35.157" class="plusline">+</span><a href="#l35.157"></a>
<span id="l35.158" class="plusline">+        public void fillRect(int x, int y, int width, int height) {</span><a href="#l35.158"></a>
<span id="l35.159" class="plusline">+            // TODO: check</span><a href="#l35.159"></a>
<span id="l35.160" class="plusline">+        }</span><a href="#l35.160"></a>
<span id="l35.161" class="plusline">+</span><a href="#l35.161"></a>
<span id="l35.162" class="plusline">+        public void clearRect(int x, int y, int width, int height) {</span><a href="#l35.162"></a>
<span id="l35.163" class="plusline">+            // TODO: check</span><a href="#l35.163"></a>
<span id="l35.164" class="plusline">+        }</span><a href="#l35.164"></a>
<span id="l35.165" class="plusline">+</span><a href="#l35.165"></a>
<span id="l35.166" class="plusline">+        public void drawRoundRect(int x, int y, int width, int height, int arcWidth, int arcHeight) {</span><a href="#l35.166"></a>
<span id="l35.167" class="plusline">+            // TODO: check</span><a href="#l35.167"></a>
<span id="l35.168" class="plusline">+        }</span><a href="#l35.168"></a>
<span id="l35.169" class="plusline">+</span><a href="#l35.169"></a>
<span id="l35.170" class="plusline">+        public void fillRoundRect(int x, int y, int width, int height, int arcWidth, int arcHeight) {</span><a href="#l35.170"></a>
<span id="l35.171" class="plusline">+            // TODO: check</span><a href="#l35.171"></a>
<span id="l35.172" class="plusline">+        }</span><a href="#l35.172"></a>
<span id="l35.173" class="plusline">+</span><a href="#l35.173"></a>
<span id="l35.174" class="plusline">+        public void drawOval(int x, int y, int width, int height) {</span><a href="#l35.174"></a>
<span id="l35.175" class="plusline">+            // TODO: check</span><a href="#l35.175"></a>
<span id="l35.176" class="plusline">+        }</span><a href="#l35.176"></a>
<span id="l35.177" class="plusline">+</span><a href="#l35.177"></a>
<span id="l35.178" class="plusline">+        public void fillOval(int x, int y, int width, int height) {</span><a href="#l35.178"></a>
<span id="l35.179" class="plusline">+            // TODO: check</span><a href="#l35.179"></a>
<span id="l35.180" class="plusline">+        }</span><a href="#l35.180"></a>
<span id="l35.181" class="plusline">+</span><a href="#l35.181"></a>
<span id="l35.182" class="plusline">+        public void drawArc(int x, int y, int width, int height, int startAngle, int arcAngle) {</span><a href="#l35.182"></a>
<span id="l35.183" class="plusline">+            // TODO: check</span><a href="#l35.183"></a>
<span id="l35.184" class="plusline">+        }</span><a href="#l35.184"></a>
<span id="l35.185" class="plusline">+</span><a href="#l35.185"></a>
<span id="l35.186" class="plusline">+        public void fillArc(int x, int y, int width, int height, int startAngle, int arcAngle) {</span><a href="#l35.186"></a>
<span id="l35.187" class="plusline">+            // TODO: check</span><a href="#l35.187"></a>
<span id="l35.188" class="plusline">+        }</span><a href="#l35.188"></a>
<span id="l35.189" class="plusline">+</span><a href="#l35.189"></a>
<span id="l35.190" class="plusline">+        public void drawPolyline(int[] xPoints, int[] yPoints, int nPoints) {</span><a href="#l35.190"></a>
<span id="l35.191" class="plusline">+            // TODO: check</span><a href="#l35.191"></a>
<span id="l35.192" class="plusline">+        }</span><a href="#l35.192"></a>
<span id="l35.193" class="plusline">+</span><a href="#l35.193"></a>
<span id="l35.194" class="plusline">+        public void drawPolygon(int[] xPoints, int[] yPoints, int nPoints) {</span><a href="#l35.194"></a>
<span id="l35.195" class="plusline">+            // TODO: check</span><a href="#l35.195"></a>
<span id="l35.196" class="plusline">+        }</span><a href="#l35.196"></a>
<span id="l35.197" class="plusline">+</span><a href="#l35.197"></a>
<span id="l35.198" class="plusline">+        public void fillPolygon(int[] xPoints, int[] yPoints, int nPoints) {</span><a href="#l35.198"></a>
<span id="l35.199" class="plusline">+            // TODO: check</span><a href="#l35.199"></a>
<span id="l35.200" class="plusline">+        }</span><a href="#l35.200"></a>
<span id="l35.201" class="plusline">+</span><a href="#l35.201"></a>
<span id="l35.202" class="plusline">+        public void drawString(String str, int x, int y) {</span><a href="#l35.202"></a>
<span id="l35.203" class="plusline">+            // TODO: check</span><a href="#l35.203"></a>
<span id="l35.204" class="plusline">+        }</span><a href="#l35.204"></a>
<span id="l35.205" class="plusline">+</span><a href="#l35.205"></a>
<span id="l35.206" class="plusline">+        public void drawString(AttributedCharacterIterator iterator, int x, int y) {</span><a href="#l35.206"></a>
<span id="l35.207" class="plusline">+            // TODO: check</span><a href="#l35.207"></a>
<span id="l35.208" class="plusline">+        }</span><a href="#l35.208"></a>
<span id="l35.209" class="plusline">+</span><a href="#l35.209"></a>
<span id="l35.210" class="plusline">+        public boolean drawImage(Image img, int x, int y, ImageObserver observer) {</span><a href="#l35.210"></a>
<span id="l35.211" class="plusline">+            return false;  // TODO: check</span><a href="#l35.211"></a>
<span id="l35.212" class="plusline">+        }</span><a href="#l35.212"></a>
<span id="l35.213" class="plusline">+</span><a href="#l35.213"></a>
<span id="l35.214" class="plusline">+        public boolean drawImage(Image img, int x, int y, int width, int height, ImageObserver observer) {</span><a href="#l35.214"></a>
<span id="l35.215" class="plusline">+            return false;  // TODO: check</span><a href="#l35.215"></a>
<span id="l35.216" class="plusline">+        }</span><a href="#l35.216"></a>
<span id="l35.217" class="plusline">+</span><a href="#l35.217"></a>
<span id="l35.218" class="plusline">+        public boolean drawImage(Image img, int x, int y, Color bgcolor, ImageObserver observer) {</span><a href="#l35.218"></a>
<span id="l35.219" class="plusline">+            return false;  // TODO: check</span><a href="#l35.219"></a>
<span id="l35.220" class="plusline">+        }</span><a href="#l35.220"></a>
<span id="l35.221" class="plusline">+</span><a href="#l35.221"></a>
<span id="l35.222" class="plusline">+        public boolean drawImage(Image img, int x, int y, int width, int height, Color bgcolor, ImageObserver observer) {</span><a href="#l35.222"></a>
<span id="l35.223" class="plusline">+            return false;  // TODO: check</span><a href="#l35.223"></a>
<span id="l35.224" class="plusline">+        }</span><a href="#l35.224"></a>
<span id="l35.225" class="plusline">+</span><a href="#l35.225"></a>
<span id="l35.226" class="plusline">+        public boolean drawImage(Image img, int dx1, int dy1, int dx2, int dy2, int sx1, int sy1, int sx2, int sy2, ImageObserver observer) {</span><a href="#l35.226"></a>
<span id="l35.227" class="plusline">+            if (img instanceof BufferedImage) {</span><a href="#l35.227"></a>
<span id="l35.228" class="plusline">+                this.image = (BufferedImage) img;</span><a href="#l35.228"></a>
<span id="l35.229" class="plusline">+            }</span><a href="#l35.229"></a>
<span id="l35.230" class="plusline">+            return false;  // TODO: check</span><a href="#l35.230"></a>
<span id="l35.231" class="plusline">+        }</span><a href="#l35.231"></a>
<span id="l35.232" class="plusline">+</span><a href="#l35.232"></a>
<span id="l35.233" class="plusline">+        public boolean drawImage(Image img, int dx1, int dy1, int dx2, int dy2, int sx1, int sy1, int sx2, int sy2, Color bgcolor, ImageObserver observer) {</span><a href="#l35.233"></a>
<span id="l35.234" class="plusline">+            return false;  // TODO: check</span><a href="#l35.234"></a>
<span id="l35.235" class="plusline">+        }</span><a href="#l35.235"></a>
<span id="l35.236" class="plusline">+</span><a href="#l35.236"></a>
<span id="l35.237" class="plusline">+        public void dispose() {</span><a href="#l35.237"></a>
<span id="l35.238" class="plusline">+            // TODO: check</span><a href="#l35.238"></a>
<span id="l35.239" class="plusline">+        }</span><a href="#l35.239"></a>
<span id="l35.240" class="plusline">+    }</span><a href="#l35.240"></a>
<span id="l35.241" class="plusline">+}</span><a href="#l35.241"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l36.1" class="minusline">--- /dev/null	Thu Jan 01 00:00:00 1970 +0000</span><a href="#l36.1"></a>
<span id="l36.2" class="plusline">+++ b/test/javax/swing/plaf/metal/MetalInternalFrameUI/Test6657026.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l36.2"></a>
<span id="l36.3" class="atline">@@ -0,0 +1,60 @@</span><a href="#l36.3"></a>
<span id="l36.4" class="plusline">+/*</span><a href="#l36.4"></a>
<span id="l36.5" class="plusline">+ * Copyright 2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l36.5"></a>
<span id="l36.6" class="plusline">+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l36.6"></a>
<span id="l36.7" class="plusline">+ *</span><a href="#l36.7"></a>
<span id="l36.8" class="plusline">+ * This code is free software; you can redistribute it and/or modify it</span><a href="#l36.8"></a>
<span id="l36.9" class="plusline">+ * under the terms of the GNU General Public License version 2 only, as</span><a href="#l36.9"></a>
<span id="l36.10" class="plusline">+ * published by the Free Software Foundation.</span><a href="#l36.10"></a>
<span id="l36.11" class="plusline">+ *</span><a href="#l36.11"></a>
<span id="l36.12" class="plusline">+ * This code is distributed in the hope that it will be useful, but WITHOUT</span><a href="#l36.12"></a>
<span id="l36.13" class="plusline">+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or</span><a href="#l36.13"></a>
<span id="l36.14" class="plusline">+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License</span><a href="#l36.14"></a>
<span id="l36.15" class="plusline">+ * version 2 for more details (a copy is included in the LICENSE file that</span><a href="#l36.15"></a>
<span id="l36.16" class="plusline">+ * accompanied this code).</span><a href="#l36.16"></a>
<span id="l36.17" class="plusline">+ *</span><a href="#l36.17"></a>
<span id="l36.18" class="plusline">+ * You should have received a copy of the GNU General Public License version</span><a href="#l36.18"></a>
<span id="l36.19" class="plusline">+ * 2 along with this work; if not, write to the Free Software Foundation,</span><a href="#l36.19"></a>
<span id="l36.20" class="plusline">+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.</span><a href="#l36.20"></a>
<span id="l36.21" class="plusline">+ *</span><a href="#l36.21"></a>
<span id="l36.22" class="plusline">+ * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,</span><a href="#l36.22"></a>
<span id="l36.23" class="plusline">+ * CA 95054 USA or visit www.sun.com if you need additional information or</span><a href="#l36.23"></a>
<span id="l36.24" class="plusline">+ * have any questions.</span><a href="#l36.24"></a>
<span id="l36.25" class="plusline">+ */</span><a href="#l36.25"></a>
<span id="l36.26" class="plusline">+</span><a href="#l36.26"></a>
<span id="l36.27" class="plusline">+/*</span><a href="#l36.27"></a>
<span id="l36.28" class="plusline">+ * @test</span><a href="#l36.28"></a>
<span id="l36.29" class="plusline">+ * @bug 6657026</span><a href="#l36.29"></a>
<span id="l36.30" class="plusline">+ * @summary Tests shared MetalInternalFrameUI in different application contexts</span><a href="#l36.30"></a>
<span id="l36.31" class="plusline">+ * @author Sergey Malenkov</span><a href="#l36.31"></a>
<span id="l36.32" class="plusline">+ */</span><a href="#l36.32"></a>
<span id="l36.33" class="plusline">+</span><a href="#l36.33"></a>
<span id="l36.34" class="plusline">+import sun.awt.SunToolkit;</span><a href="#l36.34"></a>
<span id="l36.35" class="plusline">+</span><a href="#l36.35"></a>
<span id="l36.36" class="plusline">+import javax.swing.JInternalFrame;</span><a href="#l36.36"></a>
<span id="l36.37" class="plusline">+import javax.swing.JPanel;</span><a href="#l36.37"></a>
<span id="l36.38" class="plusline">+import javax.swing.UIManager;</span><a href="#l36.38"></a>
<span id="l36.39" class="plusline">+import javax.swing.plaf.metal.MetalInternalFrameUI;</span><a href="#l36.39"></a>
<span id="l36.40" class="plusline">+import javax.swing.plaf.metal.MetalLookAndFeel;</span><a href="#l36.40"></a>
<span id="l36.41" class="plusline">+</span><a href="#l36.41"></a>
<span id="l36.42" class="plusline">+public class Test6657026 extends MetalInternalFrameUI implements Runnable {</span><a href="#l36.42"></a>
<span id="l36.43" class="plusline">+</span><a href="#l36.43"></a>
<span id="l36.44" class="plusline">+    public static void main(String[] args) throws Exception {</span><a href="#l36.44"></a>
<span id="l36.45" class="plusline">+        UIManager.setLookAndFeel(new MetalLookAndFeel());</span><a href="#l36.45"></a>
<span id="l36.46" class="plusline">+</span><a href="#l36.46"></a>
<span id="l36.47" class="plusline">+        ThreadGroup group = new ThreadGroup(&quot;$$$&quot;);</span><a href="#l36.47"></a>
<span id="l36.48" class="plusline">+        Thread thread = new Thread(group, new Test6657026());</span><a href="#l36.48"></a>
<span id="l36.49" class="plusline">+        thread.start();</span><a href="#l36.49"></a>
<span id="l36.50" class="plusline">+        thread.join();</span><a href="#l36.50"></a>
<span id="l36.51" class="plusline">+</span><a href="#l36.51"></a>
<span id="l36.52" class="plusline">+        new JInternalFrame().setContentPane(new JPanel());</span><a href="#l36.52"></a>
<span id="l36.53" class="plusline">+    }</span><a href="#l36.53"></a>
<span id="l36.54" class="plusline">+</span><a href="#l36.54"></a>
<span id="l36.55" class="plusline">+    public Test6657026() {</span><a href="#l36.55"></a>
<span id="l36.56" class="plusline">+        super(null);</span><a href="#l36.56"></a>
<span id="l36.57" class="plusline">+    }</span><a href="#l36.57"></a>
<span id="l36.58" class="plusline">+</span><a href="#l36.58"></a>
<span id="l36.59" class="plusline">+    public void run() {</span><a href="#l36.59"></a>
<span id="l36.60" class="plusline">+        SunToolkit.createNewAppContext();</span><a href="#l36.60"></a>
<span id="l36.61" class="plusline">+        IS_PALETTE = JInternalFrame.CONTENT_PANE_PROPERTY;</span><a href="#l36.61"></a>
<span id="l36.62" class="plusline">+    }</span><a href="#l36.62"></a>
<span id="l36.63" class="plusline">+}</span><a href="#l36.63"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l37.1" class="minusline">--- /dev/null	Thu Jan 01 00:00:00 1970 +0000</span><a href="#l37.1"></a>
<span id="l37.2" class="plusline">+++ b/test/javax/swing/plaf/metal/MetalSliderUI/Test6657026.java	Wed Sep 09 17:57:45 2009 +0400</span><a href="#l37.2"></a>
<span id="l37.3" class="atline">@@ -0,0 +1,67 @@</span><a href="#l37.3"></a>
<span id="l37.4" class="plusline">+/*</span><a href="#l37.4"></a>
<span id="l37.5" class="plusline">+ * Copyright 2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l37.5"></a>
<span id="l37.6" class="plusline">+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l37.6"></a>
<span id="l37.7" class="plusline">+ *</span><a href="#l37.7"></a>
<span id="l37.8" class="plusline">+ * This code is free software; you can redistribute it and/or modify it</span><a href="#l37.8"></a>
<span id="l37.9" class="plusline">+ * under the terms of the GNU General Public License version 2 only, as</span><a href="#l37.9"></a>
<span id="l37.10" class="plusline">+ * published by the Free Software Foundation.</span><a href="#l37.10"></a>
<span id="l37.11" class="plusline">+ *</span><a href="#l37.11"></a>
<span id="l37.12" class="plusline">+ * This code is distributed in the hope that it will be useful, but WITHOUT</span><a href="#l37.12"></a>
<span id="l37.13" class="plusline">+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or</span><a href="#l37.13"></a>
<span id="l37.14" class="plusline">+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License</span><a href="#l37.14"></a>
<span id="l37.15" class="plusline">+ * version 2 for more details (a copy is included in the LICENSE file that</span><a href="#l37.15"></a>
<span id="l37.16" class="plusline">+ * accompanied this code).</span><a href="#l37.16"></a>
<span id="l37.17" class="plusline">+ *</span><a href="#l37.17"></a>
<span id="l37.18" class="plusline">+ * You should have received a copy of the GNU General Public License version</span><a href="#l37.18"></a>
<span id="l37.19" class="plusline">+ * 2 along with this work; if not, write to the Free Software Foundation,</span><a href="#l37.19"></a>
<span id="l37.20" class="plusline">+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.</span><a href="#l37.20"></a>
<span id="l37.21" class="plusline">+ *</span><a href="#l37.21"></a>
<span id="l37.22" class="plusline">+ * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,</span><a href="#l37.22"></a>
<span id="l37.23" class="plusline">+ * CA 95054 USA or visit www.sun.com if you need additional information or</span><a href="#l37.23"></a>
<span id="l37.24" class="plusline">+ * have any questions.</span><a href="#l37.24"></a>
<span id="l37.25" class="plusline">+ */</span><a href="#l37.25"></a>
<span id="l37.26" class="plusline">+</span><a href="#l37.26"></a>
<span id="l37.27" class="plusline">+/*</span><a href="#l37.27"></a>
<span id="l37.28" class="plusline">+ * @test</span><a href="#l37.28"></a>
<span id="l37.29" class="plusline">+ * @bug 6657026</span><a href="#l37.29"></a>
<span id="l37.30" class="plusline">+ * @summary Tests shared MetalSliderUI in different application contexts</span><a href="#l37.30"></a>
<span id="l37.31" class="plusline">+ * @author Sergey Malenkov</span><a href="#l37.31"></a>
<span id="l37.32" class="plusline">+ */</span><a href="#l37.32"></a>
<span id="l37.33" class="plusline">+</span><a href="#l37.33"></a>
<span id="l37.34" class="plusline">+import sun.awt.SunToolkit;</span><a href="#l37.34"></a>
<span id="l37.35" class="plusline">+</span><a href="#l37.35"></a>
<span id="l37.36" class="plusline">+import javax.swing.JSlider;</span><a href="#l37.36"></a>
<span id="l37.37" class="plusline">+import javax.swing.UIManager;</span><a href="#l37.37"></a>
<span id="l37.38" class="plusline">+import javax.swing.plaf.metal.MetalLookAndFeel;</span><a href="#l37.38"></a>
<span id="l37.39" class="plusline">+import javax.swing.plaf.metal.MetalSliderUI;</span><a href="#l37.39"></a>
<span id="l37.40" class="plusline">+</span><a href="#l37.40"></a>
<span id="l37.41" class="plusline">+public class Test6657026 extends MetalSliderUI implements Runnable {</span><a href="#l37.41"></a>
<span id="l37.42" class="plusline">+</span><a href="#l37.42"></a>
<span id="l37.43" class="plusline">+    public static void main(String[] args) throws Exception {</span><a href="#l37.43"></a>
<span id="l37.44" class="plusline">+        UIManager.setLookAndFeel(new MetalLookAndFeel());</span><a href="#l37.44"></a>
<span id="l37.45" class="plusline">+        JSlider slider = new JSlider();</span><a href="#l37.45"></a>
<span id="l37.46" class="plusline">+        test(slider);</span><a href="#l37.46"></a>
<span id="l37.47" class="plusline">+</span><a href="#l37.47"></a>
<span id="l37.48" class="plusline">+        ThreadGroup group = new ThreadGroup(&quot;$$$&quot;);</span><a href="#l37.48"></a>
<span id="l37.49" class="plusline">+        Thread thread = new Thread(group, new Test6657026());</span><a href="#l37.49"></a>
<span id="l37.50" class="plusline">+        thread.start();</span><a href="#l37.50"></a>
<span id="l37.51" class="plusline">+        thread.join();</span><a href="#l37.51"></a>
<span id="l37.52" class="plusline">+</span><a href="#l37.52"></a>
<span id="l37.53" class="plusline">+        test(slider);</span><a href="#l37.53"></a>
<span id="l37.54" class="plusline">+    }</span><a href="#l37.54"></a>
<span id="l37.55" class="plusline">+</span><a href="#l37.55"></a>
<span id="l37.56" class="plusline">+    public void run() {</span><a href="#l37.56"></a>
<span id="l37.57" class="plusline">+        SunToolkit.createNewAppContext();</span><a href="#l37.57"></a>
<span id="l37.58" class="plusline">+        JSlider slider = new JSlider();</span><a href="#l37.58"></a>
<span id="l37.59" class="plusline">+        test(slider);</span><a href="#l37.59"></a>
<span id="l37.60" class="plusline">+        tickLength = -10000;</span><a href="#l37.60"></a>
<span id="l37.61" class="plusline">+    }</span><a href="#l37.61"></a>
<span id="l37.62" class="plusline">+</span><a href="#l37.62"></a>
<span id="l37.63" class="plusline">+    private static void test(JSlider slider) {</span><a href="#l37.63"></a>
<span id="l37.64" class="plusline">+        MetalSliderUI ui = (MetalSliderUI) slider.getUI();</span><a href="#l37.64"></a>
<span id="l37.65" class="plusline">+        int actual = ui.getTickLength();</span><a href="#l37.65"></a>
<span id="l37.66" class="plusline">+        if (actual != 11) {</span><a href="#l37.66"></a>
<span id="l37.67" class="plusline">+            throw new Error(actual + &quot;, but expected 11&quot;);</span><a href="#l37.67"></a>
<span id="l37.68" class="plusline">+        }</span><a href="#l37.68"></a>
<span id="l37.69" class="plusline">+    }</span><a href="#l37.69"></a>
<span id="l37.70" class="plusline">+}</span><a href="#l37.70"></a></pre></div>
</div>
</div>

</div>
</div>


<div class="container"><div class="main footer">
&copy 2007, <script>document.write(new Date().getFullYear())</script> Oracle and/or its affiliates<br/>
<a href="http://openjdk.java.net/legal/tou/">Terms of Use</a>
&#183; <a href="http://www.oracle.com/us/legal/privacy/">Privacy</a>
&#183; <a href="https://openjdk.java.net/legal/openjdk-trademark-notice.html">Trademarks</a>
</div></div>

</body>
</html>

