<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US">
<head>
<link rel="icon" href="/jdk6/jdk6/jdk/static/nanoduke.ico" type="image/png" />
<meta name="robots" content="index, nofollow" />
<link rel="stylesheet" href="/jdk6/jdk6/jdk/static/style-paper.css" type="text/css" />
<script type="text/javascript" src="/jdk6/jdk6/jdk/static/mercurial.js"></script>

<title>jdk6/jdk6/jdk: 9b95de10b74e</title>
</head>
<body>
<div class="container">
<div class="menu">
<div class="logo">
<img src="/jdk6/jdk6/jdk/static/duke_pipes.png" width=75 height=90 border=0 alt="Duke!" />
</div>
<ul>
 <li><a href="/jdk6/jdk6/jdk/shortlog/9b95de10b74e">log</a></li>
 <li><a href="/jdk6/jdk6/jdk/graph/9b95de10b74e">graph</a></li>
 <li><a href="/jdk6/jdk6/jdk/tags">tags</a></li>
 <li><a href="/jdk6/jdk6/jdk/bookmarks">bookmarks</a></li>
 <li><a href="/jdk6/jdk6/jdk/branches">branches</a></li>
</ul>
<ul>
 <li class="active">changeset</li>
 <li><a href="/jdk6/jdk6/jdk/raw-rev/9b95de10b74e">raw</a></li>
 <li><a href="/jdk6/jdk6/jdk/file/9b95de10b74e">browse</a></li>
</ul>
<ul>
 
<li>
<a href="/jdk6/jdk6/jdk/archive/9b95de10b74e.zip">zip</a>
</li>
<li>
<a href="/jdk6/jdk6/jdk/archive/9b95de10b74e.tar.gz">gz</a>
</li>
<li>
<a href="/jdk6/jdk6/jdk/archive/9b95de10b74e.tar.bz2">bz2</a>
</li>
</ul>
<ul>
 <li><a href="/jdk6/jdk6/jdk/help">help</a></li>
</ul>
</div>

<div class="main">

<h2 class="breadcrumb"><a href="/">OpenJDK</a> / <a href="/jdk6">jdk6</a> / <a href="/jdk6/jdk6">jdk6</a> / <a href="/jdk6/jdk6/jdk">jdk</a> </h2>
<h3>changeset 220:9b95de10b74e   </h3>

<form class="search" action="/jdk6/jdk6/jdk/log">

<p><input name="rev" id="search1" type="text" size="30" /></p>
<div id="hint">Find changesets by keywords (author, files, the commit message), revision
number or hash, or <a href="/jdk6/jdk6/jdk/help/revsets">revset expression</a>.</div>
</form>

<div class="description">6636650: (cl) Resurrected ClassLoaders can still have children
Summary: Prevent classloader from resurrection
Reviewed-by: hawtin</div>

<table id="changesetEntry">
<tr>
 <th class="author">author</th>
 <td class="author">&#118;&#97;&#108;&#101;&#114;&#105;&#101;&#112;</td>
</tr>
<tr>
 <th class="date">date</th>
 <td class="date age">Mon, 24 Aug 2009 17:09:10 -0700</td></tr>
<tr>
 <th class="author">parents</th>
 <td class="author"><a href="/jdk6/jdk6/jdk/rev/39a17e094418">39a17e094418</a> </td>
</tr>
<tr>
 <th class="author">children</th>
 <td class="author"> <a href="/jdk6/jdk6/jdk/rev/aa750b9dade2">aa750b9dade2</a></td>
</tr>
<tr>
 <th class="files">files</th>
 <td class="files"><a href="/jdk6/jdk6/jdk/file/9b95de10b74e/src/share/classes/java/lang/ClassLoader.java">src/share/classes/java/lang/ClassLoader.java</a> <a href="/jdk6/jdk6/jdk/file/9b95de10b74e/test/java/lang/ClassLoader/UninitializedParent.java">test/java/lang/ClassLoader/UninitializedParent.java</a> </td>
</tr>
<tr>
  <th class="diffstat">diffstat</th>
  <td class="diffstat">
     2 files changed, 84 insertions(+), 33 deletions(-)

    <a id="diffstatexpand" href="javascript:toggleDiffstat()"/>[<tt>+</tt>]</a>
    <div id="diffstatdetails" style="display:none;">
      <a href="javascript:toggleDiffstat()"/>[<tt>-</tt>]</a>
      <p>
      <table class="stripes2">  <tr>
    <td class="diffstat-file"><a href="#l1.1">src/share/classes/java/lang/ClassLoader.java</a></td>
    <td class="diffstat-total" align="right">49</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:23.5294117647%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:48.5294117647%;">&nbsp;</span>
    </td>
  </tr>
  <tr>
    <td class="diffstat-file"><a href="#l2.1">test/java/lang/ClassLoader/UninitializedParent.java</a></td>
    <td class="diffstat-total" align="right">68</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:100.0%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:0.0%;">&nbsp;</span>
    </td>
  </tr>
</table>
    </div>
  </td>
</tr>
</table>

<div class="overflow">
<div class="sourcefirst linewraptoggle">line wrap: <a class="linewraplink" href="javascript:toggleLinewrap()">on</a></div>
<div class="sourcefirst"> line diff</div>
<div class="stripes2 diffblocks">
<div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l1.1" class="minusline">--- a/src/share/classes/java/lang/ClassLoader.java	Thu Aug 20 18:20:07 2009 +0400</span><a href="#l1.1"></a>
<span id="l1.2" class="plusline">+++ b/src/share/classes/java/lang/ClassLoader.java	Mon Aug 24 17:09:10 2009 -0700</span><a href="#l1.2"></a>
<span id="l1.3" class="atline">@@ -1,5 +1,5 @@</span><a href="#l1.3"></a>
<span id="l1.4"> /*</span><a href="#l1.4"></a>
<span id="l1.5" class="minusline">- * Copyright 1994-2005 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l1.5"></a>
<span id="l1.6" class="plusline">+ * Copyright 1994-2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l1.6"></a>
<span id="l1.7">  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l1.7"></a>
<span id="l1.8">  *</span><a href="#l1.8"></a>
<span id="l1.9">  * This code is free software; you can redistribute it and/or modify it</span><a href="#l1.9"></a>
<span id="l1.10" class="atline">@@ -163,11 +163,6 @@</span><a href="#l1.10"></a>
<span id="l1.11">         registerNatives();</span><a href="#l1.11"></a>
<span id="l1.12">     }</span><a href="#l1.12"></a>
<span id="l1.13"> </span><a href="#l1.13"></a>
<span id="l1.14" class="minusline">-    // If initialization succeed this is set to true and security checks will</span><a href="#l1.14"></a>
<span id="l1.15" class="minusline">-    // succeed.  Otherwise the object is not initialized and the object is</span><a href="#l1.15"></a>
<span id="l1.16" class="minusline">-    // useless.</span><a href="#l1.16"></a>
<span id="l1.17" class="minusline">-    private boolean initialized = false;</span><a href="#l1.17"></a>
<span id="l1.18" class="minusline">-</span><a href="#l1.18"></a>
<span id="l1.19">     // The parent class loader for delegation</span><a href="#l1.19"></a>
<span id="l1.20">     private ClassLoader parent;</span><a href="#l1.20"></a>
<span id="l1.21"> </span><a href="#l1.21"></a>
<span id="l1.22" class="atline">@@ -193,6 +188,19 @@</span><a href="#l1.22"></a>
<span id="l1.23">     // to its corresponding Package object.</span><a href="#l1.23"></a>
<span id="l1.24">     private HashMap packages = new HashMap();</span><a href="#l1.24"></a>
<span id="l1.25"> </span><a href="#l1.25"></a>
<span id="l1.26" class="plusline">+    private static Void checkCreateClassLoader() {</span><a href="#l1.26"></a>
<span id="l1.27" class="plusline">+	SecurityManager security = System.getSecurityManager();</span><a href="#l1.27"></a>
<span id="l1.28" class="plusline">+	if (security != null) {</span><a href="#l1.28"></a>
<span id="l1.29" class="plusline">+            security.checkCreateClassLoader();</span><a href="#l1.29"></a>
<span id="l1.30" class="plusline">+	}</span><a href="#l1.30"></a>
<span id="l1.31" class="plusline">+        return null;</span><a href="#l1.31"></a>
<span id="l1.32" class="plusline">+    }</span><a href="#l1.32"></a>
<span id="l1.33" class="plusline">+</span><a href="#l1.33"></a>
<span id="l1.34" class="plusline">+    private ClassLoader(Void unused, ClassLoader parent) {</span><a href="#l1.34"></a>
<span id="l1.35" class="plusline">+        this.parent = parent;</span><a href="#l1.35"></a>
<span id="l1.36" class="plusline">+    }</span><a href="#l1.36"></a>
<span id="l1.37" class="plusline">+</span><a href="#l1.37"></a>
<span id="l1.38" class="plusline">+</span><a href="#l1.38"></a>
<span id="l1.39">     /**</span><a href="#l1.39"></a>
<span id="l1.40">      * Creates a new class loader using the specified parent class loader for</span><a href="#l1.40"></a>
<span id="l1.41">      * delegation.</span><a href="#l1.41"></a>
<span id="l1.42" class="atline">@@ -213,12 +221,7 @@</span><a href="#l1.42"></a>
<span id="l1.43">      * @since  1.2</span><a href="#l1.43"></a>
<span id="l1.44">      */</span><a href="#l1.44"></a>
<span id="l1.45">     protected ClassLoader(ClassLoader parent) {</span><a href="#l1.45"></a>
<span id="l1.46" class="minusline">-        SecurityManager security = System.getSecurityManager();</span><a href="#l1.46"></a>
<span id="l1.47" class="minusline">-        if (security != null) {</span><a href="#l1.47"></a>
<span id="l1.48" class="minusline">-            security.checkCreateClassLoader();</span><a href="#l1.48"></a>
<span id="l1.49" class="minusline">-        }</span><a href="#l1.49"></a>
<span id="l1.50" class="minusline">-        this.parent = parent;</span><a href="#l1.50"></a>
<span id="l1.51" class="minusline">-        initialized = true;</span><a href="#l1.51"></a>
<span id="l1.52" class="plusline">+	this(checkCreateClassLoader(), parent);</span><a href="#l1.52"></a>
<span id="l1.53">     }</span><a href="#l1.53"></a>
<span id="l1.54"> </span><a href="#l1.54"></a>
<span id="l1.55">     /**</span><a href="#l1.55"></a>
<span id="l1.56" class="atline">@@ -237,12 +240,7 @@</span><a href="#l1.56"></a>
<span id="l1.57">      *          of a new class loader.</span><a href="#l1.57"></a>
<span id="l1.58">      */</span><a href="#l1.58"></a>
<span id="l1.59">     protected ClassLoader() {</span><a href="#l1.59"></a>
<span id="l1.60" class="minusline">-        SecurityManager security = System.getSecurityManager();</span><a href="#l1.60"></a>
<span id="l1.61" class="minusline">-        if (security != null) {</span><a href="#l1.61"></a>
<span id="l1.62" class="minusline">-            security.checkCreateClassLoader();</span><a href="#l1.62"></a>
<span id="l1.63" class="minusline">-        }</span><a href="#l1.63"></a>
<span id="l1.64" class="minusline">-        this.parent = getSystemClassLoader();</span><a href="#l1.64"></a>
<span id="l1.65" class="minusline">-        initialized = true;</span><a href="#l1.65"></a>
<span id="l1.66" class="plusline">+	this(checkCreateClassLoader(), getSystemClassLoader());</span><a href="#l1.66"></a>
<span id="l1.67">     }</span><a href="#l1.67"></a>
<span id="l1.68"> </span><a href="#l1.68"></a>
<span id="l1.69"> </span><a href="#l1.69"></a>
<span id="l1.70" class="atline">@@ -627,7 +625,6 @@</span><a href="#l1.70"></a>
<span id="l1.71">                                          ProtectionDomain protectionDomain)</span><a href="#l1.71"></a>
<span id="l1.72">         throws ClassFormatError</span><a href="#l1.72"></a>
<span id="l1.73">     {</span><a href="#l1.73"></a>
<span id="l1.74" class="minusline">-        check();</span><a href="#l1.74"></a>
<span id="l1.75">         protectionDomain = preDefineClass(name, protectionDomain);</span><a href="#l1.75"></a>
<span id="l1.76"> </span><a href="#l1.76"></a>
<span id="l1.77">         Class c = null;</span><a href="#l1.77"></a>
<span id="l1.78" class="atline">@@ -709,8 +706,6 @@</span><a href="#l1.78"></a>
<span id="l1.79">                                          ProtectionDomain protectionDomain)</span><a href="#l1.79"></a>
<span id="l1.80">         throws ClassFormatError</span><a href="#l1.80"></a>
<span id="l1.81">     {</span><a href="#l1.81"></a>
<span id="l1.82" class="minusline">-        check();</span><a href="#l1.82"></a>
<span id="l1.83" class="minusline">-</span><a href="#l1.83"></a>
<span id="l1.84">         int len = b.remaining();</span><a href="#l1.84"></a>
<span id="l1.85"> </span><a href="#l1.85"></a>
<span id="l1.86">         // Use byte[] if not a direct ByteBufer:</span><a href="#l1.86"></a>
<span id="l1.87" class="atline">@@ -858,7 +853,6 @@</span><a href="#l1.87"></a>
<span id="l1.88">      * @see  #defineClass(String, byte[], int, int)</span><a href="#l1.88"></a>
<span id="l1.89">      */</span><a href="#l1.89"></a>
<span id="l1.90">     protected final void resolveClass(Class&lt;?&gt; c) {</span><a href="#l1.90"></a>
<span id="l1.91" class="minusline">-        check();</span><a href="#l1.91"></a>
<span id="l1.92">         resolveClass0(c);</span><a href="#l1.92"></a>
<span id="l1.93">     }</span><a href="#l1.93"></a>
<span id="l1.94"> </span><a href="#l1.94"></a>
<span id="l1.95" class="atline">@@ -889,7 +883,6 @@</span><a href="#l1.95"></a>
<span id="l1.96">     protected final Class&lt;?&gt; findSystemClass(String name)</span><a href="#l1.96"></a>
<span id="l1.97">         throws ClassNotFoundException</span><a href="#l1.97"></a>
<span id="l1.98">     {</span><a href="#l1.98"></a>
<span id="l1.99" class="minusline">-        check();</span><a href="#l1.99"></a>
<span id="l1.100">         ClassLoader system = getSystemClassLoader();</span><a href="#l1.100"></a>
<span id="l1.101">         if (system == null) {</span><a href="#l1.101"></a>
<span id="l1.102">             if (!checkName(name))</span><a href="#l1.102"></a>
<span id="l1.103" class="atline">@@ -902,7 +895,6 @@</span><a href="#l1.103"></a>
<span id="l1.104">     private Class findBootstrapClass0(String name)</span><a href="#l1.104"></a>
<span id="l1.105">         throws ClassNotFoundException</span><a href="#l1.105"></a>
<span id="l1.106">     {</span><a href="#l1.106"></a>
<span id="l1.107" class="minusline">-        check();</span><a href="#l1.107"></a>
<span id="l1.108">         if (!checkName(name))</span><a href="#l1.108"></a>
<span id="l1.109">             throw new ClassNotFoundException(name);</span><a href="#l1.109"></a>
<span id="l1.110">         return findBootstrapClass(name);</span><a href="#l1.110"></a>
<span id="l1.111" class="atline">@@ -911,13 +903,6 @@</span><a href="#l1.111"></a>
<span id="l1.112">     private native Class findBootstrapClass(String name)</span><a href="#l1.112"></a>
<span id="l1.113">         throws ClassNotFoundException;</span><a href="#l1.113"></a>
<span id="l1.114"> </span><a href="#l1.114"></a>
<span id="l1.115" class="minusline">-    // Check to make sure the class loader has been initialized.</span><a href="#l1.115"></a>
<span id="l1.116" class="minusline">-    private void check() {</span><a href="#l1.116"></a>
<span id="l1.117" class="minusline">-        if (!initialized) {</span><a href="#l1.117"></a>
<span id="l1.118" class="minusline">-            throw new SecurityException(&quot;ClassLoader object not initialized&quot;);</span><a href="#l1.118"></a>
<span id="l1.119" class="minusline">-        }</span><a href="#l1.119"></a>
<span id="l1.120" class="minusline">-    }</span><a href="#l1.120"></a>
<span id="l1.121" class="minusline">-</span><a href="#l1.121"></a>
<span id="l1.122">     /**</span><a href="#l1.122"></a>
<span id="l1.123">      * Returns the class with the given &lt;a href=&quot;#name&quot;&gt;binary name&lt;/a&gt; if this</span><a href="#l1.123"></a>
<span id="l1.124">      * loader has been recorded by the Java virtual machine as an initiating</span><a href="#l1.124"></a>
<span id="l1.125" class="atline">@@ -933,7 +918,6 @@</span><a href="#l1.125"></a>
<span id="l1.126">      * @since  1.1</span><a href="#l1.126"></a>
<span id="l1.127">      */</span><a href="#l1.127"></a>
<span id="l1.128">     protected final Class&lt;?&gt; findLoadedClass(String name) {</span><a href="#l1.128"></a>
<span id="l1.129" class="minusline">-        check();</span><a href="#l1.129"></a>
<span id="l1.130">         if (!checkName(name))</span><a href="#l1.130"></a>
<span id="l1.131">             return null;</span><a href="#l1.131"></a>
<span id="l1.132">         return findLoadedClass0(name);</span><a href="#l1.132"></a>
<span id="l1.133" class="atline">@@ -954,7 +938,6 @@</span><a href="#l1.133"></a>
<span id="l1.134">      * @since  1.1</span><a href="#l1.134"></a>
<span id="l1.135">      */</span><a href="#l1.135"></a>
<span id="l1.136">     protected final void setSigners(Class&lt;?&gt; c, Object[] signers) {</span><a href="#l1.136"></a>
<span id="l1.137" class="minusline">-        check();</span><a href="#l1.137"></a>
<span id="l1.138">         c.setSigners(signers);</span><a href="#l1.138"></a>
<span id="l1.139">     }</span><a href="#l1.139"></a>
<span id="l1.140"> </span><a href="#l1.140"></a></pre></div><div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l2.1" class="minusline">--- /dev/null	Thu Jan 01 00:00:00 1970 +0000</span><a href="#l2.1"></a>
<span id="l2.2" class="plusline">+++ b/test/java/lang/ClassLoader/UninitializedParent.java	Mon Aug 24 17:09:10 2009 -0700</span><a href="#l2.2"></a>
<span id="l2.3" class="atline">@@ -0,0 +1,68 @@</span><a href="#l2.3"></a>
<span id="l2.4" class="plusline">+/*</span><a href="#l2.4"></a>
<span id="l2.5" class="plusline">+ * Copyright 2009 Sun Microsystems, Inc.  All Rights Reserved.</span><a href="#l2.5"></a>
<span id="l2.6" class="plusline">+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.</span><a href="#l2.6"></a>
<span id="l2.7" class="plusline">+ *</span><a href="#l2.7"></a>
<span id="l2.8" class="plusline">+ * This code is free software; you can redistribute it and/or modify it</span><a href="#l2.8"></a>
<span id="l2.9" class="plusline">+ * under the terms of the GNU General Public License version 2 only, as</span><a href="#l2.9"></a>
<span id="l2.10" class="plusline">+ * published by the Free Software Foundation.</span><a href="#l2.10"></a>
<span id="l2.11" class="plusline">+ *</span><a href="#l2.11"></a>
<span id="l2.12" class="plusline">+ * This code is distributed in the hope that it will be useful, but WITHOUT</span><a href="#l2.12"></a>
<span id="l2.13" class="plusline">+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or</span><a href="#l2.13"></a>
<span id="l2.14" class="plusline">+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License</span><a href="#l2.14"></a>
<span id="l2.15" class="plusline">+ * version 2 for more details (a copy is included in the LICENSE file that</span><a href="#l2.15"></a>
<span id="l2.16" class="plusline">+ * accompanied this code).</span><a href="#l2.16"></a>
<span id="l2.17" class="plusline">+ *</span><a href="#l2.17"></a>
<span id="l2.18" class="plusline">+ * You should have received a copy of the GNU General Public License version</span><a href="#l2.18"></a>
<span id="l2.19" class="plusline">+ * 2 along with this work; if not, write to the Free Software Foundation,</span><a href="#l2.19"></a>
<span id="l2.20" class="plusline">+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.</span><a href="#l2.20"></a>
<span id="l2.21" class="plusline">+ *</span><a href="#l2.21"></a>
<span id="l2.22" class="plusline">+ * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,</span><a href="#l2.22"></a>
<span id="l2.23" class="plusline">+ * CA 95054 USA or visit www.sun.com if you need additional information or</span><a href="#l2.23"></a>
<span id="l2.24" class="plusline">+ * have any questions.</span><a href="#l2.24"></a>
<span id="l2.25" class="plusline">+ */</span><a href="#l2.25"></a>
<span id="l2.26" class="plusline">+</span><a href="#l2.26"></a>
<span id="l2.27" class="plusline">+/*</span><a href="#l2.27"></a>
<span id="l2.28" class="plusline">+ * @test</span><a href="#l2.28"></a>
<span id="l2.29" class="plusline">+ * @bug 6636650</span><a href="#l2.29"></a>
<span id="l2.30" class="plusline">+ * @summary Uninitialized class loaders should not be a parent of other</span><a href="#l2.30"></a>
<span id="l2.31" class="plusline">+ *          class loaders.</span><a href="#l2.31"></a>
<span id="l2.32" class="plusline">+ */</span><a href="#l2.32"></a>
<span id="l2.33" class="plusline">+</span><a href="#l2.33"></a>
<span id="l2.34" class="plusline">+</span><a href="#l2.34"></a>
<span id="l2.35" class="plusline">+import java.net.*;</span><a href="#l2.35"></a>
<span id="l2.36" class="plusline">+</span><a href="#l2.36"></a>
<span id="l2.37" class="plusline">+public class UninitializedParent {</span><a href="#l2.37"></a>
<span id="l2.38" class="plusline">+    private static ClassLoader loader;</span><a href="#l2.38"></a>
<span id="l2.39" class="plusline">+    public static void main(String[] args) throws Exception {</span><a href="#l2.39"></a>
<span id="l2.40" class="plusline">+        System.setSecurityManager(new SecurityManager());</span><a href="#l2.40"></a>
<span id="l2.41" class="plusline">+</span><a href="#l2.41"></a>
<span id="l2.42" class="plusline">+        // Create an uninitialized class loader</span><a href="#l2.42"></a>
<span id="l2.43" class="plusline">+        try {</span><a href="#l2.43"></a>
<span id="l2.44" class="plusline">+            new ClassLoader(null) {</span><a href="#l2.44"></a>
<span id="l2.45" class="plusline">+                @Override</span><a href="#l2.45"></a>
<span id="l2.46" class="plusline">+                protected void finalize() {</span><a href="#l2.46"></a>
<span id="l2.47" class="plusline">+                    loader = this;</span><a href="#l2.47"></a>
<span id="l2.48" class="plusline">+                }</span><a href="#l2.48"></a>
<span id="l2.49" class="plusline">+            };</span><a href="#l2.49"></a>
<span id="l2.50" class="plusline">+        } catch (SecurityException exc) {</span><a href="#l2.50"></a>
<span id="l2.51" class="plusline">+            // Expected</span><a href="#l2.51"></a>
<span id="l2.52" class="plusline">+        }</span><a href="#l2.52"></a>
<span id="l2.53" class="plusline">+        System.gc();</span><a href="#l2.53"></a>
<span id="l2.54" class="plusline">+        System.runFinalization();</span><a href="#l2.54"></a>
<span id="l2.55" class="plusline">+</span><a href="#l2.55"></a>
<span id="l2.56" class="plusline">+        // if 'loader' isn't null, need to ensure that it can't be used as</span><a href="#l2.56"></a>
<span id="l2.57" class="plusline">+        // parent</span><a href="#l2.57"></a>
<span id="l2.58" class="plusline">+        if (loader != null) {</span><a href="#l2.58"></a>
<span id="l2.59" class="plusline">+            try {</span><a href="#l2.59"></a>
<span id="l2.60" class="plusline">+                // Create a class loader with 'loader' being the parent</span><a href="#l2.60"></a>
<span id="l2.61" class="plusline">+                URLClassLoader child = URLClassLoader.newInstance</span><a href="#l2.61"></a>
<span id="l2.62" class="plusline">+                    (new URL[0], loader);</span><a href="#l2.62"></a>
<span id="l2.63" class="plusline">+                throw new RuntimeException(&quot;Test Failed!&quot;);</span><a href="#l2.63"></a>
<span id="l2.64" class="plusline">+            } catch (SecurityException se) {</span><a href="#l2.64"></a>
<span id="l2.65" class="plusline">+                System.out.println(&quot;Test Passed: Exception thrown&quot;); </span><a href="#l2.65"></a>
<span id="l2.66" class="plusline">+            }</span><a href="#l2.66"></a>
<span id="l2.67" class="plusline">+        } else {</span><a href="#l2.67"></a>
<span id="l2.68" class="plusline">+            System.out.println(&quot;Test Passed: Loader is null&quot;);</span><a href="#l2.68"></a>
<span id="l2.69" class="plusline">+        }</span><a href="#l2.69"></a>
<span id="l2.70" class="plusline">+    }</span><a href="#l2.70"></a>
<span id="l2.71" class="plusline">+}</span><a href="#l2.71"></a></pre></div>
</div>
</div>

</div>
</div>


<div class="container"><div class="main footer">
&copy 2007, <script>document.write(new Date().getFullYear())</script> Oracle and/or its affiliates<br/>
<a href="http://openjdk.java.net/legal/tou/">Terms of Use</a>
&#183; <a href="http://www.oracle.com/us/legal/privacy/">Privacy</a>
&#183; <a href="https://openjdk.java.net/legal/openjdk-trademark-notice.html">Trademarks</a>
</div></div>

</body>
</html>

