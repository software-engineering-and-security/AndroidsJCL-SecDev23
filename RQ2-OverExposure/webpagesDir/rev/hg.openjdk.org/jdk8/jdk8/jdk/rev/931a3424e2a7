<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US">
<head>
<link rel="icon" href="/jdk8/jdk8/jdk/static/nanoduke.ico" type="image/png" />
<meta name="robots" content="index, nofollow" />
<link rel="stylesheet" href="/jdk8/jdk8/jdk/static/style-paper.css" type="text/css" />
<script type="text/javascript" src="/jdk8/jdk8/jdk/static/mercurial.js"></script>

<title>jdk8/jdk8/jdk: 931a3424e2a7</title>
</head>
<body>
<div class="container">
<div class="menu">
<div class="logo">
<img src="/jdk8/jdk8/jdk/static/duke_pipes.png" width=75 height=90 border=0 alt="Duke!" />
</div>
<ul>
 <li><a href="/jdk8/jdk8/jdk/shortlog/931a3424e2a7">log</a></li>
 <li><a href="/jdk8/jdk8/jdk/graph/931a3424e2a7">graph</a></li>
 <li><a href="/jdk8/jdk8/jdk/tags">tags</a></li>
 <li><a href="/jdk8/jdk8/jdk/bookmarks">bookmarks</a></li>
 <li><a href="/jdk8/jdk8/jdk/branches">branches</a></li>
</ul>
<ul>
 <li class="active">changeset</li>
 <li><a href="/jdk8/jdk8/jdk/raw-rev/931a3424e2a7">raw</a></li>
 <li><a href="/jdk8/jdk8/jdk/file/931a3424e2a7">browse</a></li>
</ul>
<ul>
 
<li>
<a href="/jdk8/jdk8/jdk/archive/931a3424e2a7.zip">zip</a>
</li>
<li>
<a href="/jdk8/jdk8/jdk/archive/931a3424e2a7.tar.gz">gz</a>
</li>
<li>
<a href="/jdk8/jdk8/jdk/archive/931a3424e2a7.tar.bz2">bz2</a>
</li>
</ul>
<ul>
 <li><a href="/jdk8/jdk8/jdk/help">help</a></li>
</ul>
</div>

<div class="main">

<h2 class="breadcrumb"><a href="/">OpenJDK</a> / <a href="/jdk8">jdk8</a> / <a href="/jdk8/jdk8">jdk8</a> / <a href="/jdk8/jdk8/jdk">jdk</a> </h2>
<h3>changeset 1826:931a3424e2a7   </h3>

<form class="search" action="/jdk8/jdk8/jdk/log">

<p><input name="rev" id="search1" type="text" size="30" /></p>
<div id="hint">Find changesets by keywords (author, files, the commit message), revision
number or hash, or <a href="/jdk8/jdk8/jdk/help/revsets">revset expression</a>.</div>
</form>

<div class="description">6636650: (cl) Resurrected ClassLoaders can still have children
Summary: Prevent classloader from resurrection
Reviewed-by: hawtin</div>

<table id="changesetEntry">
<tr>
 <th class="author">author</th>
 <td class="author">&#118;&#97;&#108;&#101;&#114;&#105;&#101;&#112;</td>
</tr>
<tr>
 <th class="date">date</th>
 <td class="date age">Thu, 20 Aug 2009 14:49:31 -0700</td></tr>
<tr>
 <th class="author">parents</th>
 <td class="author"><a href="/jdk8/jdk8/jdk/rev/cf559e499825">cf559e499825</a> </td>
</tr>
<tr>
 <th class="author">children</th>
 <td class="author"> <a href="/jdk8/jdk8/jdk/rev/e942a236baf8">e942a236baf8</a></td>
</tr>
<tr>
 <th class="files">files</th>
 <td class="files"><a href="/jdk8/jdk8/jdk/file/931a3424e2a7/src/share/classes/java/lang/ClassLoader.java">src/share/classes/java/lang/ClassLoader.java</a> </td>
</tr>
<tr>
  <th class="diffstat">diffstat</th>
  <td class="diffstat">
     1 files changed, 27 insertions(+), 58 deletions(-)

    <a id="diffstatexpand" href="javascript:toggleDiffstat()"/>[<tt>+</tt>]</a>
    <div id="diffstatdetails" style="display:none;">
      <a href="javascript:toggleDiffstat()"/>[<tt>-</tt>]</a>
      <p>
      <table class="stripes2">  <tr>
    <td class="diffstat-file"><a href="#l1.1">src/share/classes/java/lang/ClassLoader.java</a></td>
    <td class="diffstat-total" align="right">85</td>
    <td class="diffstat-graph">
      <span class="diffstat-add" style="width:31.7647058824%;">&nbsp;</span>
      <span class="diffstat-remove" style="width:68.2352941176%;">&nbsp;</span>
    </td>
  </tr>
</table>
    </div>
  </td>
</tr>
</table>

<div class="overflow">
<div class="sourcefirst linewraptoggle">line wrap: <a class="linewraplink" href="javascript:toggleLinewrap()">on</a></div>
<div class="sourcefirst"> line diff</div>
<div class="stripes2 diffblocks">
<div class="bottomline inc-lineno"><pre class="sourcelines wrap">
<span id="l1.1" class="minusline">--- a/src/share/classes/java/lang/ClassLoader.java	Thu Aug 20 12:46:43 2009 +0400</span><a href="#l1.1"></a>
<span id="l1.2" class="plusline">+++ b/src/share/classes/java/lang/ClassLoader.java	Thu Aug 20 14:49:31 2009 -0700</span><a href="#l1.2"></a>
<span id="l1.3" class="atline">@@ -186,11 +186,6 @@</span><a href="#l1.3"></a>
<span id="l1.4">         parallelLoaders.add(ClassLoader.class);</span><a href="#l1.4"></a>
<span id="l1.5">     }</span><a href="#l1.5"></a>
<span id="l1.6"> </span><a href="#l1.6"></a>
<span id="l1.7" class="minusline">-    // If initialization succeed this is set to true and security checks will</span><a href="#l1.7"></a>
<span id="l1.8" class="minusline">-    // succeed.  Otherwise the object is not initialized and the object is</span><a href="#l1.8"></a>
<span id="l1.9" class="minusline">-    // useless.</span><a href="#l1.9"></a>
<span id="l1.10" class="minusline">-    private final boolean initialized;</span><a href="#l1.10"></a>
<span id="l1.11" class="minusline">-</span><a href="#l1.11"></a>
<span id="l1.12">     // The parent class loader for delegation</span><a href="#l1.12"></a>
<span id="l1.13">     // Note: VM hardcoded the offset of this field, thus all new fields</span><a href="#l1.13"></a>
<span id="l1.14">     // must be added *after* it.</span><a href="#l1.14"></a>
<span id="l1.15" class="atline">@@ -232,6 +227,31 @@</span><a href="#l1.15"></a>
<span id="l1.16">     private final HashMap&lt;String, Package&gt; packages =</span><a href="#l1.16"></a>
<span id="l1.17">         new HashMap&lt;String, Package&gt;();</span><a href="#l1.17"></a>
<span id="l1.18"> </span><a href="#l1.18"></a>
<span id="l1.19" class="plusline">+    private static Void checkCreateClassLoader() {</span><a href="#l1.19"></a>
<span id="l1.20" class="plusline">+        SecurityManager security = System.getSecurityManager();</span><a href="#l1.20"></a>
<span id="l1.21" class="plusline">+        if (security != null) {</span><a href="#l1.21"></a>
<span id="l1.22" class="plusline">+            security.checkCreateClassLoader();</span><a href="#l1.22"></a>
<span id="l1.23" class="plusline">+        }</span><a href="#l1.23"></a>
<span id="l1.24" class="plusline">+        return null;</span><a href="#l1.24"></a>
<span id="l1.25" class="plusline">+    }</span><a href="#l1.25"></a>
<span id="l1.26" class="plusline">+</span><a href="#l1.26"></a>
<span id="l1.27" class="plusline">+    private ClassLoader(Void unused, ClassLoader parent) {</span><a href="#l1.27"></a>
<span id="l1.28" class="plusline">+        this.parent = parent;</span><a href="#l1.28"></a>
<span id="l1.29" class="plusline">+        if (parallelLoaders.contains(this.getClass())) {</span><a href="#l1.29"></a>
<span id="l1.30" class="plusline">+            parallelLockMap = new ConcurrentHashMap&lt;String, Object&gt;();</span><a href="#l1.30"></a>
<span id="l1.31" class="plusline">+            package2certs = new ConcurrentHashMap&lt;String, Certificate[]&gt;();</span><a href="#l1.31"></a>
<span id="l1.32" class="plusline">+            domains =</span><a href="#l1.32"></a>
<span id="l1.33" class="plusline">+                Collections.synchronizedSet(new HashSet&lt;ProtectionDomain&gt;());</span><a href="#l1.33"></a>
<span id="l1.34" class="plusline">+            assertionLock = new Object();</span><a href="#l1.34"></a>
<span id="l1.35" class="plusline">+        } else {</span><a href="#l1.35"></a>
<span id="l1.36" class="plusline">+            // no finer-grained lock; lock on the classloader instance</span><a href="#l1.36"></a>
<span id="l1.37" class="plusline">+            parallelLockMap = null;</span><a href="#l1.37"></a>
<span id="l1.38" class="plusline">+            package2certs = new Hashtable&lt;String, Certificate[]&gt;();</span><a href="#l1.38"></a>
<span id="l1.39" class="plusline">+            domains = new HashSet&lt;ProtectionDomain&gt;();</span><a href="#l1.39"></a>
<span id="l1.40" class="plusline">+            assertionLock = this;</span><a href="#l1.40"></a>
<span id="l1.41" class="plusline">+        }</span><a href="#l1.41"></a>
<span id="l1.42" class="plusline">+    }</span><a href="#l1.42"></a>
<span id="l1.43" class="plusline">+</span><a href="#l1.43"></a>
<span id="l1.44">     /**</span><a href="#l1.44"></a>
<span id="l1.45">      * Creates a new class loader using the specified parent class loader for</span><a href="#l1.45"></a>
<span id="l1.46">      * delegation.</span><a href="#l1.46"></a>
<span id="l1.47" class="atline">@@ -252,25 +272,7 @@</span><a href="#l1.47"></a>
<span id="l1.48">      * @since  1.2</span><a href="#l1.48"></a>
<span id="l1.49">      */</span><a href="#l1.49"></a>
<span id="l1.50">     protected ClassLoader(ClassLoader parent) {</span><a href="#l1.50"></a>
<span id="l1.51" class="minusline">-        SecurityManager security = System.getSecurityManager();</span><a href="#l1.51"></a>
<span id="l1.52" class="minusline">-        if (security != null) {</span><a href="#l1.52"></a>
<span id="l1.53" class="minusline">-            security.checkCreateClassLoader();</span><a href="#l1.53"></a>
<span id="l1.54" class="minusline">-        }</span><a href="#l1.54"></a>
<span id="l1.55" class="minusline">-        this.parent = parent;</span><a href="#l1.55"></a>
<span id="l1.56" class="minusline">-        if (parallelLoaders.contains(this.getClass())) {</span><a href="#l1.56"></a>
<span id="l1.57" class="minusline">-            parallelLockMap = new ConcurrentHashMap&lt;String, Object&gt;();</span><a href="#l1.57"></a>
<span id="l1.58" class="minusline">-            package2certs = new ConcurrentHashMap&lt;String, Certificate[]&gt;();</span><a href="#l1.58"></a>
<span id="l1.59" class="minusline">-            domains =</span><a href="#l1.59"></a>
<span id="l1.60" class="minusline">-                Collections.synchronizedSet(new HashSet&lt;ProtectionDomain&gt;());</span><a href="#l1.60"></a>
<span id="l1.61" class="minusline">-            assertionLock = new Object();</span><a href="#l1.61"></a>
<span id="l1.62" class="minusline">-        } else {</span><a href="#l1.62"></a>
<span id="l1.63" class="minusline">-            // no finer-grained lock; lock on the classloader instance</span><a href="#l1.63"></a>
<span id="l1.64" class="minusline">-            parallelLockMap = null;</span><a href="#l1.64"></a>
<span id="l1.65" class="minusline">-            package2certs = new Hashtable&lt;String, Certificate[]&gt;();</span><a href="#l1.65"></a>
<span id="l1.66" class="minusline">-            domains = new HashSet&lt;ProtectionDomain&gt;();</span><a href="#l1.66"></a>
<span id="l1.67" class="minusline">-            assertionLock = this;</span><a href="#l1.67"></a>
<span id="l1.68" class="minusline">-        }</span><a href="#l1.68"></a>
<span id="l1.69" class="minusline">-        initialized = true;</span><a href="#l1.69"></a>
<span id="l1.70" class="plusline">+        this(checkCreateClassLoader(), parent);</span><a href="#l1.70"></a>
<span id="l1.71">     }</span><a href="#l1.71"></a>
<span id="l1.72"> </span><a href="#l1.72"></a>
<span id="l1.73">     /**</span><a href="#l1.73"></a>
<span id="l1.74" class="atline">@@ -289,25 +291,7 @@</span><a href="#l1.74"></a>
<span id="l1.75">      *          of a new class loader.</span><a href="#l1.75"></a>
<span id="l1.76">      */</span><a href="#l1.76"></a>
<span id="l1.77">     protected ClassLoader() {</span><a href="#l1.77"></a>
<span id="l1.78" class="minusline">-        SecurityManager security = System.getSecurityManager();</span><a href="#l1.78"></a>
<span id="l1.79" class="minusline">-        if (security != null) {</span><a href="#l1.79"></a>
<span id="l1.80" class="minusline">-            security.checkCreateClassLoader();</span><a href="#l1.80"></a>
<span id="l1.81" class="minusline">-        }</span><a href="#l1.81"></a>
<span id="l1.82" class="minusline">-        this.parent = getSystemClassLoader();</span><a href="#l1.82"></a>
<span id="l1.83" class="minusline">-        if (parallelLoaders.contains(this.getClass())) {</span><a href="#l1.83"></a>
<span id="l1.84" class="minusline">-            parallelLockMap = new ConcurrentHashMap&lt;String, Object&gt;();</span><a href="#l1.84"></a>
<span id="l1.85" class="minusline">-            package2certs = new ConcurrentHashMap&lt;String, Certificate[]&gt;();</span><a href="#l1.85"></a>
<span id="l1.86" class="minusline">-            domains =</span><a href="#l1.86"></a>
<span id="l1.87" class="minusline">-                Collections.synchronizedSet(new HashSet&lt;ProtectionDomain&gt;());</span><a href="#l1.87"></a>
<span id="l1.88" class="minusline">-            assertionLock = new Object();</span><a href="#l1.88"></a>
<span id="l1.89" class="minusline">-        } else {</span><a href="#l1.89"></a>
<span id="l1.90" class="minusline">-            // no finer-grained lock; lock on the classloader instance</span><a href="#l1.90"></a>
<span id="l1.91" class="minusline">-            parallelLockMap = null;</span><a href="#l1.91"></a>
<span id="l1.92" class="minusline">-            package2certs = new Hashtable&lt;String, Certificate[]&gt;();</span><a href="#l1.92"></a>
<span id="l1.93" class="minusline">-            domains = new HashSet&lt;ProtectionDomain&gt;();</span><a href="#l1.93"></a>
<span id="l1.94" class="minusline">-            assertionLock = this;</span><a href="#l1.94"></a>
<span id="l1.95" class="minusline">-        }</span><a href="#l1.95"></a>
<span id="l1.96" class="minusline">-        initialized = true;</span><a href="#l1.96"></a>
<span id="l1.97" class="plusline">+        this(checkCreateClassLoader(), getSystemClassLoader());</span><a href="#l1.97"></a>
<span id="l1.98">     }</span><a href="#l1.98"></a>
<span id="l1.99"> </span><a href="#l1.99"></a>
<span id="l1.100">     // -- Class --</span><a href="#l1.100"></a>
<span id="l1.101" class="atline">@@ -742,7 +726,6 @@</span><a href="#l1.101"></a>
<span id="l1.102">                                          ProtectionDomain protectionDomain)</span><a href="#l1.102"></a>
<span id="l1.103">         throws ClassFormatError</span><a href="#l1.103"></a>
<span id="l1.104">     {</span><a href="#l1.104"></a>
<span id="l1.105" class="minusline">-        check();</span><a href="#l1.105"></a>
<span id="l1.106">         protectionDomain = preDefineClass(name, protectionDomain);</span><a href="#l1.106"></a>
<span id="l1.107"> </span><a href="#l1.107"></a>
<span id="l1.108">         Class c = null;</span><a href="#l1.108"></a>
<span id="l1.109" class="atline">@@ -826,8 +809,6 @@</span><a href="#l1.109"></a>
<span id="l1.110">                                          ProtectionDomain protectionDomain)</span><a href="#l1.110"></a>
<span id="l1.111">         throws ClassFormatError</span><a href="#l1.111"></a>
<span id="l1.112">     {</span><a href="#l1.112"></a>
<span id="l1.113" class="minusline">-        check();</span><a href="#l1.113"></a>
<span id="l1.114" class="minusline">-</span><a href="#l1.114"></a>
<span id="l1.115">         int len = b.remaining();</span><a href="#l1.115"></a>
<span id="l1.116"> </span><a href="#l1.116"></a>
<span id="l1.117">         // Use byte[] if not a direct ByteBufer:</span><a href="#l1.117"></a>
<span id="l1.118" class="atline">@@ -972,7 +953,6 @@</span><a href="#l1.118"></a>
<span id="l1.119">      * @see  #defineClass(String, byte[], int, int)</span><a href="#l1.119"></a>
<span id="l1.120">      */</span><a href="#l1.120"></a>
<span id="l1.121">     protected final void resolveClass(Class&lt;?&gt; c) {</span><a href="#l1.121"></a>
<span id="l1.122" class="minusline">-        check();</span><a href="#l1.122"></a>
<span id="l1.123">         resolveClass0(c);</span><a href="#l1.123"></a>
<span id="l1.124">     }</span><a href="#l1.124"></a>
<span id="l1.125"> </span><a href="#l1.125"></a>
<span id="l1.126" class="atline">@@ -1003,7 +983,6 @@</span><a href="#l1.126"></a>
<span id="l1.127">     protected final Class&lt;?&gt; findSystemClass(String name)</span><a href="#l1.127"></a>
<span id="l1.128">         throws ClassNotFoundException</span><a href="#l1.128"></a>
<span id="l1.129">     {</span><a href="#l1.129"></a>
<span id="l1.130" class="minusline">-        check();</span><a href="#l1.130"></a>
<span id="l1.131">         ClassLoader system = getSystemClassLoader();</span><a href="#l1.131"></a>
<span id="l1.132">         if (system == null) {</span><a href="#l1.132"></a>
<span id="l1.133">             if (!checkName(name))</span><a href="#l1.133"></a>
<span id="l1.134" class="atline">@@ -1016,7 +995,6 @@</span><a href="#l1.134"></a>
<span id="l1.135">     private Class findBootstrapClass0(String name)</span><a href="#l1.135"></a>
<span id="l1.136">         throws ClassNotFoundException</span><a href="#l1.136"></a>
<span id="l1.137">     {</span><a href="#l1.137"></a>
<span id="l1.138" class="minusline">-        check();</span><a href="#l1.138"></a>
<span id="l1.139">         if (!checkName(name))</span><a href="#l1.139"></a>
<span id="l1.140">             throw new ClassNotFoundException(name);</span><a href="#l1.140"></a>
<span id="l1.141">         return findBootstrapClass(name);</span><a href="#l1.141"></a>
<span id="l1.142" class="atline">@@ -1025,13 +1003,6 @@</span><a href="#l1.142"></a>
<span id="l1.143">     private native Class findBootstrapClass(String name)</span><a href="#l1.143"></a>
<span id="l1.144">         throws ClassNotFoundException;</span><a href="#l1.144"></a>
<span id="l1.145"> </span><a href="#l1.145"></a>
<span id="l1.146" class="minusline">-    // Check to make sure the class loader has been initialized.</span><a href="#l1.146"></a>
<span id="l1.147" class="minusline">-    private void check() {</span><a href="#l1.147"></a>
<span id="l1.148" class="minusline">-        if (!initialized) {</span><a href="#l1.148"></a>
<span id="l1.149" class="minusline">-            throw new SecurityException(&quot;ClassLoader object not initialized&quot;);</span><a href="#l1.149"></a>
<span id="l1.150" class="minusline">-        }</span><a href="#l1.150"></a>
<span id="l1.151" class="minusline">-    }</span><a href="#l1.151"></a>
<span id="l1.152" class="minusline">-</span><a href="#l1.152"></a>
<span id="l1.153">     /**</span><a href="#l1.153"></a>
<span id="l1.154">      * Returns the class with the given &lt;a href=&quot;#name&quot;&gt;binary name&lt;/a&gt; if this</span><a href="#l1.154"></a>
<span id="l1.155">      * loader has been recorded by the Java virtual machine as an initiating</span><a href="#l1.155"></a>
<span id="l1.156" class="atline">@@ -1047,7 +1018,6 @@</span><a href="#l1.156"></a>
<span id="l1.157">      * @since  1.1</span><a href="#l1.157"></a>
<span id="l1.158">      */</span><a href="#l1.158"></a>
<span id="l1.159">     protected final Class&lt;?&gt; findLoadedClass(String name) {</span><a href="#l1.159"></a>
<span id="l1.160" class="minusline">-        check();</span><a href="#l1.160"></a>
<span id="l1.161">         if (!checkName(name))</span><a href="#l1.161"></a>
<span id="l1.162">             return null;</span><a href="#l1.162"></a>
<span id="l1.163">         return findLoadedClass0(name);</span><a href="#l1.163"></a>
<span id="l1.164" class="atline">@@ -1068,7 +1038,6 @@</span><a href="#l1.164"></a>
<span id="l1.165">      * @since  1.1</span><a href="#l1.165"></a>
<span id="l1.166">      */</span><a href="#l1.166"></a>
<span id="l1.167">     protected final void setSigners(Class&lt;?&gt; c, Object[] signers) {</span><a href="#l1.167"></a>
<span id="l1.168" class="minusline">-        check();</span><a href="#l1.168"></a>
<span id="l1.169">         c.setSigners(signers);</span><a href="#l1.169"></a>
<span id="l1.170">     }</span><a href="#l1.170"></a>
<span id="l1.171"> </span><a href="#l1.171"></a></pre></div>
</div>
</div>

</div>
</div>


<div class="container"><div class="main footer">
&copy 2007, <script>document.write(new Date().getFullYear())</script> Oracle and/or its affiliates<br/>
<a href="http://openjdk.java.net/legal/tou/">Terms of Use</a>
&#183; <a href="http://www.oracle.com/us/legal/privacy/">Privacy</a>
&#183; <a href="https://openjdk.java.net/legal/openjdk-trademark-notice.html">Trademarks</a>
</div></div>

</body>
</html>

